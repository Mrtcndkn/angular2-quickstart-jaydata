{"version":3,"sources":["oDataProvider.js","src/Types/StorageProviders/oData/SaveStrategies/batch.js","src/Types/StorageProviders/oData/SaveStrategies/empty.js","src/Types/StorageProviders/oData/SaveStrategies/single.js","src/Types/StorageProviders/oData/index.js","src/Types/StorageProviders/oData/oDataCompiler.js","src/Types/StorageProviders/oData/src/Types/StorageProviders/oData/oDataConverter.js","src/Types/StorageProviders/oData/oDataIncludeCompiler.js","src/Types/StorageProviders/oData/oDataOrderCompiler.js","src/Types/StorageProviders/oData/oDataPagingCompiler.js","src/Types/StorageProviders/oData/oDataProjectionCompiler.js","src/Types/StorageProviders/oData/src/Types/StorageProviders/oData/oDataProvider.js","src/Types/StorageProviders/oData/oDataRequestActivities.js","src/Types/StorageProviders/oData/oDataWhereCompiler.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","$data","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"_dereq_","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","strategy","undefined","_core","_core2","name","condition","provider","convertedItems","disabled","providerConfiguration","disableBatch","defaults","OData","requests","getItems","save","callBack","that","items","map","it","request","build","get","requestData","requestUri","oDataServiceHost","method","data","__batchRequests","__changeRequests","headers","response","statusCode","result","__batchResponses","__changeResponses","errors","item","getByResponse","Entity","reload_fromResponse","setProcessed","push","parseError","error","Exception","success","oData","batch","batchHandler","useJsonLight","appendBasicAuth","user","password","withCredentials","context","prepareRequest","apply","jaydata/core",2,3,"doSave","index","done","err",4,"_oDataConverter","_oDataProvider","_oDataCompiler","_oDataWhereCompiler","_oDataIncludeCompiler","_oDataOrderCompiler","_oDataPagingCompiler","_oDataProjectionCompiler","./oDataCompiler.js","./oDataConverter.js","./oDataIncludeCompiler.js","./oDataOrderCompiler.js","./oDataPagingCompiler.js","./oDataProjectionCompiler.js","./oDataProvider.js","./oDataWhereCompiler.js",5,"$C","Expressions","EntityExpressionVisitor","constructor","includes","mainEntitySet","compile","query","storageProvider","defaultType","getEntitySetFromElementType","queryFragments","urlText","Visit","expression","$expand","toString","modelBinderConfig","modelBinder","Container","createModelBinderConfigCompiler","queryText","addAmp","$funcParams","postData","withInlineCount","isBatchExecuteQuery","_isBatchExecuteQuery","subQueries","_subQueries","params","_getComplitedData","VisitOrderExpression","source","orderCompiler","createoDataOrderCompiler","VisitPagingExpression","pagingCompiler","createoDataPagingCompiler","VisitIncludeExpression","includeCompiler","createoDataIncludeCompiler","includeContext","selector","VisitFindExpression","subMember","memberName","param","typeName","resolveName","type","converter","fieldConverter","toDb","escape","VisitProjectionExpression","projectionCompiler","createoDataProjectionCompiler","VisitFilterExpression","filterCompiler","createoDataWhereCompiler","VisitInlineCountExpression","maxDataServiceVersion","VisitEntitySetExpression","instance","tableName","VisitServiceOperationExpression","boundItem","entitySet","getEntityKeysValue","cfg","namespace","serviceName","serviceConfig","VisitBatchDeleteExpression","VisitConstantExpression","fullName","paramConfig","filter","p","useAlias","useParameterAlias","paramValue","paramName","VisitCountExpression","VisitBatchExecuteQueryExpression","members","queryable","compiler","storageProviders","oDataCompiler","compiled",6,"_atob","_atob2","oDataWebApi","oDataConverter","fromDb","$data.Enum","v","enumType","convertTo","$data.Byte","proxyConverter","$data.SByte","$data.Decimal","Decimal","$data.Float","$data.Int16","$data.Int64","Int64","$data.ObjectID","$data.Integer","$data.Int32","$data.Number","$data.Date","dbData","Date","substring","parseInt","substr","indexOf","match","$data.DateTimeOffset","$data.Time","Time","$data.Day","$data.Duration","$data.String","$data.Boolean","$data.Blob","$data.Object","JSON","parse","$data.Array","Array","$data.GeographyPoint","GeographyPoint","$data.GeographyLineString","GeographyLineString","$data.GeographyPolygon","GeographyPolygon","$data.GeographyMultiPoint","GeographyMultiPoint","$data.GeographyMultiLineString","GeographyMultiLineString","$data.GeographyMultiPolygon","GeographyMultiPolygon","$data.GeographyCollection","GeographyCollection","$data.GeometryPoint","GeometryPoint","$data.GeometryLineString","GeometryLineString","$data.GeometryPolygon","GeometryPolygon","$data.GeometryMultiPoint","GeometryMultiPoint","$data.GeometryMultiLineString","GeometryMultiLineString","$data.GeometryMultiPolygon","GeometryMultiPolygon","$data.GeometryCollection","GeometryCollection","$data.Guid","guid","getEnumName","$data.Entity","toISOString","replace","Blob","toBase64","def","elementType","values","arguments","stringify","d","encodeURIComponent","date","text","bool","b","join","GeographyBase","stringifyToUrl","GeometryBase","unescape","c","config","resolveType","converters","toLowerCase","lastIndexOf","test","slice","parseGuid","isAssignableTo","isArray","DateTimeOffset","Day","Duration","createFromHexString","parseFromString","xmlEscape","simple",7,"_classCallCheck","Constructor","TypeError","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","ODataIncludeFragment","$operators","operator","j","path","_createIncludePath","includedFragment","_setImplicitMap","inc","split","current","included","__implicit","includeFragment","$select","VisitParametricQueryExpression","AssociationInfoExpression","VisitAssociationInfoExpression","propName","associationInfo","FromPropertyName","includePath","currentPath","some","include","ToType","VisitFrameOperationExpression","opDef","operation","memberDefinition","includeFrameName","opName","paramCounter","parameters","args","arg","compilerType","frameContext","Queryable","preparator","createQueryExpressionCreator","entityContext","prep_expression","implementation",8,"oDataWhereCompiler","orderContext","nodeType","ExpressionType","OrderByDescending","VisitEntityFieldExpression","VisitComplexTypeExpression","VisitEntityExpression","VisitMemberInfoExpression","VisitEntityFieldOperationExpression","Guard","requireType","MemberInfoExpression","mapTo","forEach","VisitEntityFunctionOperationExpression","ConstantExpression","VisitContextFunctionOperationExpression",9,"pagingContext","amount","Skip","Take","raise",10,"hasObjectLiteral","modelBinderMapping","mapping","m","EntityExpression","EntitySetExpression","pop","addInclude","VisitObjectLiteralExpression","member","VisitObjectFieldExpression","propertyName","EntityFieldExpression","storageModel","_storageModel","getStorageModel","definedBy","isComplexProperty","ComplexTypes","complexProperty","addImplicitMap","ComplexTypeExpression","isComplexField","checkODataMode",11,"_interopRequireWildcard","newObj","hasOwnProperty","_datajsPatch","_typeof","Symbol","iterator","_jaydataOdatajs","odatajs","_oDataRequestActivities","activities","_empty","_single","_batch","__global","datajs","jsonHandler","version","Trace","log","oldread","defaultHandler","read","contentType","dataServiceVersion","oldwrite","write","withReferenceMethods","eTagAny","enableDeepSave","disableCompltexTypeMapping","_checkODataMode","functionName","Base","_items","_entities","add","changedItem","countable","entity","itemIndex","maxItemIndex","references","SetHeaderProperty","addItemReference","reference","getItem","getItemIndex","idx","removed","onlyAvailable","remove","_indexCalculated","_dataForResult","isProcessed","StorageProviderBase","ctx","SqlCommands","typeSystem","extend","dbCreation","DbCreationType","DropTableIfChanged","serviceUrl","UpdateMethod","_buildDbType_generateConvertToFunction","buildDbType_generateConvertToFunction","_buildDbType_modifyInstanceDefinition","buildDbType_modifyInstanceDefinition","fixkDataServiceVersions","setDataServiceVersionToMax","initializeStore","PromiseHandlerBase","createCallbackSettings","DropAllExistingTables","logicalEntity","dbInstance","PhysicalType","entityState","memberDefinitions","getPublicMappedProperties","property","initData","Associations","association","FromMultiplicity","ToMultiplicity","refValue","rv","contentId","EntityState","Modified","sMod","getType","tblName","TableName","pk","__metadata","uri","__convertedRefence","cmpType","executeQuery","sql","_compile","countProperty","textStatus","jqXHR","body","processSuccess","rawDataList","cnt","Integer","__count","Number","valueOf","resp","enableJSONP","enableJsonpCallback","saveChanges","changedItems","saveInternal","independentBlocks","buildIndependentBlocks","_checkDeepSave","_buildSaveData","actionMode","saveStrategySelector","saveStrategies","saveAction","_discoverSaveOrder","entityItems","entityInfo","visited","entityQueue","discoveredEntities","process","currentEntity","info","visiting","referredBy","concat","dependentOn","ref","refIndex","deepParent","parent","currentItem","shift","discover","innerChangeItem","Added","additionalDependentOn","RequestManager","independentItem","RequestBuilder","SetUrl","_buildRequestObject","EntityState_20","convertedItem","SetMethod","AppendUrl","save_getInitData","EntityState_30","addETagHeader","EntityState_40","ClearRequestData","memDef","propType","computed","inverseProperty","concurrencyMode","ConcurrencyMode","Fixed","aeType","arrayProperty","ap","aitem","isNullOrUndefined","etypeName","econverter","isComplex","isDeep","physicalData","hasSavedProperty","asArray","memdef","propertyConversationSelector","kind","MemberTypes","_complexPropertySelector","_propertySelector","navProperty","_navigationPropertySelector","propertyConversationStrategies","notMapped","_propertyIsChanged","_this","navigationValue","navItem","_processDeepSaveItems","_simpleNavigationPropertySelector","navigationEntity","referencedItems","deepItem","referencedRequest","changedProperties","SetProperty","reqItem","additionalRequest","req","targetItem","getEntityUrlReference","refItem","deepSave","deepSaveArray","navigation","complex","innerRequest","headerValue","getTraceString","supportedDataTypes","String","Boolean","Guid","Byte","SByte","Float","Int16","Int32","supportedBinaryOperators","equal","dataType","allowedIn","FilterExpression","OrderExpression","notEqual","equalTyped","notEqualTyped","greaterThan","greaterThanOrEqual","lessThan","lessThenOrEqual","or","and","divide","multiply","subtract","modulo","in","supportedUnaryOperators","not","supportedFieldOperations","contains","startsWith","endsWith","allowedType","ProjectionExpression","fixedDataType","strLength","baseIndex","optional","toUpperCase","trim","day","hour","minute","month","second","year","round","floor","ceiling","distance","intersects","supportedSetOperations","IncludeExpression","frameType","toArray","single","invokable","SomeExpression","every","EveryExpression","take","PagingExpression","skip","orderBy","orderByDescending","frameTypeFactory","first","batchDelete","InlineCountExpression","find","supportedContextOperation","batchExecuteQuery","resolveTypeOperations","entityType","getMemberDefinition","IsSideEffecting","returnType","resolveSetOperations","esDef","ContextType","ItemName","actions","MemberDefinition","translateDefinition","resolveContextOperations","keyValue","memDefs","getKeyProperties","field","getFieldUrl","fieldName","keyPart","servicehost","message","errorObj","Authorization","__encodeBase64","val","chr1","chr2","enc1","enc2","enc3","b64array","input","base64","chr3","enc4","charCodeAt","isNaN","charAt","registerProvider","oDataProvider","./SaveStrategies/batch","./SaveStrategies/empty","./SaveStrategies/single","./oDataRequestActivities.js",12,"_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","create","setPrototypeOf","__proto__","RequestActivity","_context","_request","_activities","SetRequestActivity","_RequestActivity","_this2","getPrototypeOf","SetRequestProperty","_SetRequestActivity","SetDataProperty","_SetRequestActivity2","_SetRequestActivity3","_SetRequestProperty","url","_SetUrl","_SetRequestProperty2","_SetDataProperty","SetNavigationProperty","_SetDataProperty2","_RequestActivity2",13,"lambdaPrefix","VisitUnaryExpression","resolution","operand","VisitSimpleBinaryExpression","right","orResolution","eqResolution","idValue","idCheck","createSimpleBinaryExpression","left","Equal","Or","temp","VisitQueryParameterExpression","lambda","frameExpression"],"mappings":"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","file":"oDataProvider.min.js","sourcesContent":["﻿// JayData 1.5.2 CTP\r\n// Dual licensed under MIT and GPL v2\r\n// Copyright JayStack Technologies (http://jaydata.org/licensing)\r\n//\r\n// JayData is a standards-based, cross-platform Javascript library and a set of\r\n// practices to access and manipulate data from various online and offline sources.\r\n//\r\n// Credits:\r\n//     Hajnalka Battancs, Dániel József, János Roden, László Horváth, Péter Nochta\r\n//     Péter Zentai, Róbert Bónay, Szabolcs Czinege, Viktor Borza, Viktor Lázár,\r\n//     Zoltán Gyebrovszki, Gábor Dolla\r\n//\r\n// More info: http://jaydata.org\r\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.$data = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.strategy = undefined;\n\nvar _core = _dereq_('jaydata/core');\n\nvar _core2 = _interopRequireDefault(_core);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar strategy = {\n    name: 'batch',\n    condition: function condition(provider, convertedItems) {\n        var disabled = false;\n        if (typeof provider.providerConfiguration.disableBatch !== 'undefined') {\n            disabled = !!provider.providerConfiguration.disableBatch;\n        } else {\n            disabled = !!_core2.default.defaults.OData.disableBatch;\n        }\n\n        if (!disabled) {\n            var requests = convertedItems.getItems();\n            return requests.length > 1;\n        }\n\n        return false;\n    },\n    save: function save(provider, convertedItems, callBack) {\n        var that = provider;\n        var items = convertedItems.getItems();\n        var requests = items.map(function (it) {\n            return it.request.build().get();\n        });\n\n        var requestData = [{\n            requestUri: that.providerConfiguration.oDataServiceHost + \"/$batch\",\n            method: \"POST\",\n            data: {\n                __batchRequests: [{ __changeRequests: requests }]\n            },\n            headers: {}\n        }, function (data, response) {\n            if (response.statusCode == 200 || response.statusCode == 202) {\n                var result = data.__batchResponses[0].__changeResponses;\n                var errors = [];\n\n                for (var i = 0; i < result.length; i++) {\n                    if (result[i].statusCode >= 200 && result[i].statusCode < 300) {\n                        var item = convertedItems.getByResponse(result[i], i);\n                        if (item instanceof _core2.default.Entity && result[i].statusCode != 204) {\n                            that.reload_fromResponse(item, result[i].data, result[i]);\n                            convertedItems.setProcessed(item);\n                        }\n                    } else {\n                        errors.push(that.parseError(result[i]));\n                    }\n                }\n                if (errors.length > 0) {\n                    if (errors.length === 1) {\n                        callBack.error(errors[0]);\n                    } else {\n                        callBack.error(new _core.Exception('See inner exceptions', 'Batch failed', errors));\n                    }\n                } else if (callBack.success) {\n                    callBack.success(convertedItems.length);\n                }\n            } else {\n                callBack.error(that.parseError(response));\n            }\n        }, function (e) {\n            callBack.error(that.parseError(e));\n        }, that.oData.batch.batchHandler];\n\n        if (typeof that.providerConfiguration.useJsonLight !== 'undefined') {\n            requestData[0].useJsonLight = that.providerConfiguration.useJsonLight;\n        }\n\n        that.appendBasicAuth(requestData[0], that.providerConfiguration.user, that.providerConfiguration.password, that.providerConfiguration.withCredentials);\n\n        that.context.prepareRequest.call(that, requestData);\n        that.oData.request.apply(that, requestData);\n    }\n};\n\nexports.strategy = strategy;\n\n},{\"jaydata/core\":\"jaydata/core\"}],2:[function(_dereq_,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar strategy = {\n    name: 'empty',\n    condition: function condition(provider, convertedItems) {\n        return true;\n    },\n    save: function save(provider, convertedItems, callBack) {\n        callBack.success(0);\n    }\n};\n\nexports.strategy = strategy;\n\n},{}],3:[function(_dereq_,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.strategy = undefined;\n\nvar _core = _dereq_('jaydata/core');\n\nvar _core2 = _interopRequireDefault(_core);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar strategy = {\n    name: 'single',\n    condition: function condition(provider, convertedItems) {\n        var requests = convertedItems.getItems();\n        return requests.length > 0;\n    },\n    save: function save(provider, convertedItems, callBack) {\n        var that = provider;\n        var items = convertedItems.getItems();\n\n        var doSave = function doSave(items, index, done) {\n            var item = items[index];\n            if (!item) return done();\n\n            var request = item.request.build().get();\n            var requestData = [request, function (data, response) {\n                if (response.statusCode >= 200 && response.statusCode < 300) {\n                    var item = convertedItems.getByResponse(response, index);\n                    if (item instanceof _core2.default.Entity && response.statusCode != 204) {\n                        that.reload_fromResponse(item, data, response);\n                        convertedItems.setProcessed(item);\n                    }\n\n                    doSave(items, ++index, done);\n                } else {\n                    done(response);\n                }\n            }, done];\n\n            that.appendBasicAuth(requestData[0], that.providerConfiguration.user, that.providerConfiguration.password, that.providerConfiguration.withCredentials);\n            that.context.prepareRequest.call(that, requestData);\n            that.oData.request.apply(that, requestData);\n        };\n\n        doSave(items, 0, function (err, result) {\n            if (err) return callBack.error(that.parseError(err));\n            callBack.success(result);\n        });\n    }\n};\n\nexports.strategy = strategy;\n\n},{\"jaydata/core\":\"jaydata/core\"}],4:[function(_dereq_,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _core = _dereq_('jaydata/core');\n\nvar _core2 = _interopRequireDefault(_core);\n\nvar _oDataConverter = _dereq_('./oDataConverter.js');\n\nvar _oDataConverter2 = _interopRequireDefault(_oDataConverter);\n\nvar _oDataProvider = _dereq_('./oDataProvider.js');\n\nvar _oDataProvider2 = _interopRequireDefault(_oDataProvider);\n\nvar _oDataCompiler = _dereq_('./oDataCompiler.js');\n\nvar _oDataCompiler2 = _interopRequireDefault(_oDataCompiler);\n\nvar _oDataWhereCompiler = _dereq_('./oDataWhereCompiler.js');\n\nvar _oDataWhereCompiler2 = _interopRequireDefault(_oDataWhereCompiler);\n\nvar _oDataIncludeCompiler = _dereq_('./oDataIncludeCompiler.js');\n\nvar _oDataIncludeCompiler2 = _interopRequireDefault(_oDataIncludeCompiler);\n\nvar _oDataOrderCompiler = _dereq_('./oDataOrderCompiler.js');\n\nvar _oDataOrderCompiler2 = _interopRequireDefault(_oDataOrderCompiler);\n\nvar _oDataPagingCompiler = _dereq_('./oDataPagingCompiler.js');\n\nvar _oDataPagingCompiler2 = _interopRequireDefault(_oDataPagingCompiler);\n\nvar _oDataProjectionCompiler = _dereq_('./oDataProjectionCompiler.js');\n\nvar _oDataProjectionCompiler2 = _interopRequireDefault(_oDataProjectionCompiler);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _core2.default;\nmodule.exports = exports['default'];\n\n},{\"./oDataCompiler.js\":5,\"./oDataConverter.js\":6,\"./oDataIncludeCompiler.js\":7,\"./oDataOrderCompiler.js\":8,\"./oDataPagingCompiler.js\":9,\"./oDataProjectionCompiler.js\":10,\"./oDataProvider.js\":11,\"./oDataWhereCompiler.js\":13,\"jaydata/core\":\"jaydata/core\"}],5:[function(_dereq_,module,exports){\n'use strict';\n\nvar _core = _dereq_('jaydata/core');\n\nvar _core2 = _interopRequireDefault(_core);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n(0, _core.$C)('$data.storageProviders.oData.oDataCompiler', _core2.default.Expressions.EntityExpressionVisitor, null, {\n    constructor: function constructor() {\n        this.context = {};\n        this.provider = {};\n        //this.logicalType = null;\n        this.includes = null;\n        this.mainEntitySet = null;\n    },\n    compile: function compile(query) {\n\n        this.provider = query.context.storageProvider;\n        this.context = query.context;\n\n        if (query.defaultType) {\n            this.mainEntitySet = query.context.getEntitySetFromElementType(query.defaultType);\n        }\n\n        var queryFragments = { urlText: \"\" };\n\n        this.Visit(query.expression, queryFragments);\n        if (queryFragments.$expand) {\n            queryFragments.$expand = queryFragments.$expand.toString();\n        }\n\n        query.modelBinderConfig = {};\n        var modelBinder = _core.Container.createModelBinderConfigCompiler(query, this.includes, true);\n        modelBinder.Visit(query.expression);\n\n        var queryText = queryFragments.urlText;\n        var addAmp = false;\n\n        if (queryFragments.$funcParams) {\n            queryText += \"(\" + queryFragments.$funcParams + \")\";\n        }\n\n        for (var name in queryFragments) {\n            if (name != \"urlText\" && name != \"actionPack\" && name != \"data\" && name != \"lambda\" && name != \"method\" && name != \"postData\" && name != \"_isBatchExecuteQuery\" && name != \"_subQueries\" && name != \"$funcParams\" && queryFragments[name] != \"\") {\n\n                if (addAmp) {\n                    queryText += \"&\";\n                } else {\n                    queryText += \"?\";\n                }\n                addAmp = true;\n                if (name != \"$urlParams\") {\n                    queryText += name + '=' + queryFragments[name];\n                } else {\n                    queryText += queryFragments[name];\n                }\n            }\n        }\n        query.queryText = queryText;\n        query.postData = queryFragments.postData;\n        var result = {\n            queryText: queryText,\n            withInlineCount: '$inlinecount' in queryFragments || '$count' in queryFragments,\n            method: queryFragments.method || 'GET',\n            postData: queryFragments.postData,\n            isBatchExecuteQuery: queryFragments._isBatchExecuteQuery,\n            subQueries: queryFragments._subQueries,\n            params: []\n        };\n\n        query._getComplitedData = function () {\n            return result;\n        };\n\n        return result;\n    },\n    VisitOrderExpression: function VisitOrderExpression(expression, context) {\n        this.Visit(expression.source, context);\n\n        var orderCompiler = _core.Container.createoDataOrderCompiler(this.provider);\n        orderCompiler.compile(expression, context);\n    },\n    VisitPagingExpression: function VisitPagingExpression(expression, context) {\n        this.Visit(expression.source, context);\n\n        var pagingCompiler = _core.Container.createoDataPagingCompiler(this.provider);\n        pagingCompiler.compile(expression, context);\n    },\n    VisitIncludeExpression: function VisitIncludeExpression(expression, context) {\n        this.Visit(expression.source, context);\n\n        var includeCompiler = _core.Container.createoDataIncludeCompiler(this.provider);\n        this.includes = this.includes || [];\n        var includeContext = { data: context[\"$expand\"], includes: this.includes };\n        includeCompiler.compile(expression.selector, includeContext);\n        context[\"$expand\"] = includeContext.data;\n    },\n    VisitFindExpression: function VisitFindExpression(expression, context) {\n        this.Visit(expression.source, context);\n\n        if (expression.subMember) {\n            context.urlText += \"/\" + expression.subMember.memberName;\n        }\n\n        context.urlText += '(';\n        if (expression.params.length === 1) {\n            var param = expression.params[0];\n            var typeName = _core.Container.resolveName(param.type);\n\n            var converter = this.provider.fieldConverter.toDb[typeName];\n            var value = converter ? converter(param.value) : param.value;\n\n            converter = this.provider.fieldConverter.escape[typeName];\n            value = converter ? converter(param.value) : param.value;\n            context.urlText += value;\n        } else {\n            for (var i = 0; i < expression.params.length; i++) {\n                var param = expression.params[i];\n                var typeName = _core.Container.resolveName(param.type);\n\n                var converter = this.provider.fieldConverter.toDb[typeName];\n                var value = converter ? converter(param.value) : param.value;\n\n                converter = this.provider.fieldConverter.escape[typeName];\n                value = converter ? converter(param.value) : param.value;\n\n                if (i > 0) context.urlText += ',';\n                context.urlText += param.name + '=' + value;\n            }\n        }\n        context.urlText += ')';\n    },\n    VisitProjectionExpression: function VisitProjectionExpression(expression, context) {\n        this.Visit(expression.source, context);\n\n        var projectionCompiler = _core.Container.createoDataProjectionCompiler(this.provider);\n        projectionCompiler.compile(expression, context);\n    },\n    VisitFilterExpression: function VisitFilterExpression(expression, context) {\n        ///<param name=\"expression\" type=\"$data.Expressions.FilterExpression\" />\n\n        this.Visit(expression.source, context);\n\n        var filterCompiler = _core.Container.createoDataWhereCompiler(this.provider);\n        context.data = \"\";\n        filterCompiler.compile(expression.selector, context);\n        context[\"$filter\"] = context.data;\n        context.data = \"\";\n    },\n    VisitInlineCountExpression: function VisitInlineCountExpression(expression, context) {\n        this.Visit(expression.source, context);\n        if (this.provider.providerConfiguration.maxDataServiceVersion === \"4.0\") {\n            context[\"$count\"] = expression.selector.value === 'allpages';\n        } else {\n            context[\"$inlinecount\"] = expression.selector.value;\n        }\n    },\n    VisitEntitySetExpression: function VisitEntitySetExpression(expression, context) {\n        context.urlText += \"/\" + expression.instance.tableName;\n        //this.logicalType = expression.instance.elementType;\n        if (expression.params) {\n            for (var i = 0; i < expression.params.length; i++) {\n                this.Visit(expression.params[i], context);\n            }\n        }\n    },\n    VisitServiceOperationExpression: function VisitServiceOperationExpression(expression, context) {\n        if (expression.boundItem) {\n            context.urlText += \"/\" + expression.boundItem.entitySet.tableName;\n            if (expression.boundItem.data instanceof _core2.default.Entity) {\n                context.urlText += '(' + this.provider.getEntityKeysValue(expression.boundItem) + ')';\n            }\n        }\n        context.urlText += \"/\" + (expression.cfg.namespace ? expression.cfg.namespace + \".\" + expression.cfg.serviceName : expression.cfg.serviceName);\n        context.method = context.method || expression.cfg.method;\n\n        //this.logicalType = expression.returnType;\n        if (expression.params) {\n            context.serviceConfig = expression.cfg;\n            for (var i = 0; i < expression.params.length; i++) {\n                this.Visit(expression.params[i], context);\n            }\n            delete context.serviceConfig;\n        }\n    },\n    VisitBatchDeleteExpression: function VisitBatchDeleteExpression(expression, context) {\n        this.Visit(expression.source, context);\n        context.urlText += '/$batchDelete';\n        context.method = 'DELETE';\n    },\n\n    VisitConstantExpression: function VisitConstantExpression(expression, context) {\n        var typeName = _core.Container.resolveName(expression.type);\n        if (expression.value instanceof _core2.default.Entity) typeName = _core2.default.Entity.fullName;\n\n        var converter = this.provider.fieldConverter.toDb[typeName];\n        var value = converter ? converter(expression.value, expression) : expression.value;\n\n        if (context.method === 'GET' || !context.method) {\n            converter = this.provider.fieldConverter.escape[typeName];\n            value = converter ? converter(value, expression) : value;\n            if (value !== undefined) {\n                var serviceConfig = context.serviceConfig || {};\n                var paramConfig = serviceConfig && serviceConfig.params.filter(function (p) {\n                    return p.name == expression.name;\n                })[0] || {};\n\n                var useAlias = serviceConfig.namespace && (paramConfig.useAlias || serviceConfig.useAlias || this.provider.providerConfiguration.useParameterAlias || _core2.default.defaults.OData.useParameterAlias);\n\n                var paramValue = useAlias ? \"@\" + expression.name : value;\n                var paramName = (useAlias ? \"@\" : \"\") + expression.name;\n\n                if (serviceConfig.namespace) {\n                    if (context['$funcParams']) {\n                        context['$funcParams'] += ',';\n                    } else {\n                        context['$funcParams'] = '';\n                    }\n                    context['$funcParams'] += expression.name + '=' + paramValue;\n                }\n\n                if (!serviceConfig.namespace || useAlias) {\n                    if (context['$urlParams']) {\n                        context['$urlParams'] += '&';\n                    } else {\n                        context['$urlParams'] = '';\n                    }\n                    context['$urlParams'] += paramName + '=' + value;\n                }\n            }\n        } else {\n            context.postData = context.postData || {};\n            context.postData[expression.name] = value;\n        }\n    },\n    //    VisitConstantExpression: function (expression, context) {\n    //        if (context['$urlParams']) { context['$urlParams'] += '&'; } else { context['$urlParams'] = ''; }\n    //\n    //\n    //        var valueType = Container.getTypeName(expression.value);\n    //\n    //\n    //\n    //        context['$urlParams'] += expression.name + '=' + this.provider.fieldConverter.toDb[Container.resolveName(Container.resolveType(valueType))](expression.value);\n    //    },\n\n    VisitCountExpression: function VisitCountExpression(expression, context) {\n        this.Visit(expression.source, context);\n        context.urlText += '/$count';\n    },\n\n    VisitBatchExecuteQueryExpression: function VisitBatchExecuteQueryExpression(expression, context) {\n        context.urlText += '/$batch';\n        context.method = 'POST';\n        context.postData = { __batchRequests: [] };\n        context._isBatchExecuteQuery = true;\n        context._subQueries = expression.members;\n\n        for (var i = 0; i < expression.members.length; i++) {\n            var queryable = expression.members[i];\n            var compiler = new _core2.default.storageProviders.oData.oDataCompiler();\n            var compiled = compiler.compile(queryable);\n            context.postData.__batchRequests.push({\n                requestUri: this.provider.providerConfiguration.oDataServiceHost + compiled.queryText,\n                method: compiled.method,\n                data: compiled.data,\n                headers: compiled.headers\n            });\n        }\n    }\n}, {});\n\n},{\"jaydata/core\":\"jaydata/core\"}],6:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\n\nvar _core = _dereq_('jaydata/core');\n\nvar _core2 = _interopRequireDefault(_core);\n\nvar _atob = (typeof window !== \"undefined\" ? window['atob'] : typeof global !== \"undefined\" ? global['atob'] : null);\n\nvar _atob2 = _interopRequireDefault(_atob);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n_core2.default.defaults = _core2.default.defaults || {};\n_core2.default.defaults.oDataWebApi = false;\n\n_core2.default.oDataConverter = {\n    fromDb: {\n        '$data.Enum': function $dataEnum(v, enumType) {\n            return _core2.default.Container.convertTo(v, enumType);\n        },\n        '$data.Byte': _core2.default.Container.proxyConverter,\n        '$data.SByte': _core2.default.Container.proxyConverter,\n        '$data.Decimal': function $dataDecimal(v) {\n            return _core2.default.Container.convertTo(v, _core2.default.Decimal);\n        },\n        '$data.Float': _core2.default.Container.proxyConverter,\n        '$data.Int16': _core2.default.Container.proxyConverter,\n        '$data.Int64': function $dataInt64(v) {\n            return _core2.default.Container.convertTo(v, _core2.default.Int64);\n        },\n        '$data.ObjectID': _core2.default.Container.proxyConverter,\n        '$data.Integer': _core2.default.Container.proxyConverter, //function (number) { return (typeof number === 'string' && /^\\d+$/.test(number)) ? parseInt(number) : number; },\n        '$data.Int32': _core2.default.Container.proxyConverter,\n        '$data.Number': _core2.default.Container.proxyConverter,\n        '$data.Date': function $dataDate(dbData) {\n            if (dbData) {\n                if (dbData instanceof Date) {\n                    return dbData;\n                } else if (dbData.substring(0, 6) === '/Date(') {\n                    return new Date(parseInt(dbData.substr(6)));\n                } else {\n                    //ISODate without Z? Safari compatible with Z\n                    if (dbData.indexOf('Z') === -1 && !dbData.match('T.*[+-]')) dbData += 'Z';\n                    return new Date(dbData);\n                }\n            } else {\n                return dbData;\n            }\n        },\n        '$data.DateTimeOffset': function $dataDateTimeOffset(dbData) {\n            if (dbData) {\n                if (dbData instanceof Date) {\n                    return dbData;\n                } else if (dbData.substring(0, 6) === '/Date(') {\n                    return new Date(parseInt(dbData.substr(6)));\n                } else {\n                    //ISODate without Z? Safari compatible with Z\n                    if (dbData.indexOf('Z') === -1 && !dbData.match('T.*[+-]')) dbData += 'Z';\n                    return new Date(dbData);\n                }\n            } else {\n                return dbData;\n            }\n        },\n        '$data.Time': function $dataTime(v) {\n            return _core2.default.Container.convertTo(v, _core2.default.Time);\n        },\n        '$data.Day': _core2.default.Container.proxyConverter,\n        '$data.Duration': _core2.default.Container.proxyConverter,\n        '$data.String': _core2.default.Container.proxyConverter,\n        '$data.Boolean': _core2.default.Container.proxyConverter,\n        '$data.Blob': function $dataBlob(v) {\n            if (typeof v == 'string') {\n                try {\n                    return _core2.default.Container.convertTo((0, _atob2.default)(v), '$data.Blob');\n                } catch (e) {\n                    return v;\n                }\n            } else return v;\n        },\n        '$data.Object': function $dataObject(o) {\n            if (o === undefined) {\n                return new _core2.default.Object();\n            } else if (typeof o === 'string') {\n                return JSON.parse(o);\n            }return o;\n        },\n        '$data.Array': function $dataArray(o) {\n            if (o === undefined) {\n                return new _core2.default.Array();\n            } else if (o instanceof _core2.default.Array) {\n                return o;\n            }return JSON.parse(o);\n        },\n        '$data.GeographyPoint': function $dataGeographyPoint(g) {\n            if (g) {\n                return new _core2.default.GeographyPoint(g);\n            }return g;\n        },\n        '$data.GeographyLineString': function $dataGeographyLineString(g) {\n            if (g) {\n                return new _core2.default.GeographyLineString(g);\n            }return g;\n        },\n        '$data.GeographyPolygon': function $dataGeographyPolygon(g) {\n            if (g) {\n                return new _core2.default.GeographyPolygon(g);\n            }return g;\n        },\n        '$data.GeographyMultiPoint': function $dataGeographyMultiPoint(g) {\n            if (g) {\n                return new _core2.default.GeographyMultiPoint(g);\n            }return g;\n        },\n        '$data.GeographyMultiLineString': function $dataGeographyMultiLineString(g) {\n            if (g) {\n                return new _core2.default.GeographyMultiLineString(g);\n            }return g;\n        },\n        '$data.GeographyMultiPolygon': function $dataGeographyMultiPolygon(g) {\n            if (g) {\n                return new _core2.default.GeographyMultiPolygon(g);\n            }return g;\n        },\n        '$data.GeographyCollection': function $dataGeographyCollection(g) {\n            if (g) {\n                return new _core2.default.GeographyCollection(g);\n            }return g;\n        },\n        '$data.GeometryPoint': function $dataGeometryPoint(g) {\n            if (g) {\n                return new _core2.default.GeometryPoint(g);\n            }return g;\n        },\n        '$data.GeometryLineString': function $dataGeometryLineString(g) {\n            if (g) {\n                return new _core2.default.GeometryLineString(g);\n            }return g;\n        },\n        '$data.GeometryPolygon': function $dataGeometryPolygon(g) {\n            if (g) {\n                return new _core2.default.GeometryPolygon(g);\n            }return g;\n        },\n        '$data.GeometryMultiPoint': function $dataGeometryMultiPoint(g) {\n            if (g) {\n                return new _core2.default.GeometryMultiPoint(g);\n            }return g;\n        },\n        '$data.GeometryMultiLineString': function $dataGeometryMultiLineString(g) {\n            if (g) {\n                return new _core2.default.GeometryMultiLineString(g);\n            }return g;\n        },\n        '$data.GeometryMultiPolygon': function $dataGeometryMultiPolygon(g) {\n            if (g) {\n                return new _core2.default.GeometryMultiPolygon(g);\n            }return g;\n        },\n        '$data.GeometryCollection': function $dataGeometryCollection(g) {\n            if (g) {\n                return new _core2.default.GeometryCollection(g);\n            }return g;\n        },\n        '$data.Guid': function $dataGuid(guid) {\n            return guid ? guid.toString() : guid;\n        }\n    },\n    toDb: {\n        '$data.Enum': function $dataEnum(e, enumType) {\n            return e !== null && e !== undefined ? enumType && enumType.getEnumName ? enumType.getEnumName(e) : \"\" : e;\n        },\n        '$data.Entity': _core2.default.Container.proxyConverter,\n        '$data.Byte': _core2.default.Container.proxyConverter,\n        '$data.SByte': _core2.default.Container.proxyConverter,\n        '$data.Decimal': _core2.default.Container.proxyConverter, //function (v) { return v ? parseFloat(v) : v },\n        '$data.Float': _core2.default.Container.proxyConverter,\n        '$data.Int16': _core2.default.Container.proxyConverter,\n        '$data.Int64': _core2.default.Container.proxyConverter, //function (v) { return v ? parseInt(v) : v },\n        '$data.ObjectID': _core2.default.Container.proxyConverter,\n        '$data.Integer': _core2.default.Container.proxyConverter,\n        '$data.Int32': _core2.default.Container.proxyConverter,\n        '$data.Number': _core2.default.Container.proxyConverter,\n        '$data.Date': function $dataDate(e) {\n            return e ? e.toISOString().replace('Z', '') : e;\n        },\n        '$data.Time': _core2.default.Container.proxyConverter,\n        '$data.Day': _core2.default.Container.proxyConverter,\n        '$data.Duration': _core2.default.Container.proxyConverter,\n        '$data.DateTimeOffset': function $dataDateTimeOffset(v) {\n            return v ? v.toISOString() : v;\n        },\n        '$data.String': _core2.default.Container.proxyConverter,\n        '$data.Boolean': _core2.default.Container.proxyConverter,\n        '$data.Blob': function $dataBlob(v) {\n            return v ? _core2.default.Blob.toBase64(v) : v;\n        },\n        '$data.Object': _core2.default.Container.proxyConverter,\n        '$data.Array': function $dataArray(o, def) {\n            if (o && def && def.elementType) {\n                var typeName = _core.Container.resolveName(def.elementType);\n                var values = [];\n                for (var i = 0; i < o.length; i++) {\n                    values.push(_core2.default.oDataConverter['toDb'][typeName](o[i]));\n                }\n\n                return values;\n            }\n            return _core2.default.Container.proxyConverter.apply(this, arguments);\n        },\n        '$data.GeographyPoint': _core2.default.Container.proxyConverter,\n        '$data.GeographyLineString': _core2.default.Container.proxyConverter,\n        '$data.GeographyPolygon': _core2.default.Container.proxyConverter,\n        '$data.GeographyMultiPoint': _core2.default.Container.proxyConverter,\n        '$data.GeographyMultiLineString': _core2.default.Container.proxyConverter,\n        '$data.GeographyMultiPolygon': _core2.default.Container.proxyConverter,\n        '$data.GeographyCollection': _core2.default.Container.proxyConverter,\n        '$data.GeometryPoint': _core2.default.Container.proxyConverter,\n        '$data.GeometryLineString': _core2.default.Container.proxyConverter,\n        '$data.GeometryPolygon': _core2.default.Container.proxyConverter,\n        '$data.GeometryMultiPoint': _core2.default.Container.proxyConverter,\n        '$data.GeometryMultiLineString': _core2.default.Container.proxyConverter,\n        '$data.GeometryMultiPolygon': _core2.default.Container.proxyConverter,\n        '$data.GeometryCollection': _core2.default.Container.proxyConverter,\n        '$data.Guid': _core2.default.Container.proxyConverter\n    },\n    escape: {\n        '$data.Enum': function $dataEnum(e, enumType) {\n            return e !== null && e !== undefined ? (enumType ? enumType.fullName : \"\") + \"'\" + e + \"'\" : e;\n        },\n        '$data.Entity': function $dataEntity(e) {\n            return JSON.stringify(e);\n        },\n        '$data.Integer': _core2.default.Container.proxyConverter,\n        '$data.Int32': _core2.default.Container.proxyConverter,\n        '$data.Number': function $dataNumber(v) {\n            return v && _core2.default.defaults.oDataWebApi ? v + 'd' : v;\n        },\n        '$data.Int16': _core2.default.Container.proxyConverter,\n        '$data.Byte': _core2.default.Container.proxyConverter,\n        '$data.SByte': _core2.default.Container.proxyConverter,\n        '$data.Decimal': function $dataDecimal(v) {\n            return v && _core2.default.defaults.oDataWebApi ? v + 'm' : v;\n        },\n        '$data.Float': function $dataFloat(v) {\n            return v && _core2.default.defaults.oDataWebApi ? v + 'f' : v;\n        },\n        '$data.Int64': _core2.default.Container.proxyConverter,\n        '$data.Time': _core2.default.Container.proxyConverter,\n        '$data.Day': _core2.default.Container.proxyConverter,\n        '$data.Duration': function $dataDuration(v) {\n            return v ? \"duration'\" + v + \"'\" : v;\n        },\n        '$data.DateTimeOffset': function $dataDateTimeOffset(d) {\n            return d ? encodeURIComponent(d) : d;\n        },\n        '$data.Date': function $dataDate(date) {\n            return date ? \"datetime'\" + date + \"'\" : date;\n        },\n        '$data.String': function $dataString(text) {\n            return typeof text === 'string' ? \"'\" + text.replace(/'/g, \"''\") + \"'\" : text;\n        },\n        '$data.ObjectID': function $dataObjectID(text) {\n            return typeof text === 'string' ? \"'\" + text.replace(/'/g, \"''\") + \"'\" : text;\n        },\n        '$data.Boolean': function $dataBoolean(bool) {\n            return typeof bool === 'boolean' ? bool.toString() : bool;\n        },\n        '$data.Blob': function $dataBlob(b) {\n            return b ? \"binary'\" + b + \"'\" : b;\n        },\n        '$data.Object': function $dataObject(o) {\n            return JSON.stringify(o);\n        },\n        '$data.Array': function $dataArray(o, def) {\n            if (o && def && def.elementType) {\n                var typeName = _core.Container.resolveName(def.elementType);\n                var values = [];\n                for (var i = 0; i < o.length; i++) {\n                    values.push(_core2.default.oDataConverter['escape'][typeName](o[i]));\n                }\n\n                return \"[\" + values.join(',') + \"]\";\n            }\n            return JSON.stringify(o);\n        },\n        '$data.GeographyPoint': function $dataGeographyPoint(g) {\n            if (g) {\n                return _core2.default.GeographyBase.stringifyToUrl(g);\n            }return g;\n        },\n        '$data.GeographyLineString': function $dataGeographyLineString(g) {\n            if (g) {\n                return _core2.default.GeographyBase.stringifyToUrl(g);\n            }return g;\n        },\n        '$data.GeographyPolygon': function $dataGeographyPolygon(g) {\n            if (g) {\n                return _core2.default.GeographyBase.stringifyToUrl(g);\n            }return g;\n        },\n        '$data.GeographyMultiPoint': function $dataGeographyMultiPoint(g) {\n            if (g) {\n                return _core2.default.GeographyBase.stringifyToUrl(g);\n            }return g;\n        },\n        '$data.GeographyMultiLineString': function $dataGeographyMultiLineString(g) {\n            if (g) {\n                return _core2.default.GeographyBase.stringifyToUrl(g);\n            }return g;\n        },\n        '$data.GeographyMultiPolygon': function $dataGeographyMultiPolygon(g) {\n            if (g) {\n                return _core2.default.GeographyBase.stringifyToUrl(g);\n            }return g;\n        },\n        '$data.GeographyCollection': function $dataGeographyCollection(g) {\n            if (g) {\n                return _core2.default.GeographyBase.stringifyToUrl(g);\n            }return g;\n        },\n        '$data.GeometryPoint': function $dataGeometryPoint(g) {\n            if (g) {\n                return _core2.default.GeometryBase.stringifyToUrl(g);\n            }return g;\n        },\n        '$data.GeometryLineString': function $dataGeometryLineString(g) {\n            if (g) {\n                return _core2.default.GeometryBase.stringifyToUrl(g);\n            }return g;\n        },\n        '$data.GeometryPolygon': function $dataGeometryPolygon(g) {\n            if (g) {\n                return _core2.default.GeometryBase.stringifyToUrl(g);\n            }return g;\n        },\n        '$data.GeometryMultiPoint': function $dataGeometryMultiPoint(g) {\n            if (g) {\n                return _core2.default.GeometryBase.stringifyToUrl(g);\n            }return g;\n        },\n        '$data.GeometryMultiLineString': function $dataGeometryMultiLineString(g) {\n            if (g) {\n                return _core2.default.GeometryBase.stringifyToUrl(g);\n            }return g;\n        },\n        '$data.GeometryMultiPolygon': function $dataGeometryMultiPolygon(g) {\n            if (g) {\n                return _core2.default.GeometryBase.stringifyToUrl(g);\n            }return g;\n        },\n        '$data.GeometryCollection': function $dataGeometryCollection(g) {\n            if (g) {\n                return _core2.default.GeometryBase.stringifyToUrl(g);\n            }return g;\n        },\n        '$data.Guid': function $dataGuid(guid) {\n            return guid ? \"\" + guid.toString() + \"\" : guid;\n        }\n    },\n    unescape: {\n        '$data.Entity': function $dataEntity(v, c) {\n            var config = c || {};\n            var value = JSON.parse(v);\n            if (value && config.type) {\n                var type = _core.Container.resolveType(config.type);\n                /*Todo converter*/\n                return new type(value, { converters: undefined });\n            }\n            return value;\n        },\n        '$data.Number': function $dataNumber(v) {\n            return JSON.parse(v);\n        },\n        '$data.Integer': function $dataInteger(v) {\n            return JSON.parse(v);\n        },\n        '$data.Int32': function $dataInt32(v) {\n            return JSON.parse(v);\n        },\n        '$data.Byte': function $dataByte(v) {\n            return JSON.parse(v);\n        },\n        '$data.SByte': function $dataSByte(v) {\n            return JSON.parse(v);\n        },\n        '$data.Decimal': function $dataDecimal(v) {\n            if (typeof v === 'string' && v.toLowerCase().lastIndexOf('m') === v.length - 1) {\n                return v.substr(0, v.length - 1);\n            } else {\n                return v;\n            }\n        },\n        '$data.Float': function $dataFloat(v) {\n            if (typeof v === 'string' && v.toLowerCase().lastIndexOf('f') === v.length - 1) {\n                return v.substr(0, v.length - 1);\n            } else {\n                return v;\n            }\n        },\n        '$data.Int16': function $dataInt16(v) {\n            return JSON.parse(v);\n        },\n        '$data.Int64': function $dataInt64(v) {\n            return v;\n        },\n        '$data.Boolean': function $dataBoolean(v) {\n            return JSON.parse(v);\n        },\n        '$data.Date': function $dataDate(v) {\n            if (typeof v === 'string' && /^datetime'/.test(v)) {\n                return v.slice(9, v.length - 1);\n            }\n            return v;\n        },\n        '$data.String': function $dataString(v) {\n            if (typeof v === 'string' && v.indexOf(\"'\") === 0 && v.lastIndexOf(\"'\") === v.length - 1) {\n                return v.slice(1, v.length - 1);\n            } else {\n                return v;\n            }\n        },\n        '$data.ObjectID': function $dataObjectID(v) {\n            if (typeof v === 'string' && v.indexOf(\"'\") === 0 && v.lastIndexOf(\"'\") === v.length - 1) {\n                return v.slice(1, v.length - 1);\n            } else {\n                return v;\n            }\n        },\n        '$data.Guid': function $dataGuid(v) {\n            if (/^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$/.test(v)) {\n                var data = v.slice(5, v.length - 1);\n                return _core2.default.parseGuid(data).toString();\n            }\n            return v;\n        },\n        '$data.Array': function $dataArray(v, c) {\n            var config = c || {};\n\n            var value = JSON.parse(v) || [];\n            if (value && config.elementType) {\n                var type = _core.Container.resolveType(config.elementType);\n                var typeName = _core.Container.resolveName(type);\n                if (type && type.isAssignableTo && type.isAssignableTo(_core2.default.Entity)) {\n                    typeName = _core2.default.Entity.fullName;\n                }\n\n                if (Array.isArray(value)) {\n                    var converter = _core2.default.oDataConverter.unescape[typeName];\n                    for (var i = 0; i < value.length; i++) {\n                        value[i] = converter ? converter(value[i]) : value[i];\n                    }\n                }\n                return value;\n            }\n            return value;\n        },\n        '$data.DateTimeOffset': function $dataDateTimeOffset(v) {\n            if (typeof v === 'string') {\n                return _core2.default.Container.convertTo(v, _core2.default.DateTimeOffset);\n            }\n            return v;\n        },\n        '$data.Time': function $dataTime(v) {\n            if (typeof v === 'string' && /^time'/.test(v)) {\n                return _core2.default.Container.convertTo(v.slice(5, v.length - 1), _core2.default.Time);\n            }\n            return v;\n        },\n        '$data.Day': function $dataDay(v) {\n            if (typeof v === 'string' && /^date'/.test(v)) {\n                return _core2.default.Container.convertTo(v.slice(5, v.length - 1), _core2.default.Day);\n            }\n            return v;\n        },\n        '$data.Duration': function $dataDuration(v) {\n            if (typeof v === 'string' && /^duration'/.test(v)) {\n                return _core2.default.Container.convertTo(v.slice(9, v.length - 1), _core2.default.Duration);\n            }\n            return v;\n        },\n        '$data.Blob': function $dataBlob(v) {\n            if (typeof v === 'string') {\n                if (/^X'/.test(v)) {\n                    return _core2.default.Blob.createFromHexString(v.slice(2, v.length - 1));\n                } else if (/^binary'/.test(v)) {\n                    return _core2.default.Blob.createFromHexString(v.slice(7, v.length - 1));\n                }\n            }\n            return v;\n        },\n        '$data.Object': function $dataObject(v) {\n            return JSON.parse(v);\n        },\n        '$data.GeographyPoint': function $dataGeographyPoint(v) {\n            if (/^geography'POINT\\(/i.test(v)) {\n                var data = v.slice(10, v.length - 1);\n                return _core2.default.GeographyBase.parseFromString(data);\n            }\n            return v;\n        },\n        '$data.GeographyPolygon': function $dataGeographyPolygon(v) {\n            if (/^geography'POLYGON\\(/i.test(v)) {\n                var data = v.slice(10, v.length - 1);\n                return _core2.default.GeographyBase.parseFromString(data);\n            }\n            return v;\n        },\n        '$data.GeometryPoint': function $dataGeometryPoint(v) {\n            if (/^geometry'POINT\\(/i.test(v)) {\n                var data = v.slice(9, v.length - 1);\n                return _core2.default.GeometryBase.parseFromString(data);\n            }\n            return v;\n        },\n        '$data.GeometryPolygon': function $dataGeometryPolygon(v) {\n            if (/^geometry'POLYGON\\(/i.test(v)) {\n                var data = v.slice(9, v.length - 1);\n                return _core2.default.GeometryBase.parseFromString(data);\n            }\n            return v;\n        }\n    },\n    xmlEscape: {\n        '$data.Byte': function $dataByte(v) {\n            return v.toString();\n        },\n        '$data.SByte': function $dataSByte(v) {\n            return v.toString();\n        },\n        '$data.Decimal': function $dataDecimal(v) {\n            return v.toString();\n        },\n        '$data.Float': function $dataFloat(v) {\n            return v.toString();\n        },\n        '$data.Int16': function $dataInt16(v) {\n            return v.toString();\n        },\n        '$data.Int64': function $dataInt64(v) {\n            return v.toString();\n        },\n        '$data.Integer': function $dataInteger(v) {\n            return v.toString();\n        },\n        '$data.Int32': function $dataInt32(v) {\n            return v.toString();\n        },\n        '$data.Boolean': function $dataBoolean(v) {\n            return v.toString();\n        },\n        '$data.Blob': function $dataBlob(v) {\n            return _core2.default.Blob.toBase64(v);\n        },\n        '$data.Date': function $dataDate(v) {\n            return v.toISOString().replace('Z', '');\n        },\n        '$data.DateTimeOffset': function $dataDateTimeOffset(v) {\n            return v.toISOString();\n        },\n        '$data.Time': function $dataTime(v) {\n            return v.toString();\n        },\n        '$data.Day': function $dataDay(v) {\n            return v.toString();\n        },\n        '$data.Duration': function $dataDuration(v) {\n            return v.toString();\n        },\n        '$data.Number': function $dataNumber(v) {\n            return v.toString();\n        },\n        '$data.String': function $dataString(v) {\n            return v.toString();\n        },\n        '$data.ObjectID': function $dataObjectID(v) {\n            return v.toString();\n        },\n        '$data.Object': function $dataObject(v) {\n            return JSON.stringify(v);\n        },\n        '$data.Guid': function $dataGuid(v) {\n            return v.toString();\n        } /*,\r\n          '$data.GeographyPoint': function (v) { return this._buildSpatialPoint(v, 'http://www.opengis.net/def/crs/EPSG/0/4326'); },\r\n          '$data.GeometryPoint': function (v) { return this._buildSpatialPoint(v, 'http://www.opengis.net/def/crs/EPSG/0/0'); },\r\n          '$data.GeographyLineString': function (v) { return this._buildSpatialLineString(v, 'http://www.opengis.net/def/crs/EPSG/0/4326'); },\r\n          '$data.GeometryLineString': function (v) { return this._buildSpatialLineString(v, 'http://www.opengis.net/def/crs/EPSG/0/0'); }*/\n    },\n    simple: { //$value, $count\n        '$data.Byte': function $dataByte(v) {\n            return v.toString();\n        },\n        '$data.SByte': function $dataSByte(v) {\n            return v.toString();\n        },\n        '$data.Decimal': function $dataDecimal(v) {\n            return v.toString();\n        },\n        '$data.Float': function $dataFloat(v) {\n            return v.toString();\n        },\n        '$data.Int16': function $dataInt16(v) {\n            return v.toString();\n        },\n        '$data.Int64': function $dataInt64(v) {\n            return v.toString();\n        },\n        '$data.ObjectID': function $dataObjectID(o) {\n            return o.toString();\n        },\n        '$data.Integer': function $dataInteger(o) {\n            return o.toString();\n        },\n        '$data.Int32': function $dataInt32(o) {\n            return o.toString();\n        },\n        '$data.Number': function $dataNumber(o) {\n            return o.toString();\n        },\n        '$data.Date': function $dataDate(o) {\n            return o instanceof _core2.default.Date ? o.toISOString().replace('Z', '') : o.toString();\n        },\n        '$data.DateTimeOffset': function $dataDateTimeOffset(v) {\n            return v ? v.toISOString() : v;\n        },\n        '$data.Time': function $dataTime(o) {\n            return o.toString();\n        },\n        '$data.Day': function $dataDay(o) {\n            return o.toString();\n        },\n        '$data.Duration': function $dataDuration(o) {\n            return o.toString();\n        },\n        '$data.String': function $dataString(o) {\n            return o.toString();\n        },\n        '$data.Boolean': function $dataBoolean(o) {\n            return o.toString();\n        },\n        '$data.Blob': function $dataBlob(o) {\n            return o;\n        },\n        '$data.Object': function $dataObject(o) {\n            return JSON.stringify(o);\n        },\n        '$data.Array': function $dataArray(o) {\n            return JSON.stringify(o);\n        },\n        '$data.Guid': function $dataGuid(o) {\n            return o.toString();\n        },\n        '$data.GeographyPoint': function $dataGeographyPoint(o) {\n            return JSON.stringify(o);\n        },\n        '$data.GeometryPoint': function $dataGeometryPoint(o) {\n            return JSON.stringify(o);\n        },\n        '$data.GeographyLineString': function $dataGeographyLineString(o) {\n            return JSON.stringify(o);\n        },\n        '$data.GeographyPolygon': function $dataGeographyPolygon(o) {\n            return JSON.stringify(o);\n        },\n        '$data.GeographyMultiPoint': function $dataGeographyMultiPoint(o) {\n            return JSON.stringify(o);\n        },\n        '$data.GeographyMultiLineString': function $dataGeographyMultiLineString(o) {\n            return JSON.stringify(o);\n        },\n        '$data.GeographyMultiPolygon': function $dataGeographyMultiPolygon(o) {\n            return JSON.stringify(o);\n        },\n        '$data.GeographyCollection': function $dataGeographyCollection(o) {\n            return JSON.stringify(o);\n        },\n        '$data.GeometryLineString': function $dataGeometryLineString(o) {\n            return JSON.stringify(o);\n        },\n        '$data.GeometryPolygon': function $dataGeometryPolygon(o) {\n            return JSON.stringify(o);\n        },\n        '$data.GeometryMultiPoint': function $dataGeometryMultiPoint(o) {\n            return JSON.stringify(o);\n        },\n        '$data.GeometryMultiLineString': function $dataGeometryMultiLineString(o) {\n            return JSON.stringify(o);\n        },\n        '$data.GeometryMultiPolygon': function $dataGeometryMultiPolygon(o) {\n            return JSON.stringify(o);\n        },\n        '$data.GeometryCollection': function $dataGeometryCollection(o) {\n            return JSON.stringify(o);\n        }\n    }\n};\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"jaydata/core\":\"jaydata/core\"}],7:[function(_dereq_,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ODataIncludeFragment = undefined;\n\nvar _core = _dereq_('jaydata/core');\n\nvar _core2 = _interopRequireDefault(_core);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ODataIncludeFragment = exports.ODataIncludeFragment = function () {\n    function ODataIncludeFragment(name) {\n        _classCallCheck(this, ODataIncludeFragment);\n\n        this.name = name;\n        this.$expand = [];\n        this.$operators = [];\n    }\n\n    _createClass(ODataIncludeFragment, [{\n        key: 'toString',\n        value: function toString() {\n            var data = '';\n            if (this.$expand.length) {\n                if (this.name) {\n                    data += this.name + '($expand=';\n                }\n                for (var i = 0; i < this.$expand.length; i++) {\n                    if (i !== 0) data += ',';\n                    data += this[this.$expand[i]].toString();\n                }\n                if (this.name) {\n                    data += ')';\n                }\n            }\n\n            if (this.name) {\n                for (var i = 0; i < this.$operators.length; i++) {\n                    var operator = this.$operators[i];\n                    var values = this[operator];\n                    for (var j = 0; j < values.length; j++) {\n                        if (data) data += ',';\n                        data += this.name + '(' + operator + '=';\n                        data += values[j];\n                        data += ')';\n                    }\n                }\n            }\n\n            if (this.name && !data) {\n                data = this.name;\n            }\n\n            return data;\n        }\n    }, {\n        key: 'addInclude',\n        value: function addInclude(path, map) {\n            this._createIncludePath(path);\n        }\n    }, {\n        key: 'addImplicitMap',\n        value: function addImplicitMap(path, map) {\n            var includedFragment = this._createIncludePath(path);\n            this._setImplicitMap(includedFragment, map);\n        }\n    }, {\n        key: '_createIncludePath',\n        value: function _createIncludePath(path) {\n            if (!path) return this;\n            var inc = path.split('.');\n\n            var current = this;\n            for (var i = 0; i < inc.length; i++) {\n                var it = inc[i];\n                var included = true;\n                if (current.$expand.indexOf(it) < 0) {\n                    included = false;\n                    current.$expand.push(it);\n                    current[it] = new ODataIncludeFragment(it);\n                    current[it].__implicit = true;\n                }\n\n                current = current[it];\n                if (i < inc.length - 1 && current.__implicit) {\n                    this._setImplicitMap(current, inc[i + 1]);\n                }\n            }\n\n            return current;\n        }\n    }, {\n        key: '_setImplicitMap',\n        value: function _setImplicitMap(includeFragment, map) {\n            if (map) {\n                if (includeFragment.$operators.indexOf('$select') < 0) {\n                    if (includeFragment.__implicit) {\n                        includeFragment.$operators.push('$select');\n                        includeFragment.$select = [map];\n                    }\n                } else if (includeFragment.$expand.indexOf(map) < 0) {\n                    includeFragment.$select[0] += ',' + map;\n                }\n            }\n        }\n    }]);\n\n    return ODataIncludeFragment;\n}();\n\n_core2.default.storageProviders.oData.ODataIncludeFragment = ODataIncludeFragment;\n\n(0, _core.$C)('$data.storageProviders.oData.oDataIncludeCompiler', _core2.default.Expressions.EntityExpressionVisitor, null, {\n    constructor: function constructor(provider) {\n        this.provider = provider;\n    },\n\n    compile: function compile(expression, context) {\n        context.data = context.data || new ODataIncludeFragment();\n        context.current = context.data;\n        this.Visit(expression, context);\n    },\n    VisitParametricQueryExpression: function VisitParametricQueryExpression(expression, context) {\n        this.Visit(expression.expression, context);\n    },\n\n    VisitEntitySetExpression: function VisitEntitySetExpression(expression, context) {\n        this.Visit(expression.source, context);\n        if (expression.selector instanceof _core2.default.Expressions.AssociationInfoExpression) {\n            this.Visit(expression.selector, context);\n        }\n    },\n\n    VisitAssociationInfoExpression: function VisitAssociationInfoExpression(expression, context) {\n        var propName = expression.associationInfo.FromPropertyName;\n\n        this.includePath = this.includePath ? this.includePath + '.' : \"\";\n        this.includePath += propName;\n\n        var currentPath = this.includePath;\n        if (!context.includes.some(function (include) {\n            return include.name == currentPath;\n        }, this)) {\n            context.includes.push({ name: currentPath, type: expression.associationInfo.ToType });\n        }\n\n        if (context.current.$expand.indexOf(propName) < 0) {\n            context.current.$expand.push(propName);\n            context.current[propName] = new ODataIncludeFragment(propName);\n        }\n        context.current = context.current[propName];\n    },\n\n    VisitFrameOperationExpression: function VisitFrameOperationExpression(expression, context) {\n        this.Visit(expression.source, context);\n\n        var opDef = expression.operation.memberDefinition;\n        if (opDef && opDef.includeFrameName) {\n            var opName = opDef.includeFrameName;\n            var paramCounter = 0;\n            var params = opDef.parameters || [{ name: \"@expression\" }];\n\n            var args = params.map(function (item, index) {\n                if (item.name === \"@expression\") {\n                    return expression.source;\n                } else {\n                    return expression.parameters[paramCounter++];\n                };\n            });\n\n            if (opDef.includeCompiler) {\n                for (var i = 0; i < args.length; i++) {\n                    var arg = args[i];\n                    var compilerType = _core.Container.resolveType(opDef.includeCompiler);\n                    var compiler = new compilerType(this.provider);\n                    var frameContext = { data: \"\", $expand: context.current };\n\n                    if (arg && arg.value instanceof _core2.default.Queryable) {\n                        var preparator = _core.Container.createQueryExpressionCreator(arg.value.entityContext);\n                        var prep_expression = preparator.Visit(arg.value.expression);\n                        arg = prep_expression;\n                    }\n\n                    var compiled = compiler.compile(arg, frameContext);\n\n                    if (context.current['$operators'].indexOf(opName) < 0) {\n                        context.current[opName] = [];\n                        context.current['$operators'].push(opName);\n                    }\n                    context.current[opName].push(frameContext[opName] || frameContext.data);\n                }\n            } else if (opDef.implementation) {\n                if (context.current['$operators'].indexOf(opName) < 0) {\n                    context.current[opName] = [];\n                    context.current['$operators'].push(opName);\n                }\n                context.current[opName].push(opDef.implementation());\n            }\n        }\n    }\n});\n\n},{\"jaydata/core\":\"jaydata/core\"}],8:[function(_dereq_,module,exports){\n'use strict';\n\nvar _core = _dereq_('jaydata/core');\n\nvar _core2 = _interopRequireDefault(_core);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n(0, _core.$C)('$data.storageProviders.oData.oDataOrderCompiler', _core2.default.storageProviders.oData.oDataWhereCompiler, null, {\n    constructor: function constructor(provider) {\n        this.provider = provider;\n    },\n\n    compile: function compile(expression, context) {\n        this.Visit(expression, context);\n    },\n    VisitOrderExpression: function VisitOrderExpression(expression, context) {\n        var orderContext = { data: \"\" };\n        this.Visit(expression.selector, orderContext);\n        if (context['$orderby']) {\n            context['$orderby'] += ',';\n        } else {\n            context['$orderby'] = '';\n        }\n        context['$orderby'] += orderContext.data + (expression.nodeType == _core2.default.Expressions.ExpressionType.OrderByDescending ? \" desc\" : \"\");\n    },\n    VisitParametricQueryExpression: function VisitParametricQueryExpression(expression, context) {\n        this.Visit(expression.expression, context);\n    },\n    VisitEntityFieldExpression: function VisitEntityFieldExpression(expression, context) {\n        this.Visit(expression.source, context);\n        this.Visit(expression.selector, context);\n    },\n    VisitComplexTypeExpression: function VisitComplexTypeExpression(expression, context) {\n        this.Visit(expression.source, context);\n        this.Visit(expression.selector, context);\n        context.data += \"/\";\n    },\n    VisitEntitySetExpression: function VisitEntitySetExpression(expression, context) {\n        if (expression.selector instanceof _core2.default.Expressions.AssociationInfoExpression) {\n            this.Visit(expression.source, context);\n            this.Visit(expression.selector, context);\n        }\n    },\n    VisitAssociationInfoExpression: function VisitAssociationInfoExpression(expression, context) {\n        context.data += expression.associationInfo.FromPropertyName + '/';\n    },\n    VisitEntityExpression: function VisitEntityExpression(expression, context) {\n        this.Visit(expression.source, context);\n        this.Visit(expression.selector, context);\n    },\n    VisitMemberInfoExpression: function VisitMemberInfoExpression(expression, context) {\n        context.data += expression.memberName;\n    },\n    VisitEntityFieldOperationExpression: function VisitEntityFieldOperationExpression(expression, context) {\n        _core.Guard.requireType(\"expression.operation\", expression.operation, _core2.default.Expressions.MemberInfoExpression);\n\n        //TODO refactor!\n        var opDef = expression.operation.memberDefinition;\n        var opName = opDef.mapTo || opDef.name;\n        context.data += opName;\n        context.data += \"(\";\n        var paramCounter = 0;\n        var params = opDef.parameters || [{ name: \"@expression\" }];\n\n        var args = params.map(function (item, index) {\n            if (item.name === \"@expression\") {\n                return expression.source;\n            } else {\n                return expression.parameters[paramCounter++];\n            };\n        });\n\n        args.forEach(function (arg, index) {\n            if (index > 0) {\n                context.data += \",\";\n            };\n            this.Visit(arg, context);\n        }, this);\n        context.data += \")\";\n    },\n    VisitEntityFunctionOperationExpression: function VisitEntityFunctionOperationExpression(expression, context) {\n        _core.Guard.requireType(\"expression.operation\", expression.operation, _core2.default.Expressions.MemberInfoExpression);\n        this.Visit(expression.source, context);\n\n        //TODO refactor!\n        var opDef = expression.operation.memberDefinition;\n        var opName = opDef.mapTo || opDef.name;\n        context.data += opName;\n        context.data += \"(\";\n        var paramCounter = 0;\n        var params = opDef.method.params || [{ name: \"@expression\" }];\n\n        var args = params.map(function (item, index) {\n            if (item.name === \"@expression\") {\n                return expression.source;\n            } else {\n                return expression.parameters[paramCounter++];\n            };\n        });\n\n        var i = 0;\n        args.forEach(function (arg, index) {\n            if (arg === undefined || arg instanceof _core2.default.Expressions.ConstantExpression && typeof arg.value === 'undefined') return;\n\n            if (i > 0) {\n                context.data += \",\";\n            };\n            i++;\n            context.data += params[index].name + '=';\n            this.Visit(arg, context);\n        }, this);\n        context.data += \")\";\n    },\n    VisitContextFunctionOperationExpression: function VisitContextFunctionOperationExpression(expression, context) {\n        return this.VisitEntityFunctionOperationExpression(expression, context);\n    }\n});\n\n},{\"jaydata/core\":\"jaydata/core\"}],9:[function(_dereq_,module,exports){\n'use strict';\n\nvar _core = _dereq_('jaydata/core');\n\nvar _core2 = _interopRequireDefault(_core);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n(0, _core.$C)('$data.storageProviders.oData.oDataPagingCompiler', _core2.default.Expressions.EntityExpressionVisitor, null, {\n    constructor: function constructor(provider) {\n        this.provider = provider;\n    },\n\n    compile: function compile(expression, context) {\n        this.Visit(expression, context);\n    },\n    VisitPagingExpression: function VisitPagingExpression(expression, context) {\n        var pagingContext = { data: \"\" };\n        this.Visit(expression.amount, pagingContext);\n        switch (expression.nodeType) {\n            case _core2.default.Expressions.ExpressionType.Skip:\n                context['$skip'] = pagingContext.data;break;\n            case _core2.default.Expressions.ExpressionType.Take:\n                context['$top'] = pagingContext.data;break;\n            default:\n                _core.Guard.raise(\"Not supported nodeType\");break;\n        }\n    },\n    VisitConstantExpression: function VisitConstantExpression(expression, context) {\n        var typeName = _core.Container.resolveName(expression.type);\n        var converter = this.provider.fieldConverter.escape[typeName];\n        context.data += converter ? converter(expression.value) : expression.value;\n    }\n});\n\n},{\"jaydata/core\":\"jaydata/core\"}],10:[function(_dereq_,module,exports){\n'use strict';\n\nvar _core = _dereq_('jaydata/core');\n\nvar _core2 = _interopRequireDefault(_core);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n(0, _core.$C)('$data.storageProviders.oData.oDataProjectionCompiler', _core2.default.Expressions.EntityExpressionVisitor, null, {\n    constructor: function constructor(provider) {\n        this.provider = provider;\n        this.entityContext = provider.context;\n        this.hasObjectLiteral = false;\n        this.modelBinderMapping = [];\n    },\n\n    compile: function compile(expression, context) {\n        this.Visit(expression, context);\n    },\n    VisitProjectionExpression: function VisitProjectionExpression(expression, context) {\n        ///<summary></summary>\n        ///<param name=\"expression\" type=\"$data.Expressions.ProjectionExpression\" mayBeNull=\"false\"></param>\n        ///<param name=\"context\" mayBeNull=\"false\"></param>\n        context.data = \"\";\n        this.mapping = \"\";\n\n        this.Visit(expression.selector, context);\n        if (context['$select']) {\n            context['$select'] += ',';\n        } else {\n            context['$select'] = '';\n        }\n        context[\"$select\"] += context.data;\n        context.data = \"\";\n    },\n    VisitParametricQueryExpression: function VisitParametricQueryExpression(expression, context) {\n        this.Visit(expression.expression, context);\n        var m = this.mapping.split('.');\n\n        if (!(expression.expression instanceof _core2.default.Expressions.EntityExpression) && !(expression.expression instanceof _core2.default.Expressions.EntitySetExpression)) {\n            m.pop();\n        }\n\n        if (m.length > 0) {\n            if (!context['$expand'] || !(context['$expand'] instanceof _core2.default.storageProviders.oData.ODataIncludeFragment)) {\n                context['$expand'] = new _core2.default.storageProviders.oData.ODataIncludeFragment();\n            }\n            context['$expand'].addInclude(m.join('.'));\n        }\n    },\n    VisitObjectLiteralExpression: function VisitObjectLiteralExpression(expression, context) {\n        ///<summary></summary>\n        ///<param name=\"expression\" type=\"$data.Expressions.ObjectLiteralExpression\" mayBeNull=\"false\"></param>\n        ///<param name=\"context\" mayBeNull=\"false\"></param>\n\n        this.hasObjectLiteral = true;\n        expression.members.forEach(function (member, index) {\n            this.Visit(member, context);\n            if (index < expression.members.length - 1) {\n                context.data += ',';\n            }\n            this.mapping = '';\n        }, this);\n    },\n    VisitObjectFieldExpression: function VisitObjectFieldExpression(expression, context) {\n        this.Visit(expression.expression, context);\n\n        var m = this.mapping.split('.');\n        var propertyName = \"\";\n        if (!(expression.expression instanceof _core2.default.Expressions.EntityExpression) && !(expression.expression instanceof _core2.default.Expressions.EntitySetExpression)) {\n            propertyName = m.pop();\n        }\n\n        if (m.length > 0) {\n            if (!context['$expand'] || !(context['$expand'] instanceof _core2.default.storageProviders.oData.ODataIncludeFragment)) {\n                context['$expand'] = new _core2.default.storageProviders.oData.ODataIncludeFragment();\n            }\n\n            if (expression.expression instanceof _core2.default.Expressions.EntityFieldExpression && expression.expression.selector instanceof _core2.default.Expressions.MemberInfoExpression) {\n                var storageModel = this.entityContext._storageModel.getStorageModel(expression.expression.selector.memberDefinition.definedBy);\n                if (!storageModel) return;\n\n                var isComplexProperty = storageModel && !!storageModel.ComplexTypes[expression.memberName];\n                if (isComplexProperty) {\n                    var complexProperty = m.pop();\n                    context['$expand'].addImplicitMap(m.join('.'), complexProperty);\n                    return;\n                }\n            }\n\n            if (expression.expression instanceof _core2.default.Expressions.ComplexTypeExpression) {\n                context['$expand'].addImplicitMap(m.join('.'), propertyName);\n            } else {\n                context['$expand'].addInclude(m.join('.'));\n            }\n        }\n    },\n\n    VisitComplexTypeExpression: function VisitComplexTypeExpression(expression, context) {\n        this.Visit(expression.source, context);\n        this.Visit(expression.selector, context);\n    },\n\n    VisitEntityFieldExpression: function VisitEntityFieldExpression(expression, context) {\n        this.Visit(expression.source, context);\n        this.Visit(expression.selector, context);\n    },\n    VisitEntityExpression: function VisitEntityExpression(expression, context) {\n        ///<summary></summary>\n        ///<param name=\"expression\" type=\"$data.Expressions.EntityExpression\" mayBeNull=\"false\"></param>\n        ///<param name=\"context\" mayBeNull=\"false\"></param>\n        this.Visit(expression.source, context);\n    },\n    VisitEntitySetExpression: function VisitEntitySetExpression(expression, context) {\n        ///<summary></summary>\n        ///<param name=\"expression\" type=\"$data.Expressions.EntitySetExpression\" mayBeNull=\"false\"></param>\n        ///<param name=\"context\" mayBeNull=\"false\"></param>\n        if (expression.source instanceof _core2.default.Expressions.EntityExpression) {\n            this.Visit(expression.source, context);\n        }\n        if (expression.selector instanceof _core2.default.Expressions.AssociationInfoExpression) {\n            this.Visit(expression.selector, context);\n        }\n    },\n    VisitAssociationInfoExpression: function VisitAssociationInfoExpression(expression, context) {\n        if (this.mapping && this.mapping.length > 0) {\n            this.mapping += '.';\n        }\n        this.mapping += expression.associationInfo.FromPropertyName;\n\n        if (context.data && context.data.length > 0 && context.data[context.data.length - 1] != ',') {\n            if (!context['$expand'] || !(context['$expand'] instanceof _core2.default.storageProviders.oData.ODataIncludeFragment)) {\n                context['$expand'] = new _core2.default.storageProviders.oData.ODataIncludeFragment();\n            }\n            context['$expand'].addInclude(this.mapping);\n        } else {\n            context.data += expression.associationInfo.FromPropertyName;\n        }\n    },\n    VisitMemberInfoExpression: function VisitMemberInfoExpression(expression, context) {\n        var storageModel = this.entityContext._storageModel.getStorageModel(expression.memberDefinition.definedBy);\n        var isComplexProperty = storageModel && !!storageModel.ComplexTypes[expression.memberName];\n        var isComplexField = !storageModel;\n\n        if (context.data && context.data.length > 0 && context.data[context.data.length - 1] != ',') {\n            if (this.mapping) {\n                if (!context['$expand'] || !(context['$expand'] instanceof _core2.default.storageProviders.oData.ODataIncludeFragment)) {\n                    context['$expand'] = new _core2.default.storageProviders.oData.ODataIncludeFragment();\n                }\n                if (isComplexField) {\n                    var m = this.mapping.split('.');\n                    var complexProperty = m.pop();\n                    if (this.provider.checkODataMode(\"disableCompltexTypeMapping\")) {\n                        context['$expand'].addImplicitMap(m.join('.'), complexProperty);\n                    } else {\n                        context['$expand'].addImplicitMap(m.join('.'), complexProperty + \"/\" + expression.memberName);\n                    }\n                } else if (!isComplexProperty) {\n                    context['$expand'].addImplicitMap(this.mapping, expression.memberName);\n                }\n            }\n        } else {\n            //if(context.data[context.data.length - 1] != ',') context.data += '/';\n            context.data += expression.memberName;\n        }\n\n        if (this.mapping && this.mapping.length > 0) {\n            this.mapping += '.';\n        }\n        this.mapping += expression.memberName;\n    },\n    VisitConstantExpression: function VisitConstantExpression(expression, context) {\n        //Guard.raise(new Exception('Constant value is not supported in Projection.', 'Not supported!'));\n        //context.data += expression.value;\n        context.data = context.data.slice(0, context.data.length - 1);\n    }\n});\n\n},{\"jaydata/core\":\"jaydata/core\"}],11:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nvar _core = _dereq_('jaydata/core');\n\nvar _core2 = _interopRequireDefault(_core);\n\nvar _jaydataOdatajs = (typeof window !== \"undefined\" ? window['odatajs'] : typeof global !== \"undefined\" ? global['odatajs'] : null);\n\nvar odatajs = _interopRequireWildcard(_jaydataOdatajs);\n\nvar _oDataRequestActivities = _dereq_('./oDataRequestActivities.js');\n\nvar activities = _interopRequireWildcard(_oDataRequestActivities);\n\nvar _empty = _dereq_('./SaveStrategies/empty');\n\nvar _single = _dereq_('./SaveStrategies/single');\n\nvar _batch = _dereq_('./SaveStrategies/batch');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar OData = _core2.default.__global['OData'];\nvar datajs = _core2.default.__global['datajs'];\n\nvar _datajsPatch;\n_datajsPatch = function datajsPatch(OData) {\n    // just datajs-1.1.0\n    if (OData && OData.jsonHandler && 'useJsonLight' in OData.jsonHandler && (typeof datajs === 'undefined' ? 'undefined' : _typeof(datajs)) === 'object' && !datajs.version) {\n        _core2.default.Trace.log('!!!!!!! - patch datajs 1.1.0');\n        var oldread = OData.defaultHandler.read;\n        OData.defaultHandler.read = function (p, context) {\n            delete context.contentType;\n            delete context.dataServiceVersion;\n\n            oldread.apply(this, arguments);\n        };\n        var oldwrite = OData.defaultHandler.write;\n        OData.defaultHandler.write = function (p, context) {\n            delete context.contentType;\n            delete context.dataServiceVersion;\n\n            oldwrite.apply(this, arguments);\n        };\n    }\n    _datajsPatch = function datajsPatch() {};\n};\n\n_core2.default.defaults = _core2.default.defaults || {};\n_core2.default.defaults.OData = _core2.default.defaults.OData || {};\nif (!(\"withReferenceMethods\" in _core2.default.defaults.OData)) {\n    _core2.default.defaults.OData.withReferenceMethods = false;\n}\nif (!(\"disableBatch\" in _core2.default.defaults.OData)) {\n    _core2.default.defaults.OData.disableBatch = false;\n}\nif (!(\"eTagAny\" in _core2.default.defaults.OData)) {\n    _core2.default.defaults.OData.eTagAny = '*';\n}\nif (!(\"enableDeepSave\" in _core2.default.defaults.OData)) {\n    _core2.default.defaults.OData.enableDeepSave = false;\n}\nif (!(\"disableCompltexTypeMapping\" in _core2.default.defaults.OData)) {\n    _core2.default.defaults.OData.disableCompltexTypeMapping = false;\n}\n\nvar _checkODataMode = function _checkODataMode(context, functionName) {\n    if (typeof context.providerConfiguration[functionName] !== 'undefined') {\n        return !!context.providerConfiguration[functionName];\n    }\n    return !!_core2.default.defaults.OData[functionName];\n};\n\n(0, _core.$C)('$data.storageProviders.oData.RequestManager', _core2.default.Base, null, {\n    constructor: function constructor() {\n        this._items = [];\n        this._entities = [];\n    },\n    _items: { type: _core2.default.Array },\n    _entities: { type: _core2.default.Array },\n    add: function add(changedItem, request, countable) {\n        var item = {\n            data: changedItem,\n            entity: changedItem.data,\n            request: request,\n            itemIndex: ++this.maxItemIndex,\n            references: []\n        };\n\n        // request.headers = request.headers || {};\n        // request.headers[\"content-Id\"] = item.itemIndex;\n        request.add(new activities.SetHeaderProperty(\"content-Id\", item.itemIndex));\n\n        if (countable !== false) {\n            this.length++;\n        }\n\n        this._entities.push(item.entity);\n        this._items.push(item);\n\n        return item;\n    },\n    addItemReference: function addItemReference(entity, reference) {\n        var item = this.getItem(entity);\n        if (item) {\n            item.references.push(reference);\n        }\n    },\n    getItemIndex: function getItemIndex(entity) {\n        if (!entity) return -1;\n        var idx = this._entities.indexOf(entity);\n        if (idx >= 0 && !this._items[idx].removed) {\n            return this._items[idx].itemIndex;\n        }\n        return -1;\n    },\n    getItem: function getItem(entity, onlyAvailable) {\n        if (!entity) return null;\n        var idx = this._entities.indexOf(entity);\n        if (idx >= 0 && (!onlyAvailable || !this._items[idx].removed)) {\n            return this._items[idx];\n        }\n        return null;\n    },\n    remove: function remove(entity) {\n        var idx = this._entities.indexOf(entity);\n        if (idx >= 0) {\n            var item = this._items[idx];\n            if (!item.removed) {\n                this._items[idx].removed = true;\n                this.length--;\n                return true;\n            }\n        }\n        return false;\n    },\n    getItems: function getItems() {\n        return this._items.filter(function (it) {\n            return !it.removed;\n        });\n    },\n    getByResponse: function getByResponse(response, i) {\n        //use response.headers['content-id']\n\n        var idx = i;\n\n        if (!this._indexCalculated) {\n            this._indexCalculated = true;\n            this._dataForResult = this._items.filter(function (it) {\n                return !it.removed;\n            });\n        }\n\n        var item = this._dataForResult[idx++];\n        return item ? item.entity : null;\n    },\n    setProcessed: function setProcessed(entity) {\n        var idx = this._entities.indexOf(entity);\n        if (idx >= 0) {\n            var item = this._items[idx];\n            if (!item.isProcessed) {\n                this._items[idx].isProcessed = true;\n                return true;\n            }\n        }\n        return false;\n    },\n\n    maxItemIndex: { value: 0 },\n    length: { value: 0 }\n});\n\n(0, _core.$C)('$data.storageProviders.oData.oDataProvider', _core2.default.StorageProviderBase, null, {\n    constructor: function constructor(cfg, ctx) {\n        this.SqlCommands = [];\n        this.context = ctx;\n        this.providerConfiguration = _core2.default.typeSystem.extend({\n            dbCreation: _core2.default.storageProviders.DbCreationType.DropTableIfChanged,\n            oDataServiceHost: \"/odata.svc\",\n            serviceUrl: \"\",\n            maxDataServiceVersion: '4.0',\n            dataServiceVersion: undefined,\n            user: null,\n            password: null,\n            withCredentials: false,\n            //enableJSONP: undefined,\n            //useJsonLight: undefined\n            //disableBatch: undefined\n            //withReferenceMethods: undefined\n            //enableDeepSave: undefined\n            UpdateMethod: 'PATCH'\n        }, cfg);\n\n        if (this.providerConfiguration.maxDataServiceVersion === \"4.0\") {\n            if (typeof odatajs === 'undefined' || typeof odatajs.oData === 'undefined') {\n                _core.Guard.raise(new _core.Exception('odatajs is required', 'Not Found!'));\n            } else {\n                this.oData = odatajs.oData;\n            }\n        } else {\n            if (typeof OData === 'undefined') {\n                _core.Guard.raise(new _core.Exception('datajs is required', 'Not Found!'));\n            } else {\n                this.oData = OData;\n                _datajsPatch(this.oData);\n            }\n        }\n\n        //this.fixkDataServiceVersions(cfg);\n\n        if (this.context && this.context._buildDbType_generateConvertToFunction && this.buildDbType_generateConvertToFunction) {\n            this.context._buildDbType_generateConvertToFunction = this.buildDbType_generateConvertToFunction;\n        }\n        if (this.context && this.context._buildDbType_modifyInstanceDefinition && this.buildDbType_modifyInstanceDefinition) {\n            this.context._buildDbType_modifyInstanceDefinition = this.buildDbType_modifyInstanceDefinition;\n        }\n    },\n    fixkDataServiceVersions: function fixkDataServiceVersions(cfg) {\n        if (this.providerConfiguration.dataServiceVersion > this.providerConfiguration.maxDataServiceVersion) {\n            this.providerConfiguration.dataServiceVersion = this.providerConfiguration.maxDataServiceVersion;\n        }\n\n        if (this.providerConfiguration.setDataServiceVersionToMax === true) {\n            this.providerConfiguration.dataServiceVersion = this.providerConfiguration.maxDataServiceVersion;\n        }\n\n        if (cfg && !cfg.UpdateMethod && this.providerConfiguration.dataServiceVersion < '3.0' || !this.providerConfiguration.dataServiceVersion) {\n            this.providerConfiguration.UpdateMethod = 'MERGE';\n        }\n    },\n    initializeStore: function initializeStore(callBack) {\n        callBack = _core2.default.PromiseHandlerBase.createCallbackSettings(callBack);\n        switch (this.providerConfiguration.dbCreation) {\n            case _core2.default.storageProviders.DbCreationType.DropAllExistingTables:\n                var that = this;\n                if (this.providerConfiguration.serviceUrl) {\n\n                    var requestData = [{\n                        requestUri: that.providerConfiguration.serviceUrl + \"/Delete\",\n                        method: 'POST'\n                    }, function (d) {\n                        //console.log(\"RESET oData database\");\n                        callBack.success(that.context);\n                    }, function (error) {\n                        callBack.success(that.context);\n                    }];\n\n                    this.appendBasicAuth(requestData[0], this.providerConfiguration.user, this.providerConfiguration.password, this.providerConfiguration.withCredentials);\n                    //if (this.providerConfiguration.user) {\n                    //    requestData[0].user = this.providerConfiguration.user;\n                    //    requestData[0].password = this.providerConfiguration.password || \"\";\n                    //}\n\n                    this.context.prepareRequest.call(this, requestData);\n                    this.oData.request.apply(this, requestData);\n                } else {\n                    callBack.success(that.context);\n                }\n                break;\n            default:\n                callBack.success(this.context);\n                break;\n        }\n    },\n    buildDbType_generateConvertToFunction: function buildDbType_generateConvertToFunction(storageModel, context) {\n        return function (logicalEntity, convertedItems) {\n            var dbInstance = new storageModel.PhysicalType();\n            dbInstance.entityState = logicalEntity.entityState;\n\n            storageModel.PhysicalType.memberDefinitions.getPublicMappedProperties().forEach(function (property) {\n                dbInstance.initData[property.name] = logicalEntity[property.name];\n            }, this);\n\n            if (storageModel.Associations) {\n                storageModel.Associations.forEach(function (association) {\n                    if (association.FromMultiplicity == \"*\" && association.ToMultiplicity == \"0..1\" || association.FromMultiplicity == \"0..1\" && association.ToMultiplicity == \"1\" || association.FromMultiplicity == '$$unbound') {\n                        var refValue = logicalEntity[association.FromPropertyName];\n                        if ( /*refValue !== null &&*/refValue !== undefined) {\n                            if (refValue instanceof _core2.default.Array) {\n                                dbInstance.initData[association.FromPropertyName] = dbInstance[association.FromPropertyName] || [];\n                                refValue.forEach(function (rv) {\n                                    var item = convertedItems.getItem(rv, true);\n                                    var contentId = item ? item.itemIndex : -1;\n                                    if (rv.entityState == _core2.default.EntityState.Modified || contentId < 0) {\n                                        var sMod = context._storageModel.getStorageModel(rv.getType());\n                                        var tblName = sMod.TableName;\n                                        var pk = '(' + context.storageProvider.getEntityKeysValue({ data: rv, entitySet: context.getEntitySetFromElementType(rv.getType()) }) + ')';\n                                        dbInstance.initData[association.FromPropertyName].push({ __metadata: { uri: tblName + pk } });\n                                    } else {\n                                        if (contentId < 0) {\n                                            _core.Guard.raise(\"Dependency graph error\");\n                                        }\n                                        //dbInstance.initData[association.FromPropertyName].push({ __metadata: { uri: \"$\" + (contentId) } });\n                                        dbInstance.initData[association.FromPropertyName].push({ __convertedRefence: item });\n                                    }\n                                }, this);\n                            } else if (refValue === null) {\n                                dbInstance.initData[association.FromPropertyName] = null;\n                            } else {\n                                var item = convertedItems.getItem(refValue, true);\n                                var contentId = item ? item.itemIndex : -1;\n                                if (refValue.entityState == _core2.default.EntityState.Modified || contentId < 0) {\n                                    var sMod = context._storageModel.getStorageModel(refValue.getType());\n                                    var tblName = sMod.TableName;\n                                    var pk = '(' + context.storageProvider.getEntityKeysValue({ data: refValue, entitySet: context.getEntitySetFromElementType(refValue.getType()) }) + ')';\n                                    dbInstance.initData[association.FromPropertyName] = { __metadata: { uri: tblName + pk } };\n                                } else {\n                                    if (contentId < 0) {\n                                        _core.Guard.raise(\"Dependency graph error\");\n                                    }\n                                    //dbInstance.initData[association.FromPropertyName] = { __metadata: { uri: \"$\" + (contentId) } };\n                                    dbInstance.initData[association.FromPropertyName] = { __convertedRefence: item };\n                                }\n                            }\n                        }\n                    }\n                }, this);\n            }\n            if (storageModel.ComplexTypes) {\n                storageModel.ComplexTypes.forEach(function (cmpType) {\n                    dbInstance.initData[cmpType.FromPropertyName] = logicalEntity[cmpType.FromPropertyName];\n                }, this);\n            }\n            return dbInstance;\n        };\n    },\n    buildDbType_modifyInstanceDefinition: function buildDbType_modifyInstanceDefinition() {\n        return;\n    },\n    executeQuery: function executeQuery(query, callBack) {\n        callBack = _core2.default.PromiseHandlerBase.createCallbackSettings(callBack);\n\n        var sql = {};\n        try {\n            sql = this._compile(query);\n        } catch (e) {\n            callBack.error(e);\n            return;\n        }\n        var schema = this.context;\n\n        var that = this;\n        var countProperty = \"@odata.count\";\n\n        var requestData = [{\n            requestUri: this.providerConfiguration.oDataServiceHost + sql.queryText,\n            method: sql.method,\n            data: sql.postData,\n            headers: {}\n        }, function (data, textStatus, jqXHR) {\n\n            if (!data && textStatus.body && !sql.isBatchExecuteQuery) data = JSON.parse(textStatus.body);\n            if (callBack.success) {\n                var processSuccess = function processSuccess(query, data, sql) {\n                    query.rawDataList = typeof data === 'string' ? [{ cnt: _core.Container.convertTo(data, _core2.default.Integer) }] : data;\n                    if (sql.withInlineCount && (typeof data === 'undefined' ? 'undefined' : _typeof(data)) === 'object' && (typeof data[countProperty] !== 'undefined' || 'd' in data && typeof data.d[countProperty] !== 'undefined')) {\n                        query.__count = new Number(typeof data[countProperty] !== 'undefined' ? data[countProperty] : data.d[countProperty]).valueOf();\n                    }\n                };\n\n                if (sql.isBatchExecuteQuery) {\n                    query.rawDataList = sql.subQueries;\n                    for (var i = 0; i < data.__batchResponses.length; i++) {\n                        var resp = data.__batchResponses[i];\n\n                        if (!resp.data) {\n                            if (resp.body) {\n                                resp.data = JSON.parse(resp.body);\n                            } else {\n                                callBack.error(that.parseError(resp, arguments));\n                                return;\n                            }\n                        }\n\n                        processSuccess(sql.subQueries[i], resp.data, sql.subQueries[i]._getComplitedData());\n                    }\n                } else {\n                    processSuccess(query, data, sql);\n                }\n\n                callBack.success(query);\n            }\n        }, function (error) {\n            callBack.error(that.parseError(error, arguments));\n        }, sql.isBatchExecuteQuery ? this.oData.batch.batchHandler : undefined];\n\n        if (typeof this.providerConfiguration.enableJSONP !== 'undefined') {\n            requestData[0].enableJsonpCallback = this.providerConfiguration.enableJSONP;\n        }\n        if (typeof this.providerConfiguration.useJsonLight !== 'undefined') {\n            requestData[0].useJsonLight = this.providerConfiguration.useJsonLight;\n        }\n\n        this.appendBasicAuth(requestData[0], this.providerConfiguration.user, this.providerConfiguration.password, this.providerConfiguration.withCredentials);\n        //if (this.providerConfiguration.user) {\n        //    requestData[0].user = this.providerConfiguration.user;\n        //    requestData[0].password = this.providerConfiguration.password || \"\";\n        //}\n\n        this.context.prepareRequest.call(this, requestData);\n        //$data.ajax(requestData);\n        //OData.request(requestData, requestData.success, requestData.error);\n        this.oData.request.apply(this, requestData);\n    },\n    _compile: function _compile(queryable, params) {\n        var compiler = new _core2.default.storageProviders.oData.oDataCompiler();\n        var compiled = compiler.compile(queryable);\n        return compiled;\n    },\n    saveChanges: function saveChanges(callBack, changedItems) {\n        if (changedItems.length > 0) {\n            this.saveInternal(changedItems, callBack);\n        } else {\n            callBack.success(0);\n        }\n    },\n    saveInternal: function saveInternal(changedItems, callBack) {\n        var independentBlocks = this.buildIndependentBlocks(changedItems);\n        if (_checkODataMode(this, \"enableDeepSave\")) {\n            this._checkDeepSave(changedItems);\n        }\n        var convertedItems = this._buildSaveData(independentBlocks, changedItems);\n        var actionMode = this.saveStrategySelector(convertedItems);\n        if (actionMode) {\n            actionMode.save(this, convertedItems, callBack);\n        } else {\n            callBack.error(new _core.Exception('Not Found', 'Save action not found'));\n        }\n    },\n    saveStrategySelector: function saveStrategySelector(convertedItems) {\n        for (var i = 0; i < this.saveStrategies.length; i++) {\n            var saveAction = this.saveStrategies[i];\n            if (saveAction.condition(this, convertedItems)) {\n                return saveAction;\n            }\n        }\n\n        return null;\n    },\n    saveStrategies: {\n        value: [_batch.strategy, _single.strategy, _empty.strategy]\n    },\n\n    _discoverSaveOrder: function _discoverSaveOrder(changedItems) {\n        var entityItems = changedItems.map(function (it) {\n            return it.data;\n        });\n        var entityInfo = changedItems.map(function (it) {\n            return { path: [], visited: false, result: true };\n        });\n        var entityQueue = [];\n        var discoveredEntities = [];\n\n        var process = function process(currentEntity) {\n            var index = entityItems.indexOf(currentEntity);\n            var changedItem = changedItems[index];\n            var info = entityInfo[index];\n\n            if (info.visited) return info.result;\n            if (info.visiting) return false;\n\n            var references = [];\n            if (changedItem.referredBy) {\n                references = references.concat(changedItem.referredBy);\n            }\n            if (changedItem.dependentOn) {\n                references = references.concat(changedItem.dependentOn);\n            }\n\n            for (var i = 0; i < references.length; i++) {\n                var ref = references[i];\n                if (discoveredEntities.indexOf(ref) < 0) {\n                    entityQueue.push(ref);\n                    discoveredEntities.push(ref);\n                    var refIndex = entityItems.indexOf(ref);\n                    changedItems[refIndex].deepParent = currentEntity;\n                }\n            }\n        };\n\n        for (var i = 0; i < changedItems.length; i++) {\n            var changedItem = changedItems[i];\n            if (entityQueue.indexOf(changedItem.data) < 0) {\n                entityQueue.push(changedItem.data);\n                discoveredEntities.push(changedItem.data);\n                entityInfo[i].parent = null;\n            }\n\n            while (entityQueue.length) {\n                var currentItem = entityQueue.shift();\n                process(currentItem);\n            }\n        }\n    },\n\n    _checkDeepSave: function _checkDeepSave(changedItems) {\n        var entityItems = changedItems.map(function (it) {\n            return it.data;\n        });\n        var entityInfo = changedItems.map(function (it) {\n            return { path: [], visited: false, result: true };\n        });\n\n        var discover = function discover(changedItem, parent, index) {\n            var info = entityInfo[index];\n            if (info.visited) return info.result;\n            if (info.visiting) return false;\n\n            var references = [];\n            if (changedItem.referredBy) {\n                references = references.concat(changedItem.referredBy);\n            }\n            if (changedItem.dependentOn) {\n                references = references.concat(changedItem.dependentOn);\n            }\n\n            if (references.length === 0) {\n                info.visited = true;\n                info.result = true;\n            } else {\n                info.visiting = true;\n\n                for (var i = 0; i < references.length; i++) {\n                    var entity = references[i];\n                    var idx = entityItems.indexOf(entity);\n                    var innerChangeItem = changedItems[idx];\n                    if (!innerChangeItem) return false;\n                    if (innerChangeItem === parent) continue;\n\n                    var result = discover(innerChangeItem, changedItem, idx);\n                    info.result = info.result && changedItem.data.entityState === _core2.default.EntityState.Added && (!changedItem.additionalDependentOn || changedItem.additionalDependentOn.length === 0) && result;\n                }\n                delete info.visiting;\n                info.visited = true;\n            }\n\n            changedItem.enableDeepSave = info.result;\n            return info.result;\n        };\n\n        for (var i = 0; i < changedItems.length; i++) {\n            var changedItem = changedItems[i];\n            discover(changedItem, null, i);\n        }\n\n        this._discoverSaveOrder(changedItems);\n    },\n\n    _buildSaveData: function _buildSaveData(independentBlocks, changedItems) {\n        var convertedItems = new _core2.default.storageProviders.oData.RequestManager();\n        for (var index = 0; index < independentBlocks.length; index++) {\n            for (var i = 0; i < independentBlocks[index].length; i++) {\n                var independentItem = independentBlocks[index][i];\n\n                var request = null;\n                var item = convertedItems.getItem(independentItem.data);\n                if (!item) {\n                    request = new activities.RequestBuilder(this);\n                    request.add(new activities.SetUrl(this.providerConfiguration.oDataServiceHost + '/'));\n                    item = convertedItems.add(independentItem, request);\n                }\n                request = item.request;\n\n                var entityState = independentItem.data.entityState;\n                if (typeof this._buildRequestObject['EntityState_' + entityState] === 'function') {\n                    this._buildRequestObject['EntityState_' + entityState](this, independentItem, convertedItems, request, changedItems);\n                } else {\n                    _core.Guard.raise(new _core.Exception(\"Not supported Entity state\"));\n                }\n            }\n        }\n\n        return convertedItems;\n    },\n    _buildRequestObject: {\n        value: {\n            'EntityState_20': function EntityState_20(provider, item, convertedItem, request, changedItems) {\n                request.add(new activities.SetMethod(\"POST\"), new activities.AppendUrl(item.entitySet.tableName));\n\n                provider.save_getInitData(item, convertedItem, undefined, undefined, request, changedItems);\n            },\n            'EntityState_30': function EntityState_30(provider, item, convertedItem, request, changedItems) {\n                request.add(new activities.SetMethod(provider.providerConfiguration.UpdateMethod), new activities.AppendUrl(item.entitySet.tableName), new activities.AppendUrl(\"(\" + provider.getEntityKeysValue(item) + \")\"));\n\n                provider.addETagHeader(item, request);\n\n                provider.save_getInitData(item, convertedItem, undefined, undefined, request, changedItems);\n            },\n            'EntityState_40': function EntityState_40(provider, item, convertedItem, request, changedItems) {\n                request.add(new activities.SetMethod(\"DELETE\"), new activities.ClearRequestData(), new activities.AppendUrl(item.entitySet.tableName), new activities.AppendUrl(\"(\" + provider.getEntityKeysValue(item) + \")\"));\n\n                provider.addETagHeader(item, request);\n            }\n        }\n    },\n    reload_fromResponse: function reload_fromResponse(item, data, response) {\n        var that = this;\n        item.getType().memberDefinitions.getPublicMappedProperties().forEach(function (memDef) {\n            var propType = _core.Container.resolveType(memDef.type);\n            if (memDef.computed || memDef.key || !memDef.inverseProperty) {\n                if (memDef.concurrencyMode === _core2.default.ConcurrencyMode.Fixed) {\n                    //unescape?\n                    //item[memDef.name] = response.headers.ETag || response.headers.Etag || response.headers.etag;\n                    item[memDef.name] = data['@odata.etag'];\n                } else if (memDef.isAssignableTo) {\n                    if (data[memDef.name]) {\n                        item[memDef.name] = new propType(data[memDef.name], { converters: that.fieldConverter.fromDb });\n                    } else {\n                        item[memDef.name] = data[memDef.name];\n                    }\n                } else if (propType === _core2.default.Array && memDef.elementType) {\n                    var aeType = _core.Container.resolveType(memDef.elementType);\n                    if (data[memDef.name] && Array.isArray(data[memDef.name])) {\n                        var arrayProperty = [];\n                        for (var ap = 0; ap < data[memDef.name].length; ap++) {\n                            var aitem = data[memDef.name][ap];\n                            if (aeType.isAssignableTo && !_core.Guard.isNullOrUndefined(aitem)) {\n                                arrayProperty.push(new aeType(aitem, { converters: that.fieldConverter.fromDb }));\n                            } else {\n                                var etypeName = _core.Container.resolveName(aeType);\n                                var econverter = that.fieldConverter.fromDb[etypeName];\n\n                                arrayProperty.push(econverter ? econverter(aitem) : aitem);\n                            }\n                        }\n                        item[memDef.name] = arrayProperty;\n                    } else if (!data[memDef.name]) {\n                        item[memDef.name] = data[memDef.name];\n                    }\n                } else {\n                    var typeName = _core.Container.resolveName(memDef.type);\n                    var converter = that.fieldConverter.fromDb[typeName];\n\n                    item[memDef.name] = converter ? converter(data[memDef.name]) : data[memDef.name];\n                }\n            }\n        }, this);\n    },\n\n    save_getInitData: function save_getInitData(item, convertedItems, isComplex, isDeep, request, changedItems) {\n        var self = this;\n        if (!isComplex) {\n            item.physicalData = this.context._storageModel.getStorageModel(item.data.getType()).PhysicalType.convertTo(item.data, convertedItems);\n        } else {\n            item.physicalData = item.data;\n        }\n        var hasSavedProperty = item.data.entityState === _core2.default.EntityState.Added;\n        item.physicalData.getType().memberDefinitions.asArray().forEach(function (memdef) {\n            hasSavedProperty = self.propertyConversationSelector(item, memdef, convertedItems, request, changedItems, isDeep) || hasSavedProperty;\n        }, this);\n\n        if (!hasSavedProperty && !isDeep) {\n            convertedItems.remove(item.data);\n        }\n    },\n    propertyConversationSelector: function propertyConversationSelector(item, memdef, convertedItems, request, changedItems, isDeep) {\n        if (memdef.kind == _core2.default.MemberTypes.complexProperty) {\n            return this._complexPropertySelector.apply(this, arguments);\n        }\n\n        if (memdef.kind == _core2.default.MemberTypes.property) {\n            return this._propertySelector.apply(this, arguments);\n        }\n\n        if (memdef.kind == _core2.default.MemberTypes.navProperty) {\n            return this._navigationPropertySelector.apply(this, arguments);\n        }\n\n        return false;\n    },\n    _complexPropertySelector: function _complexPropertySelector(item, memdef, convertedItems, request, changedItems, isDeep) {\n        return this.propertyConversationStrategies[\"complex\"].apply(this, arguments);\n    },\n    _propertySelector: function _propertySelector(item, memdef, convertedItems, request, changedItems, isDeep) {\n        if (typeof memdef.concurrencyMode === 'undefined') {\n            switch (true) {\n                case memdef.notMapped:\n                    return false;\n                case memdef.key === true:\n                    this.propertyConversationStrategies[\"default\"].apply(this, arguments);\n                    return false;\n                case isDeep:\n                case item.data.entityState === _core2.default.EntityState.Added:\n                case this._propertyIsChanged(item.data, memdef):\n                    return this.propertyConversationStrategies[\"default\"].apply(this, arguments);\n                default:\n                    return false;\n            }\n        }\n\n        return false;\n    },\n    _navigationPropertySelector: function _navigationPropertySelector(item, memdef, convertedItems, request, changedItems, isDeep) {\n        var _this = this;\n\n        if (isDeep || item.data.entityState === _core2.default.EntityState.Added || this._propertyIsChanged(item.data, memdef)) {\n\n            var navigationValue = item.data[memdef.name];\n            if (_checkODataMode(this, 'enableDeepSave') && navigationValue && item.data.entityState === _core2.default.EntityState.Added) {\n                var result = null;\n                if (Array.isArray(navigationValue)) {\n                    navigationValue.forEach(function (navItem, index) {\n                        _this._processDeepSaveItems(item, memdef, convertedItems, request, changedItems, navItem, \"deepSaveArray\", index);\n                        //update not supported here\n                    });\n                    return true; //item.data is new\n                } else {\n                        result = this._processDeepSaveItems(item, memdef, convertedItems, request, changedItems, navigationValue, \"deepSave\");\n                    }\n\n                if (result !== null) {\n                    return result;\n                }\n            }\n\n            return this._simpleNavigationPropertySelector.apply(this, arguments);\n        }\n        return false;\n    },\n    _simpleNavigationPropertySelector: function _simpleNavigationPropertySelector(item, memdef, convertedItems, request, changedItems, isDeep) {\n        if (_checkODataMode(this, 'withReferenceMethods')) {\n            return this.propertyConversationStrategies[\"withReferenceMethods\"].apply(this, arguments);\n        }\n\n        return this.propertyConversationStrategies[\"navigation\"].apply(this, arguments);\n    },\n\n    _processDeepSaveItems: function _processDeepSaveItems(item, memdef, convertedItems, request, changedItems, navigationEntity, strategy, index) {\n        var referencedItems = changedItems.filter(function (it) {\n            return it.data == navigationEntity;\n        });\n\n        if (referencedItems.length === 1 && referencedItems[0].enableDeepSave && navigationEntity.entityState === _core2.default.EntityState.Added && referencedItems[0].deepParent === item.data) {\n            var deepItem = convertedItems.getItem(referencedItems[0].data);\n            if (!deepItem) {\n                var referencedRequest = new activities.RequestBuilder(this);\n                referencedRequest.add(new activities.SetUrl(this.providerConfiguration.oDataServiceHost + '/'));\n                deepItem = convertedItems.add(referencedItems[0], referencedRequest);\n            }\n\n            convertedItems.addItemReference(item.data, deepItem);\n            if (!deepItem.removed) {\n                convertedItems.remove(referencedItems[0].data);\n            }\n\n            return this.propertyConversationStrategies[strategy].call(this, item, memdef, convertedItems, request, changedItems, index);\n        }\n\n        return null;\n    },\n    _propertyIsChanged: function _propertyIsChanged(entity, memdef) {\n        return entity && entity.changedProperties && entity.changedProperties.some(function (def) {\n            return def.name === memdef.name;\n        });\n    },\n    propertyConversationStrategies: {\n        value: {\n            \"default\": function _default(item, memdef, convertedItems, request, changedItems) {\n                var typeName = _core.Container.resolveName(memdef.type);\n                var converter = this.fieldConverter.toDb[typeName];\n                request.add(new activities.SetProperty(memdef.name, converter ? converter(item.physicalData[memdef.name]) : item.physicalData[memdef.name]));\n                return true;\n            },\n            \"withReferenceMethods\": function withReferenceMethods(item, memdef, convertedItems, request, changedItems) {\n                var reqItem = convertedItems.getItem(item.data);\n                if (reqItem && reqItem.removed) return false; //deep saved\n\n                var additionalRequest = new activities.RequestBuilder(this);\n                var value = item.physicalData[memdef.name];\n                if (value) {\n                    additionalRequest.add(new activities.SetMethod('POST'));\n                    if (value.__metadata) {\n                        additionalRequest.add(new activities.SetProperty('@odata.id', this.providerConfiguration.oDataServiceHost + '/' + value.__metadata.uri));\n                    } else if (value.__convertedRefence) {\n                        additionalRequest.add(function (req, provider) {\n                            var targetItem = value.__convertedRefence;\n                            req.data = req.data || {};\n                            if (targetItem.isProcessed) {\n                                req.data[\"@odata.id\"] = provider.getEntityUrlReference(targetItem.entity);\n                            } else {\n                                req.data[\"@odata.id\"] = provider.providerConfiguration.oDataServiceHost + '/$' + targetItem.itemIndex;\n                            }\n                        });\n                    }\n                } else {\n                    if (item.data.entityState === _core2.default.EntityState.Added || value !== null) return;\n\n                    additionalRequest.add(new activities.SetUrl(this.providerConfiguration.oDataServiceHost + '/'), new activities.AppendUrl(item.entitySet.tableName), new activities.AppendUrl(\"(\" + this.getEntityKeysValue(item) + \")\"), new activities.SetMethod('DELETE'), new activities.ClearRequestData());\n                }\n\n                additionalRequest.add(function (req, provider) {\n                    if (reqItem.isProcessed || item.data.entityState !== _core2.default.EntityState.Added) {\n                        req.requestUri = provider.providerConfiguration.oDataServiceHost + '/';\n                        req.requestUri += item.entitySet.tableName;\n                        req.requestUri += \"(\" + provider.getEntityKeysValue(item) + \")\";\n                        provider.addETagHeader(item, req);\n                    } else {\n                        req.requestUri = '$' + reqItem.itemIndex;\n                        provider.addETagHeader(item, req, _core2.default.defaults.OData.eTagAny);\n                    }\n\n                    req.requestUri += '/' + memdef.name + '/$ref';\n                });\n\n                var refItem = convertedItems.add(item, additionalRequest, false);\n                convertedItems.addItemReference(item.data, refItem);\n                return false;\n            },\n            \"deepSave\": function deepSave(item, memdef, convertedItems, request, changedItems) {\n                var refItem = convertedItems.getItem(item.data[memdef.name]);\n                request.add(function (req, provider) {\n                    req.data[memdef.name] = refItem.request.build().get().data;\n                });\n                return true;\n            },\n            \"deepSaveArray\": function deepSaveArray(item, memdef, convertedItems, request, changedItems, index) {\n                var refItem = convertedItems.getItem(item.data[memdef.name][index]);\n                request.add(function (req, provider) {\n                    req.data[memdef.name] = req.data[memdef.name] || [];\n                    req.data[memdef.name].push(refItem.request.build().get().data);\n                });\n                return true;\n            },\n            \"navigation\": function navigation(item, memdef, convertedItems, request, changedItems) {\n\n                request.add(function (req, provider) {\n                    req.data = req.data || {};\n\n                    if (item.physicalData[memdef.name] && item.physicalData[memdef.name].__metadata) {\n                        req.data[memdef.name + \"@odata.bind\"] = item.physicalData[memdef.name].__metadata.uri;\n                    } else if (item.physicalData[memdef.name] && item.physicalData[memdef.name].__convertedRefence) {\n                        var targetItem = item.physicalData[memdef.name].__convertedRefence;\n                        if (targetItem.isProcessed) {\n                            req.data[memdef.name + \"@odata.bind\"] = provider.getEntityUrlReference(targetItem.entity);\n                        } else {\n                            req.data[memdef.name + \"@odata.bind\"] = \"$\" + targetItem.itemIndex;\n                        }\n                    } else if (item.physicalData[memdef.name] === null) {\n                        req.data[memdef.name + \"@odata.bind\"] = null;\n                    }\n                });\n                return true;\n            },\n            \"complex\": function complex(item, memdef, convertedItems, request, changedItems) {\n                if (item.physicalData[memdef.name]) {\n                    var innerRequest = new activities.RequestBuilder(this);\n                    this.save_getInitData({ data: item.physicalData[memdef.name] }, convertedItems, true, true, innerRequest);\n                    request.add(function (req) {\n                        req.data = req.data || {};\n                        req.data[memdef.name] = innerRequest.build().get().data;\n                    });\n                    return true;\n                }\n                return false;\n            }\n        }\n    },\n\n    addETagHeader: function addETagHeader(item, request, value) {\n        var property = item.data.getType().memberDefinitions.getPublicMappedProperties().filter(function (memDef) {\n            return memDef.concurrencyMode === _core2.default.ConcurrencyMode.Fixed;\n        });\n        if (property && property[0]) {\n            var headerValue = typeof value !== \"undefined\" ? value : item.data[property[0].name];\n            if (typeof headerValue !== \"undefined\") {\n                if (request instanceof activities.RequestBuilder) {\n                    request.add(new activities.SetHeaderProperty('If-Match', headerValue));\n                } else {\n                    request.headers['If-Match'] = headerValue;\n                }\n            }\n        }\n    },\n\n    getTraceString: function getTraceString(queryable) {\n        var sqlText = this._compile(queryable);\n        return queryable;\n    },\n    supportedDataTypes: {\n        value: [_core2.default.Array, _core2.default.Integer, _core2.default.String, _core2.default.Number, _core2.default.Blob, _core2.default.Boolean, _core2.default.Date, _core2.default.Object, _core2.default.GeographyPoint, _core2.default.Guid, _core2.default.GeographyLineString, _core2.default.GeographyPolygon, _core2.default.GeographyMultiPoint, _core2.default.GeographyMultiLineString, _core2.default.GeographyMultiPolygon, _core2.default.GeographyCollection, _core2.default.GeometryPoint, _core2.default.GeometryLineString, _core2.default.GeometryPolygon, _core2.default.GeometryMultiPoint, _core2.default.GeometryMultiLineString, _core2.default.GeometryMultiPolygon, _core2.default.GeometryCollection, _core2.default.Byte, _core2.default.SByte, _core2.default.Decimal, _core2.default.Float, _core2.default.Int16, _core2.default.Int32, _core2.default.Int64, _core2.default.Time, _core2.default.Day, _core2.default.DateTimeOffset, _core2.default.Duration],\n        writable: false\n    },\n\n    supportedBinaryOperators: {\n        value: {\n            equal: { mapTo: 'eq', dataType: \"boolean\", allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression] },\n            notEqual: { mapTo: 'ne', dataType: \"boolean\", allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression] },\n            equalTyped: { mapTo: 'eq', dataType: \"boolean\", allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression] },\n            notEqualTyped: { mapTo: 'ne', dataType: \"boolean\", allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression] },\n            greaterThan: { mapTo: 'gt', dataType: \"boolean\", allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression] },\n            greaterThanOrEqual: { mapTo: 'ge', dataType: \"boolean\", allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression] },\n\n            lessThan: { mapTo: 'lt', dataType: \"boolean\", allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression] },\n            lessThenOrEqual: { mapTo: 'le', dataType: \"boolean\", allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression] },\n            or: { mapTo: 'or', dataType: \"boolean\", allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression] },\n            and: { mapTo: 'and', dataType: \"boolean\", allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression] },\n\n            add: { mapTo: 'add', dataType: \"number\", allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression] },\n            divide: { mapTo: 'div', allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression] },\n            multiply: { mapTo: 'mul', allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression] },\n            subtract: { mapTo: 'sub', allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression] },\n            modulo: { mapTo: 'mod', allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression] },\n\n            \"in\": { mapTo: \"in\", allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression] }\n        }\n    },\n\n    supportedUnaryOperators: {\n        value: {\n            not: { mapTo: 'not' }\n        }\n    },\n\n    supportedFieldOperations: {\n        value: {\n            /* string functions */\n\n            contains: {\n                mapTo: \"substringof\",\n                dataType: \"boolean\", allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression],\n                parameters: [{ name: \"substring\", dataType: \"string\" }, { name: \"@expression\" }]\n            },\n\n            startsWith: {\n                mapTo: \"startswith\",\n                dataType: \"string\", allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression],\n                parameters: [{ name: \"@expression\", dataType: \"string\" }, { name: \"strFragment\", dataType: \"string\" }]\n            },\n\n            endsWith: {\n                mapTo: \"endswith\",\n                dataType: \"string\", allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression],\n                parameters: [{ name: \"@expression\", dataType: \"string\" }, { name: \"strFragment\", dataType: \"string\" }]\n            },\n\n            length: [{\n                allowedType: 'string',\n                dataType: \"number\", allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.ProjectionExpression],\n                parameters: [{ name: \"@expression\", dataType: \"string\" }]\n            }, {\n                allowedType: 'GeographyLineString',\n                mapTo: \"geo.length\",\n                dataType: \"number\", allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression],\n                parameters: [{ name: \"@expression\", dataType: ['GeographyLineString'] }],\n                fixedDataType: 'decimal'\n            }, {\n                allowedType: 'GeometryLineString',\n                mapTo: \"geo.length\",\n                dataType: \"number\", allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression],\n                parameters: [{ name: \"@expression\", dataType: 'GeometryLineString' }],\n                fixedDataType: 'decimal'\n            }],\n\n            strLength: {\n                mapTo: \"length\",\n                dataType: \"number\", allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.ProjectionExpression],\n                parameters: [{ name: \"@expression\", dataType: \"string\" }]\n            },\n\n            indexOf: {\n                dataType: \"number\", allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression],\n                mapTo: \"indexof\",\n                baseIndex: 1,\n                parameters: [{ name: '@expression', dataType: \"string\" }, { name: 'strFragment', dataType: 'string' }]\n            },\n\n            replace: {\n                dataType: \"string\", allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression],\n                parameters: [{ name: '@expression', dataType: \"string\" }, { name: 'strFrom', dataType: 'string' }, { name: 'strTo', dataType: 'string' }]\n            },\n\n            substr: {\n                mapTo: \"substring\",\n                dataType: \"string\", allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression],\n                parameters: [{ name: \"@expression\", dataType: \"string\" }, { name: \"startFrom\", dataType: \"number\" }, { name: \"length\", dataType: \"number\", optional: \"true\" }]\n            },\n\n            toLowerCase: {\n                mapTo: \"tolower\",\n                dataType: \"string\", allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression],\n                parameters: [{ name: \"@expression\", dataType: \"string\" }]\n            },\n\n            toUpperCase: {\n                mapTo: \"toupper\",\n                dataType: \"string\", allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression],\n                parameters: [{ name: \"@expression\", dataType: \"string\" }]\n\n            },\n\n            trim: {\n                dataType: \"string\", allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression],\n                parameters: [{ name: \"@expression\", dataType: \"string\" }]\n            },\n\n            concat: {\n                dataType: \"string\", allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression],\n                parameters: [{ name: \"@expression\", dataType: \"string\" }, { name: \"strFragment\", dataType: \"string\" }]\n            },\n\n            /* data functions */\n\n            day: {\n                allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression],\n                parameters: [{ name: \"@expression\", dataType: \"date\" }]\n            },\n            hour: {\n                allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression],\n                parameters: [{ name: \"@expression\", dataType: \"date\" }]\n            },\n            minute: {\n                allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression],\n                parameters: [{ name: \"@expression\", dataType: \"date\" }]\n            },\n            month: {\n                allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression],\n                parameters: [{ name: \"@expression\", dataType: \"date\" }]\n            },\n            second: {\n                allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression],\n                parameters: [{ name: \"@expression\", dataType: \"date\" }]\n            },\n            year: {\n                allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression],\n                parameters: [{ name: \"@expression\", dataType: \"date\" }]\n            },\n\n            /* number functions */\n            round: {\n                allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression],\n                parameters: [{ name: \"@expression\", dataType: \"date\" }]\n            },\n            floor: {\n                allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression],\n                parameters: [{ name: \"@expression\", dataType: \"date\" }]\n            },\n            ceiling: {\n                allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression],\n                parameters: [{ name: \"@expression\", dataType: \"date\" }]\n            },\n\n            /* geo functions */\n            distance: [{\n                allowedType: 'GeographyPoint',\n                mapTo: \"geo.distance\",\n                dataType: \"number\", allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression],\n                parameters: [{ name: \"@expression\", dataType: 'GeographyPoint' }, { name: \"to\", dataType: 'GeographyPoint' }],\n                fixedDataType: 'decimal'\n            }, {\n                allowedType: 'GeometryPoint',\n                mapTo: \"geo.distance\",\n                dataType: \"number\", allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression],\n                parameters: [{ name: \"@expression\", dataType: 'GeometryPoint' }, { name: \"to\", dataType: 'GeometryPoint' }],\n                fixedDataType: 'decimal'\n            }],\n\n            intersects: [{\n                allowedType: 'GeographyPoint',\n                mapTo: \"geo.intersects\",\n                dataType: \"boolean\", allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression],\n                parameters: [{ name: \"@expression\", dataType: 'GeographyPoint' }, { name: \"in\", dataType: 'GeographyPolygon' }]\n\n            }, {\n                allowedType: 'GeometryPoint',\n                mapTo: \"geo.intersects\",\n                dataType: \"boolean\", allowedIn: [_core2.default.Expressions.FilterExpression, _core2.default.Expressions.OrderExpression],\n                parameters: [{ name: \"@expression\", dataType: 'GeometryPoint' }, { name: \"in\", dataType: 'GeometryPolygon' }]\n\n            }]\n        },\n        enumerable: true,\n        writable: true\n    },\n    supportedSetOperations: {\n        value: {\n            filter: {\n                allowedIn: [_core2.default.Expressions.IncludeExpression],\n                parameters: [{ name: \"filter\", dataType: \"$data.Queryable\" }],\n                frameType: _core2.default.Expressions.FilterExpression,\n                includeFrameName: '$filter',\n                includeCompiler: '$data.storageProviders.oData.oDataWhereCompiler'\n            },\n            map: {\n                allowedIn: [_core2.default.Expressions.IncludeExpression],\n                parameters: [{ name: \"map\", dataType: \"$data.Queryable\" }],\n                frameType: _core2.default.Expressions.ProjectionExpression,\n                includeFrameName: '$select',\n                includeCompiler: '$data.storageProviders.oData.oDataProjectionCompiler'\n            },\n            length: {},\n            forEach: {},\n            toArray: {},\n            single: {},\n            some: {\n                invokable: false,\n                allowedIn: [_core2.default.Expressions.FilterExpression],\n                parameters: [{ name: \"some\", dataType: \"$data.Queryable\" }],\n                mapTo: 'any',\n                frameType: _core2.default.Expressions.SomeExpression\n            },\n            every: {\n                invokable: false,\n                allowedIn: [_core2.default.Expressions.FilterExpression],\n                parameters: [{ name: \"every\", dataType: \"$data.Queryable\" }],\n                mapTo: 'all',\n                frameType: _core2.default.Expressions.EveryExpression\n            },\n            take: {\n                allowedIn: [_core2.default.Expressions.IncludeExpression],\n                parameters: [{ name: \"take\", dataType: \"$data.Integer\" }],\n                frameType: _core2.default.Expressions.PagingExpression,\n                includeFrameName: '$top',\n                includeCompiler: '$data.storageProviders.oData.oDataPagingCompiler'\n            },\n            skip: {\n                allowedIn: [_core2.default.Expressions.IncludeExpression],\n                parameters: [{ name: \"skip\", dataType: \"$data.Integer\" }],\n                frameType: _core2.default.Expressions.PagingExpression,\n                includeFrameName: '$skip',\n                includeCompiler: '$data.storageProviders.oData.oDataPagingCompiler'\n            },\n            orderBy: {\n                allowedIn: [_core2.default.Expressions.IncludeExpression],\n                parameters: [{ name: \"orderBy\", dataType: \"$data.Queryable\" }],\n                frameType: _core2.default.Expressions.OrderExpression,\n                includeFrameName: '$orderby',\n                includeCompiler: '$data.storageProviders.oData.oDataOrderCompiler'\n            },\n            orderByDescending: {\n                allowedIn: [_core2.default.Expressions.IncludeExpression],\n                parameters: [{ name: \"orderByDescending\", dataType: \"$data.Queryable\" }],\n                frameType: _core2.default.Expressions.OrderExpression,\n                frameTypeFactory: function frameTypeFactory(source, selector) {\n                    return new _core2.default.Expressions.OrderExpression(source, selector, _core2.default.Expressions.ExpressionType.OrderByDescending);\n                },\n                includeFrameName: '$orderby',\n                includeCompiler: '$data.storageProviders.oData.oDataOrderCompiler'\n            },\n            first: {},\n            include: {},\n            batchDelete: {},\n            withInlineCount: {\n                allowedIn: [_core2.default.Expressions.IncludeExpression],\n                parameters: [],\n                frameType: _core2.default.Expressions.InlineCountExpression,\n                includeFrameName: '$count',\n                implementation: function implementation() {\n                    return 'true';\n                }\n            },\n            find: {}\n        },\n        enumerable: true,\n        writable: true\n    },\n    supportedContextOperation: {\n        value: {\n            batchExecuteQuery: true\n        },\n        enumerable: true,\n        writable: true\n    },\n\n    fieldConverter: { value: _core2.default.oDataConverter },\n    resolveTypeOperations: function resolveTypeOperations(operation, expression, frameType) {\n        var memDef = expression.entityType.getMemberDefinition(operation);\n        if (!memDef || !memDef.method || memDef.method.IsSideEffecting !== false || !memDef.method.returnType || !(frameType === _core2.default.Expressions.FilterExpression || frameType === _core2.default.Expressions.OrderExpression)) {\n            _core.Guard.raise(new _core.Exception(\"Entity '\" + expression.entityType.name + \"' Operation '\" + operation + \"' is not supported by the provider\"));\n        }\n\n        return memDef;\n    },\n    resolveSetOperations: function resolveSetOperations(operation, expression, frameType) {\n        if (expression) {\n            var esDef = expression.storageModel.ContextType.getMemberDefinition(expression.storageModel.ItemName);\n            if (esDef && esDef.actions && esDef.actions[operation]) {\n                var memDef = _core2.default.MemberDefinition.translateDefinition(esDef.actions[operation], operation, this.getType());\n                if (!memDef || !memDef.method || memDef.method.IsSideEffecting !== false || !memDef.method.returnType || !(frameType === _core2.default.Expressions.FilterExpression || frameType === _core2.default.Expressions.OrderExpression)) {\n\n                    _core.Guard.raise(new _core.Exception(\"Collection '\" + expression.storageModel.ItemName + \"' Operation '\" + operation + \"' is not supported by the provider\"));\n                }\n\n                return memDef;\n            }\n        }\n        return _core2.default.StorageProviderBase.prototype.resolveSetOperations.apply(this, arguments);\n    },\n    resolveContextOperations: function resolveContextOperations(operation, expression, frameType) {\n        var memDef = this.context.getType().getMemberDefinition(operation);\n        if (!memDef || !memDef.method || memDef.method.IsSideEffecting !== false || !memDef.method.returnType || !(frameType === _core2.default.Expressions.FilterExpression || frameType === _core2.default.Expressions.OrderExpression)) {\n            _core.Guard.raise(new _core.Exception(\"Context '\" + expression.instance.getType().name + \"' Operation '\" + operation + \"' is not supported by the provider\"));\n        }\n        return memDef;\n    },\n\n    getEntityUrlReference: function getEntityUrlReference(entity) {\n        var sMod = this.context._storageModel.getStorageModel(entity.getType());\n        var tblName = sMod.TableName;\n        var pk = '(' + this.getEntityKeysValue({ data: entity, entitySet: this.context.getEntitySetFromElementType(entity.getType()) }) + ')';\n        return this.providerConfiguration.oDataServiceHost + '/' + tblName + pk;\n    },\n\n    getEntityKeysValue: function getEntityKeysValue(entity) {\n        var result = [];\n        var keyValue = undefined;\n        var memDefs = entity.data.getType().memberDefinitions.getKeyProperties();\n        for (var i = 0, l = memDefs.length; i < l; i++) {\n            var field = memDefs[i];\n            if (field.key) {\n                keyValue = entity.data[field.name];\n                var typeName = _core.Container.resolveName(field.type);\n\n                var converter = this.fieldConverter.toDb[typeName];\n                keyValue = converter ? converter(keyValue) : keyValue;\n\n                converter = this.fieldConverter.escape[typeName];\n                keyValue = converter ? converter(keyValue) : keyValue;\n\n                result.push(field.name + \"=\" + keyValue);\n            }\n        }\n        if (result.length > 1) {\n            return result.join(\",\");\n        }\n        return keyValue;\n    },\n    getFieldUrl: function getFieldUrl(entity, fieldName, entitySet) {\n        var keyPart = this.getEntityKeysValue({ data: entity });\n        var servicehost = this.providerConfiguration.oDataServiceHost;\n        if (servicehost.lastIndexOf('/') === servicehost.length) servicehost = servicehost.substring(0, servicehost.length - 1);\n\n        return servicehost + '/' + entitySet.tableName + '(' + keyPart + ')/' + fieldName + '/$value';\n    }, /*\r\n       getServiceMetadata: function () {\r\n         $data.ajax(this._setAjaxAuthHeader({\r\n             url: this.providerConfiguration.oDataServiceHost + \"/$metadata\",\r\n             dataType: \"xml\",\r\n             success: function (d) {\r\n                 console.log(\"OK\");\r\n                 console.dir(d);\r\n                 console.log(typeof d);\r\n                 window[\"s\"] = d;\r\n                 window[\"k\"] = this.nsResolver;\r\n                 //s.evaluate(\"edmx:Edmx/edmx:DataServices/Schema\", s, $data.storageProviders.oData.oDataProvider.prototype.nsResolver, XPathResult.ANY_TYPE, null).iterateNext()\r\n               },\r\n             error: function (error) {\r\n                 console.log(\"error:\");\r\n                 console.dir(error);\r\n             }\r\n         }));\r\n       },\r\n       nsResolver: function (sPrefix) {\r\n         switch (sPrefix) {\r\n             case \"edmx\":\r\n                 return \"http://schemas.microsoft.com/ado/2007/06/edmx\";\r\n                 break;\r\n             case \"m\":\r\n                 return \"http://schemas.microsoft.com/ado/2007/08/dataservices/metadata\";\r\n                 break;\r\n             case \"d\":\r\n                 return \"http://schemas.microsoft.com/ado/2007/08/dataservices\";\r\n                 break;\r\n             default:\r\n                 return \"http://schemas.microsoft.com/ado/2008/09/edm\";\r\n                 break;\r\n         }\r\n       }\r\n       */\n    parseError: function parseError(error, data) {\n\n        var message = (error.response || error || {}).body || '';\n        try {\n            if (message.indexOf('{') === 0) {\n                var errorObj = JSON.parse(message);\n                errorObj = errorObj['odata.error'] || errorObj.error || errorObj;\n                if (errorObj.message) {\n                    message = errorObj.message.value || errorObj.message;\n                }\n            }\n        } catch (e) {}\n\n        return new _core.Exception(message, error.message, data || error);\n    },\n    appendBasicAuth: function appendBasicAuth(request, user, password, withCredentials) {\n        request.headers = request.headers || {};\n        if (!request.headers.Authorization && user && password) {\n            request.headers.Authorization = \"Basic \" + this.__encodeBase64(user + \":\" + password);\n        }\n        if (withCredentials) {\n            request.withCredentials = withCredentials;\n        }\n    },\n    __encodeBase64: function __encodeBase64(val) {\n        var b64array = \"ABCDEFGHIJKLMNOP\" + \"QRSTUVWXYZabcdef\" + \"ghijklmnopqrstuv\" + \"wxyz0123456789+/\" + \"=\";\n\n        var input = val;\n        var base64 = \"\";\n        var hex = \"\";\n        var chr1,\n            chr2,\n            chr3 = \"\";\n        var enc1,\n            enc2,\n            enc3,\n            enc4 = \"\";\n        var i = 0;\n\n        do {\n            chr1 = input.charCodeAt(i++);\n            chr2 = input.charCodeAt(i++);\n            chr3 = input.charCodeAt(i++);\n\n            enc1 = chr1 >> 2;\n            enc2 = (chr1 & 3) << 4 | chr2 >> 4;\n            enc3 = (chr2 & 15) << 2 | chr3 >> 6;\n            enc4 = chr3 & 63;\n\n            if (isNaN(chr2)) {\n                enc3 = enc4 = 64;\n            } else if (isNaN(chr3)) {\n                enc4 = 64;\n            }\n\n            base64 = base64 + b64array.charAt(enc1) + b64array.charAt(enc2) + b64array.charAt(enc3) + b64array.charAt(enc4);\n            chr1 = chr2 = chr3 = \"\";\n            enc1 = enc2 = enc3 = enc4 = \"\";\n        } while (i < input.length);\n\n        return base64;\n    },\n    checkODataMode: function checkODataMode(functionName) {\n        return _checkODataMode(this, functionName);\n    }\n}, null);\n\n_core2.default.StorageProviderBase.registerProvider(\"oData\", _core2.default.storageProviders.oData.oDataProvider);\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./SaveStrategies/batch\":1,\"./SaveStrategies/empty\":2,\"./SaveStrategies/single\":3,\"./oDataRequestActivities.js\":12,\"jaydata/core\":\"jaydata/core\"}],12:[function(_dereq_,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar RequestBuilder = exports.RequestBuilder = function () {\n    function RequestBuilder(context, request) {\n        _classCallCheck(this, RequestBuilder);\n\n        this._context = context;\n        this._request = request || {};\n        this._activities = [];\n    }\n\n    _createClass(RequestBuilder, [{\n        key: 'get',\n        value: function get() {\n            return this._request;\n        }\n    }, {\n        key: 'add',\n        value: function add() {\n            var _activities;\n\n            (_activities = this._activities).push.apply(_activities, arguments);\n            return this;\n        }\n    }, {\n        key: 'build',\n        value: function build() {\n            var _this = this;\n\n            this._request.headers = this._request.headers || {};\n            this._request.data = this._request.data || {};\n\n            this._activities.forEach(function (a) {\n                return a instanceof RequestActivity ? a.implementation(_this._request, _this._context) : a(_this._request, _this._context);\n            });\n\n            this._activities = [];\n            return this;\n        }\n    }]);\n\n    return RequestBuilder;\n}();\n\nvar RequestActivity = exports.RequestActivity = function () {\n    function RequestActivity() {\n        _classCallCheck(this, RequestActivity);\n    }\n\n    _createClass(RequestActivity, [{\n        key: 'implementation',\n        value: function implementation(request, provider) {}\n    }]);\n\n    return RequestActivity;\n}();\n\nvar SetRequestActivity = exports.SetRequestActivity = function (_RequestActivity) {\n    _inherits(SetRequestActivity, _RequestActivity);\n\n    function SetRequestActivity(key, value) {\n        _classCallCheck(this, SetRequestActivity);\n\n        var _this2 = _possibleConstructorReturn(this, Object.getPrototypeOf(SetRequestActivity).call(this));\n\n        _this2.key = key;\n        _this2.value = value;\n        return _this2;\n    }\n\n    _createClass(SetRequestActivity, [{\n        key: 'implementation',\n        value: function implementation(request, provider) {}\n    }]);\n\n    return SetRequestActivity;\n}(RequestActivity);\n\nvar SetRequestProperty = exports.SetRequestProperty = function (_SetRequestActivity) {\n    _inherits(SetRequestProperty, _SetRequestActivity);\n\n    function SetRequestProperty() {\n        _classCallCheck(this, SetRequestProperty);\n\n        return _possibleConstructorReturn(this, Object.getPrototypeOf(SetRequestProperty).apply(this, arguments));\n    }\n\n    _createClass(SetRequestProperty, [{\n        key: 'implementation',\n        value: function implementation(request, provider) {\n            request[this.key] = this.value;\n        }\n    }]);\n\n    return SetRequestProperty;\n}(SetRequestActivity);\n\nvar SetDataProperty = exports.SetDataProperty = function (_SetRequestActivity2) {\n    _inherits(SetDataProperty, _SetRequestActivity2);\n\n    function SetDataProperty() {\n        _classCallCheck(this, SetDataProperty);\n\n        return _possibleConstructorReturn(this, Object.getPrototypeOf(SetDataProperty).apply(this, arguments));\n    }\n\n    _createClass(SetDataProperty, [{\n        key: 'implementation',\n        value: function implementation(request, provider) {\n            request.data[this.key] = this.value;\n        }\n    }]);\n\n    return SetDataProperty;\n}(SetRequestActivity);\n\nvar SetHeaderProperty = exports.SetHeaderProperty = function (_SetRequestActivity3) {\n    _inherits(SetHeaderProperty, _SetRequestActivity3);\n\n    function SetHeaderProperty() {\n        _classCallCheck(this, SetHeaderProperty);\n\n        return _possibleConstructorReturn(this, Object.getPrototypeOf(SetHeaderProperty).apply(this, arguments));\n    }\n\n    _createClass(SetHeaderProperty, [{\n        key: 'implementation',\n        value: function implementation(request, provider) {\n            request.headers[this.key] = this.value;\n        }\n    }]);\n\n    return SetHeaderProperty;\n}(SetRequestActivity);\n\nvar SetUrl = exports.SetUrl = function (_SetRequestProperty) {\n    _inherits(SetUrl, _SetRequestProperty);\n\n    function SetUrl(url) {\n        _classCallCheck(this, SetUrl);\n\n        return _possibleConstructorReturn(this, Object.getPrototypeOf(SetUrl).call(this, 'requestUri', url));\n    }\n\n    return SetUrl;\n}(SetRequestProperty);\n\nvar AppendUrl = exports.AppendUrl = function (_SetUrl) {\n    _inherits(AppendUrl, _SetUrl);\n\n    function AppendUrl() {\n        _classCallCheck(this, AppendUrl);\n\n        return _possibleConstructorReturn(this, Object.getPrototypeOf(AppendUrl).apply(this, arguments));\n    }\n\n    _createClass(AppendUrl, [{\n        key: 'implementation',\n        value: function implementation(request, provider) {\n            request[this.key] == request[this.key] || \"\";\n            request[this.key] += this.value;\n        }\n    }]);\n\n    return AppendUrl;\n}(SetUrl);\n\nvar SetMethod = exports.SetMethod = function (_SetRequestProperty2) {\n    _inherits(SetMethod, _SetRequestProperty2);\n\n    function SetMethod(method) {\n        _classCallCheck(this, SetMethod);\n\n        return _possibleConstructorReturn(this, Object.getPrototypeOf(SetMethod).call(this, 'method', method));\n    }\n\n    return SetMethod;\n}(SetRequestProperty);\n\nvar SetProperty = exports.SetProperty = function (_SetDataProperty) {\n    _inherits(SetProperty, _SetDataProperty);\n\n    function SetProperty() {\n        _classCallCheck(this, SetProperty);\n\n        return _possibleConstructorReturn(this, Object.getPrototypeOf(SetProperty).apply(this, arguments));\n    }\n\n    return SetProperty;\n}(SetDataProperty);\n\nvar SetNavigationProperty = exports.SetNavigationProperty = function (_SetDataProperty2) {\n    _inherits(SetNavigationProperty, _SetDataProperty2);\n\n    function SetNavigationProperty() {\n        _classCallCheck(this, SetNavigationProperty);\n\n        return _possibleConstructorReturn(this, Object.getPrototypeOf(SetNavigationProperty).apply(this, arguments));\n    }\n\n    _createClass(SetNavigationProperty, [{\n        key: 'implementation',\n        value: function implementation(request, provider) {\n            request.data[this.key] = this.value;\n        }\n    }]);\n\n    return SetNavigationProperty;\n}(SetDataProperty);\n\nvar ClearRequestData = exports.ClearRequestData = function (_RequestActivity2) {\n    _inherits(ClearRequestData, _RequestActivity2);\n\n    function ClearRequestData() {\n        _classCallCheck(this, ClearRequestData);\n\n        return _possibleConstructorReturn(this, Object.getPrototypeOf(ClearRequestData).apply(this, arguments));\n    }\n\n    _createClass(ClearRequestData, [{\n        key: 'implementation',\n        value: function implementation(request, provider) {\n            delete request.data;\n        }\n    }]);\n\n    return ClearRequestData;\n}(RequestActivity);\n\n},{}],13:[function(_dereq_,module,exports){\n'use strict';\n\nvar _core = _dereq_('jaydata/core');\n\nvar _core2 = _interopRequireDefault(_core);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n(0, _core.$C)('$data.storageProviders.oData.oDataWhereCompiler', _core2.default.Expressions.EntityExpressionVisitor, null, {\n    constructor: function constructor(provider, lambdaPrefix) {\n        this.provider = provider;\n        this.lambdaPrefix = lambdaPrefix;\n    },\n\n    compile: function compile(expression, context) {\n        this.Visit(expression, context);\n    },\n\n    VisitParametricQueryExpression: function VisitParametricQueryExpression(expression, context) {\n        this.Visit(expression.expression, context);\n    },\n\n    VisitUnaryExpression: function VisitUnaryExpression(expression, context) {\n        context.data += expression.resolution.mapTo;\n        context.data += \"(\";\n        this.Visit(expression.operand, context);\n        context.data += \")\";\n    },\n\n    VisitSimpleBinaryExpression: function VisitSimpleBinaryExpression(expression, context) {\n        context.data += \"(\";\n        //TODO refactor!!!\n        if (expression.nodeType == \"in\") {\n            _core.Guard.requireType(\"expression.right\", expression.type, _core2.default.Expressions.ConstantExpression);\n            var paramValue = expression.right.value;\n            if (!(paramValue instanceof Array)) {\n                _core.Guard.raise(new _core.Exception(\"Right to the 'in' operator must be an array value\"));\n            }\n            var result = null;\n            var orResolution = { mapTo: \"or\", dataType: \"boolean\", name: \"or\" };\n            var eqResolution = { mapTo: \"eq\", dataType: \"boolean\", name: \"equal\" };\n\n            paramValue.forEach(function (item) {\n                var idValue = item;\n                var idCheck = _core.Container.createSimpleBinaryExpression(expression.left, idValue, _core2.default.Expressions.ExpressionType.Equal, \"==\", \"boolean\", eqResolution);\n                if (result) {\n                    result = _core.Container.createSimpleBinaryExpression(result, idCheck, _core2.default.Expressions.ExpressionType.Or, \"||\", \"boolean\", orResolution);\n                } else {\n                    result = idCheck;\n                };\n            });\n            var temp = context.data;\n            context.data = '';\n            this.Visit(result, context);\n            context.data = temp + context.data.replace(/\\(/g, '').replace(/\\)/g, '');\n        } else {\n            this.Visit(expression.left, context);\n            context.data += \" \";\n            context.data += expression.resolution.mapTo;\n            context.data += \" \";\n            this.Visit(expression.right, context);\n        };\n        context.data += \")\";\n    },\n\n    VisitEntityFieldExpression: function VisitEntityFieldExpression(expression, context) {\n        this.Visit(expression.source, context);\n        if (expression.source instanceof _core2.default.Expressions.ComplexTypeExpression) {\n            context.data += \"/\";\n        }\n        this.Visit(expression.selector, context);\n    },\n\n    VisitAssociationInfoExpression: function VisitAssociationInfoExpression(expression, context) {\n        context.data += expression.associationInfo.FromPropertyName;\n    },\n\n    VisitMemberInfoExpression: function VisitMemberInfoExpression(expression, context) {\n        context.data += expression.memberName;\n    },\n\n    VisitQueryParameterExpression: function VisitQueryParameterExpression(expression, context) {\n        var typeName = _core.Container.resolveName(expression.type);\n\n        var converter = this.provider.fieldConverter.toDb[typeName];\n        var value = converter ? converter(expression.value) : expression.value;\n\n        converter = this.provider.fieldConverter.escape[typeName];\n        context.data += converter ? converter(value) : value;\n    },\n\n    VisitEntityFieldOperationExpression: function VisitEntityFieldOperationExpression(expression, context) {\n        _core.Guard.requireType(\"expression.operation\", expression.operation, _core2.default.Expressions.MemberInfoExpression);\n\n        //TODO refactor!\n        var opDef = expression.operation.memberDefinition;\n        var opName = opDef.mapTo || opDef.name;\n        context.data += opName;\n        context.data += \"(\";\n        var paramCounter = 0;\n        var params = opDef.parameters || [{ name: \"@expression\" }];\n\n        var args = params.map(function (item, index) {\n            if (item.name === \"@expression\") {\n                return expression.source;\n            } else {\n                return expression.parameters[paramCounter++];\n            };\n        });\n\n        args.forEach(function (arg, index) {\n            if (index > 0) {\n                context.data += \",\";\n            };\n            this.Visit(arg, context);\n        }, this);\n        context.data += \")\";\n    },\n    VisitEntityFunctionOperationExpression: function VisitEntityFunctionOperationExpression(expression, context) {\n        _core.Guard.requireType(\"expression.operation\", expression.operation, _core2.default.Expressions.MemberInfoExpression);\n        this.Visit(expression.source, context);\n\n        //TODO refactor!\n        var opDef = expression.operation.memberDefinition;\n        var opName = opDef.mapTo || opDef.name;\n        context.data += opName;\n        context.data += \"(\";\n        var paramCounter = 0;\n        var params = opDef.method.params || [{ name: \"@expression\" }];\n\n        var args = params.map(function (item, index) {\n            if (item.name === \"@expression\") {\n                return expression.source;\n            } else {\n                return expression.parameters[paramCounter++];\n            };\n        });\n        var i = 0;\n        args.forEach(function (arg, index) {\n            if (arg === undefined || arg instanceof _core2.default.Expressions.ConstantExpression && typeof arg.value === 'undefined') return;\n\n            if (i > 0) {\n                context.data += \",\";\n            };\n            i++;\n            context.data += params[index].name + '=';\n            this.Visit(arg, context);\n        }, this);\n        context.data += \")\";\n    },\n    VisitContextFunctionOperationExpression: function VisitContextFunctionOperationExpression(expression, context) {\n        return this.VisitEntityFunctionOperationExpression(expression, context);\n    },\n\n    VisitConstantExpression: function VisitConstantExpression(expression, context) {\n        var typeName = _core.Container.resolveName(expression.type);\n\n        var converter = this.provider.fieldConverter.toDb[typeName];\n        var value = converter ? converter(expression.value) : expression.value;\n\n        converter = this.provider.fieldConverter.escape[typeName];\n        context.data += converter ? converter(value) : value;\n    },\n\n    VisitEntityExpression: function VisitEntityExpression(expression, context) {\n        this.Visit(expression.source, context);\n\n        if (this.lambdaPrefix && expression.selector.lambda) {\n            context.lambda = expression.selector.lambda;\n            context.data += expression.selector.lambda + '/';\n        }\n\n        //if (expression.selector instanceof $data.Expressions.EntityExpression) {\n        //    this.Visit(expression.selector, context);\n        //}\n    },\n\n    VisitEntitySetExpression: function VisitEntitySetExpression(expression, context) {\n        this.Visit(expression.source, context);\n        if (expression.selector instanceof _core2.default.Expressions.AssociationInfoExpression) {\n            this.Visit(expression.selector, context);\n            context.data += \"/\";\n        }\n    },\n\n    VisitFrameOperationExpression: function VisitFrameOperationExpression(expression, context) {\n        this.Visit(expression.source, context);\n\n        _core.Guard.requireType(\"expression.operation\", expression.operation, _core2.default.Expressions.MemberInfoExpression);\n\n        //TODO refactor!\n        var opDef = expression.operation.memberDefinition;\n        var opName = opDef.mapTo || opDef.name;\n        context.data += opName;\n        context.data += \"(\";\n        var paramCounter = 0;\n        var params = opDef.parameters || [{ name: \"@expression\" }];\n\n        var args = params.map(function (item, index) {\n            if (item.name === \"@expression\") {\n                return expression.source;\n            } else {\n                return expression.parameters[paramCounter++];\n            };\n        });\n\n        for (var i = 0; i < args.length; i++) {\n            var arg = args[i];\n            if (arg && arg.value instanceof _core2.default.Queryable) {\n                var frameExpression = new opDef.frameType(arg.value.expression);\n                var preparator = _core.Container.createQueryExpressionCreator(arg.value.entityContext);\n                var prep_expression = preparator.Visit(frameExpression);\n\n                var compiler = new _core2.default.storageProviders.oData.oDataWhereCompiler(this.provider, true);\n                var frameContext = { data: \"\" };\n                var compiled = compiler.compile(prep_expression, frameContext);\n\n                context.data += frameContext.lambda + ': ' + frameContext.data;\n            };\n        }\n        context.data += \")\";\n    }\n});\n\n},{\"jaydata/core\":\"jaydata/core\"}]},{},[4])(4)\n});\n\n","import $data, { $C, Guard, Container, Exception, MemberDefinition } from 'jaydata/core';\r\n\r\nvar strategy = {\r\n    name: 'batch',\r\n    condition: function (provider, convertedItems) {\r\n        var disabled = false;\r\n        if(typeof provider.providerConfiguration.disableBatch !== 'undefined'){\r\n            disabled = !!provider.providerConfiguration.disableBatch;\r\n        } else {\r\n            disabled = !!$data.defaults.OData.disableBatch;\r\n        }\r\n        \r\n        if (!disabled) {\r\n            var requests = convertedItems.getItems();\r\n            return requests.length > 1;\r\n        }\r\n        \r\n        return false;\r\n    },\r\n    save: function (provider, convertedItems, callBack) {\r\n        var that = provider;\r\n        var items = convertedItems.getItems();\r\n        var requests = items.map(function(it){ return it.request.build().get() })\r\n        \r\n        var requestData = [{\r\n            requestUri: that.providerConfiguration.oDataServiceHost + \"/$batch\",\r\n            method: \"POST\",\r\n            data: {\r\n                __batchRequests: [{ __changeRequests: requests }]\r\n            },\r\n            headers: {\r\n            }\r\n        }, function (data, response) {\r\n            if (response.statusCode == 200 || response.statusCode == 202) {\r\n                var result = data.__batchResponses[0].__changeResponses;\r\n                var errors = [];\r\n\r\n                for (var i = 0; i < result.length; i++) {\r\n                    if (result[i].statusCode >= 200 && result[i].statusCode < 300) {\r\n                        var item = convertedItems.getByResponse(result[i], i);\r\n                        if(item instanceof $data.Entity && result[i].statusCode != 204){\r\n                            that.reload_fromResponse(item, result[i].data, result[i]);\r\n                            convertedItems.setProcessed(item);\r\n                        }\r\n                    } else {\r\n                        errors.push(that.parseError(result[i]));\r\n                    }\r\n                }\r\n                if (errors.length > 0) {\r\n                    if (errors.length === 1) {\r\n                        callBack.error(errors[0]);\r\n                    } else {\r\n                        callBack.error(new Exception('See inner exceptions', 'Batch failed', errors));\r\n                    }\r\n                } else if (callBack.success) {\r\n                    callBack.success(convertedItems.length);\r\n                }\r\n            } else {\r\n                callBack.error(that.parseError(response));\r\n            }\r\n\r\n        }, function (e) {\r\n            callBack.error(that.parseError(e));\r\n        }, that.oData.batch.batchHandler];\r\n\r\n        if (typeof that.providerConfiguration.useJsonLight !== 'undefined') {\r\n            requestData[0].useJsonLight = that.providerConfiguration.useJsonLight;\r\n        }\r\n\r\n        that.appendBasicAuth(requestData[0], that.providerConfiguration.user, that.providerConfiguration.password, that.providerConfiguration.withCredentials);\r\n\r\n        that.context.prepareRequest.call(that, requestData);\r\n        that.oData.request.apply(that, requestData);\r\n    }\r\n}\r\n\r\n\r\nexport { strategy }","\r\nvar strategy = {\r\n    name: 'empty',\r\n    condition: function (provider, convertedItems) {\r\n        return true;\r\n    },\r\n    save: function (provider, convertedItems, callBack) {\r\n        callBack.success(0);\r\n    }\r\n}\r\n\r\n\r\nexport { strategy }","import $data, { $C, Guard, Container, Exception, MemberDefinition } from 'jaydata/core';\r\n\r\nvar strategy = {\r\n    name: 'single',\r\n    condition: function (provider, convertedItems) {\r\n        var requests = convertedItems.getItems();\r\n        return requests.length > 0;\r\n    },\r\n    save: function (provider, convertedItems, callBack) {\r\n        var that = provider;\r\n        var items = convertedItems.getItems();\r\n        \r\n        var doSave = function(items, index, done){\r\n            var item = items[index];\r\n            if(!item) return done()\r\n            \r\n            var request = item.request.build().get();\r\n            var requestData = [request, function (data, response) {\r\n                if (response.statusCode >= 200 && response.statusCode < 300) {\r\n                    var item = convertedItems.getByResponse(response, index);\r\n                    if(item instanceof $data.Entity && response.statusCode != 204){\r\n                        that.reload_fromResponse(item, data, response);\r\n                        convertedItems.setProcessed(item);\r\n                    }\r\n\r\n                    doSave(items, ++index, done);\r\n                } else {\r\n                    done(response);\r\n                }\r\n\r\n            }, done];\r\n\r\n            that.appendBasicAuth(requestData[0], that.providerConfiguration.user, that.providerConfiguration.password, that.providerConfiguration.withCredentials);\r\n            that.context.prepareRequest.call(that, requestData);\r\n            that.oData.request.apply(that, requestData);\r\n        }\r\n        \r\n        doSave(items, 0, function(err, result){\r\n            if(err) return callBack.error(that.parseError(err));\r\n            callBack.success(result);\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport { strategy }","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _core = require('jaydata/core');\n\nvar _core2 = _interopRequireDefault(_core);\n\nvar _oDataConverter = require('./oDataConverter.js');\n\nvar _oDataConverter2 = _interopRequireDefault(_oDataConverter);\n\nvar _oDataProvider = require('./oDataProvider.js');\n\nvar _oDataProvider2 = _interopRequireDefault(_oDataProvider);\n\nvar _oDataCompiler = require('./oDataCompiler.js');\n\nvar _oDataCompiler2 = _interopRequireDefault(_oDataCompiler);\n\nvar _oDataWhereCompiler = require('./oDataWhereCompiler.js');\n\nvar _oDataWhereCompiler2 = _interopRequireDefault(_oDataWhereCompiler);\n\nvar _oDataIncludeCompiler = require('./oDataIncludeCompiler.js');\n\nvar _oDataIncludeCompiler2 = _interopRequireDefault(_oDataIncludeCompiler);\n\nvar _oDataOrderCompiler = require('./oDataOrderCompiler.js');\n\nvar _oDataOrderCompiler2 = _interopRequireDefault(_oDataOrderCompiler);\n\nvar _oDataPagingCompiler = require('./oDataPagingCompiler.js');\n\nvar _oDataPagingCompiler2 = _interopRequireDefault(_oDataPagingCompiler);\n\nvar _oDataProjectionCompiler = require('./oDataProjectionCompiler.js');\n\nvar _oDataProjectionCompiler2 = _interopRequireDefault(_oDataProjectionCompiler);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _core2.default;\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJpbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbXX0=","import $data, { $C, Guard, Container, Exception, MemberDefinition } from 'jaydata/core';\r\n\r\n$C('$data.storageProviders.oData.oDataCompiler', $data.Expressions.EntityExpressionVisitor, null, {\r\n    constructor: function () {\r\n        this.context = {};\r\n        this.provider = {};\r\n        //this.logicalType = null;\r\n        this.includes = null;\r\n        this.mainEntitySet = null;\r\n    },\r\n    compile: function (query) {\r\n\r\n        this.provider = query.context.storageProvider;\r\n        this.context = query.context;\r\n\r\n        if (query.defaultType) {\r\n            this.mainEntitySet = query.context.getEntitySetFromElementType(query.defaultType);\r\n        }\r\n\r\n        var queryFragments = { urlText: \"\" };\r\n\r\n        this.Visit(query.expression, queryFragments);\r\n        if(queryFragments.$expand){\r\n            queryFragments.$expand = queryFragments.$expand.toString();\r\n        }\r\n        \r\n\r\n        query.modelBinderConfig = {};\r\n        var modelBinder = Container.createModelBinderConfigCompiler(query, this.includes, true);\r\n        modelBinder.Visit(query.expression);\r\n\r\n\r\n        var queryText = queryFragments.urlText;\r\n        var addAmp = false;\r\n        \r\n        if(queryFragments.$funcParams){\r\n            queryText += \"(\" + queryFragments.$funcParams + \")\"\r\n        }\r\n        \r\n        for (var name in queryFragments) {\r\n            if (name != \"urlText\" && name != \"actionPack\" && name != \"data\" && name != \"lambda\" && name != \"method\" && name != \"postData\" &&\r\n                name != \"_isBatchExecuteQuery\" && name != \"_subQueries\" && name != \"$funcParams\" && queryFragments[name] != \"\") {\r\n\r\n                if (addAmp) { queryText += \"&\"; } else { queryText += \"?\"; }\r\n                addAmp = true;\r\n                if(name != \"$urlParams\"){\r\n                    queryText += name + '=' + queryFragments[name];\r\n                }else{\r\n                    queryText += queryFragments[name];\r\n                }\r\n            }\r\n        }\r\n        query.queryText = queryText;\r\n        query.postData = queryFragments.postData;\r\n        var result =  {\r\n            queryText: queryText,\r\n            withInlineCount: '$inlinecount' in queryFragments || '$count' in queryFragments,\r\n            method: queryFragments.method || 'GET',\r\n            postData: queryFragments.postData,\r\n            isBatchExecuteQuery: queryFragments._isBatchExecuteQuery,\r\n            subQueries: queryFragments._subQueries,\r\n            params: []\r\n        };\r\n\r\n        query._getComplitedData = function () {\r\n            return result;\r\n        }\r\n\r\n        return result;\r\n    },\r\n    VisitOrderExpression: function (expression, context) {\r\n        this.Visit(expression.source, context);\r\n\r\n        var orderCompiler = Container.createoDataOrderCompiler(this.provider);\r\n        orderCompiler.compile(expression, context);\r\n    },\r\n    VisitPagingExpression: function (expression, context) {\r\n        this.Visit(expression.source, context);\r\n\r\n        var pagingCompiler = Container.createoDataPagingCompiler(this.provider);\r\n        pagingCompiler.compile(expression, context);\r\n    },\r\n    VisitIncludeExpression: function (expression, context) {\r\n        this.Visit(expression.source, context);\r\n\r\n        var includeCompiler = Container.createoDataIncludeCompiler(this.provider);\r\n        this.includes = this.includes || []\r\n        var includeContext = { data: context[\"$expand\"], includes: this.includes }\r\n        includeCompiler.compile(expression.selector, includeContext);\r\n        context[\"$expand\"] = includeContext.data;\r\n    },\r\n    VisitFindExpression: function (expression, context) {\r\n        this.Visit(expression.source, context);\r\n\r\n        if (expression.subMember) {\r\n            context.urlText += \"/\" + expression.subMember.memberName;\r\n        }\r\n\r\n        context.urlText += '(';\r\n        if (expression.params.length === 1) {\r\n            var param = expression.params[0];\r\n            var typeName = Container.resolveName(param.type);\r\n\r\n            var converter = this.provider.fieldConverter.toDb[typeName];\r\n            var value = converter ? converter(param.value) : param.value;\r\n\r\n            converter = this.provider.fieldConverter.escape[typeName];\r\n            value = converter ? converter(param.value) : param.value;\r\n            context.urlText += value;\r\n        } else {\r\n            for (var i = 0; i < expression.params.length; i++) {\r\n                var param = expression.params[i];\r\n                var typeName = Container.resolveName(param.type);\r\n\r\n                var converter = this.provider.fieldConverter.toDb[typeName];\r\n                var value = converter ? converter(param.value) : param.value;\r\n\r\n                converter = this.provider.fieldConverter.escape[typeName];\r\n                value = converter ? converter(param.value) : param.value;\r\n\r\n                if (i > 0) context.urlText += ',';\r\n                context.urlText += param.name + '=' + value;\r\n            }\r\n        }\r\n        context.urlText += ')';\r\n    },\r\n    VisitProjectionExpression: function (expression, context) {\r\n        this.Visit(expression.source, context);\r\n\r\n        var projectionCompiler = Container.createoDataProjectionCompiler(this.provider);\r\n        projectionCompiler.compile(expression, context);\r\n    },\r\n    VisitFilterExpression: function (expression, context) {\r\n        ///<param name=\"expression\" type=\"$data.Expressions.FilterExpression\" />\r\n\r\n        this.Visit(expression.source, context);\r\n\r\n        var filterCompiler = Container.createoDataWhereCompiler(this.provider);\r\n        context.data = \"\";\r\n        filterCompiler.compile(expression.selector, context);\r\n        context[\"$filter\"] = context.data;\r\n        context.data = \"\";\r\n\r\n    },\r\n    VisitInlineCountExpression: function (expression, context) {\r\n        this.Visit(expression.source, context);\r\n        if (this.provider.providerConfiguration.maxDataServiceVersion === \"4.0\") {\r\n            context[\"$count\"] = expression.selector.value === 'allpages';\r\n        } else {\r\n            context[\"$inlinecount\"] = expression.selector.value;\r\n        }\r\n    },\r\n    VisitEntitySetExpression: function (expression, context) {\r\n        context.urlText += \"/\" + expression.instance.tableName;\r\n        //this.logicalType = expression.instance.elementType;\r\n        if (expression.params) {\r\n            for (var i = 0; i < expression.params.length; i++) {\r\n                this.Visit(expression.params[i], context);\r\n            }\r\n        }\r\n    },\r\n    VisitServiceOperationExpression: function (expression, context) {\r\n        if (expression.boundItem) {\r\n            context.urlText += \"/\" + expression.boundItem.entitySet.tableName;\r\n            if (expression.boundItem.data instanceof $data.Entity) {\r\n                context.urlText += '(' + this.provider.getEntityKeysValue(expression.boundItem) + ')';\r\n            }\r\n        }\r\n        context.urlText += \"/\" + (expression.cfg.namespace ? (expression.cfg.namespace + \".\" + expression.cfg.serviceName) : expression.cfg.serviceName);\r\n        context.method = context.method || expression.cfg.method;\r\n\r\n        //this.logicalType = expression.returnType;\r\n        if (expression.params) {\r\n            context.serviceConfig = expression.cfg\r\n            for (var i = 0; i < expression.params.length; i++) {\r\n                this.Visit(expression.params[i], context);\r\n            }\r\n            delete context.serviceConfig;\r\n        }\r\n    },\r\n    VisitBatchDeleteExpression: function (expression, context) {\r\n        this.Visit(expression.source, context);\r\n        context.urlText += '/$batchDelete';\r\n        context.method = 'DELETE';\r\n    },\r\n\r\n    VisitConstantExpression: function (expression, context) {\r\n        var typeName = Container.resolveName(expression.type);\r\n        if (expression.value instanceof $data.Entity)\r\n            typeName = $data.Entity.fullName;\r\n\r\n        var converter = this.provider.fieldConverter.toDb[typeName];\r\n        var value = converter ? converter(expression.value, expression) : expression.value;\r\n\r\n\r\n        if (context.method === 'GET' || !context.method) {\r\n            converter = this.provider.fieldConverter.escape[typeName];\r\n            value = converter ? converter(value, expression) : value;\r\n            if (value !== undefined) {\r\n                var serviceConfig = context.serviceConfig || {};\r\n                var paramConfig = (serviceConfig && serviceConfig.params.filter(p => p.name == expression.name)[0]) || {}\r\n                \r\n                var useAlias = serviceConfig.namespace && \r\n                    (paramConfig.useAlias || \r\n                     serviceConfig.useAlias || \r\n                     this.provider.providerConfiguration.useParameterAlias || \r\n                     $data.defaults.OData.useParameterAlias);\r\n                     \r\n                var paramValue = useAlias ? \"@\" + expression.name : value;\r\n                var paramName = (useAlias ? \"@\" : \"\") + expression.name; \r\n                \r\n                if (serviceConfig.namespace) {\r\n                    if (context['$funcParams']) { context['$funcParams'] += ','; } else { context['$funcParams'] = ''; }\r\n                        context['$funcParams'] += expression.name + '=' + paramValue;\r\n                }\r\n                \r\n                if (!serviceConfig.namespace || useAlias) {\r\n                    if (context['$urlParams']) { context['$urlParams'] += '&'; } else { context['$urlParams'] = ''; }\r\n                        context['$urlParams'] += paramName + '=' + value;\r\n                }\r\n            }\r\n        } else {\r\n            context.postData = context.postData || {};\r\n            context.postData[expression.name] = value;\r\n        }\r\n    },\r\n//    VisitConstantExpression: function (expression, context) {\r\n//        if (context['$urlParams']) { context['$urlParams'] += '&'; } else { context['$urlParams'] = ''; }\r\n//\r\n//\r\n//        var valueType = Container.getTypeName(expression.value);\r\n//\r\n//\r\n//\r\n//        context['$urlParams'] += expression.name + '=' + this.provider.fieldConverter.toDb[Container.resolveName(Container.resolveType(valueType))](expression.value);\r\n//    },\r\n\r\n\r\n    VisitCountExpression: function (expression, context) {\r\n        this.Visit(expression.source, context);\r\n        context.urlText += '/$count';\r\n    },\r\n\r\n    VisitBatchExecuteQueryExpression: function (expression, context) {\r\n        context.urlText += '/$batch'\r\n        context.method = 'POST';\r\n        context.postData = { __batchRequests: [] };\r\n        context._isBatchExecuteQuery = true;\r\n        context._subQueries = expression.members;\r\n\r\n        for (var i = 0; i < expression.members.length; i++) {\r\n            var queryable = expression.members[i];\r\n            var compiler = new $data.storageProviders.oData.oDataCompiler();\r\n            var compiled = compiler.compile(queryable);\r\n            context.postData.__batchRequests.push({\r\n                requestUri: this.provider.providerConfiguration.oDataServiceHost + compiled.queryText,\r\n                method: compiled.method,\r\n                data: compiled.data,\r\n                headers: compiled.headers\r\n            });\r\n        }\r\n    }\r\n}, {});\r\n","import $data, { $C, Guard, Container, Exception, MemberDefinition } from 'jaydata/core';\r\nimport atob from 'atob'\r\n\r\n$data.defaults = $data.defaults || {};\r\n$data.defaults.oDataWebApi = false;\r\n\r\n$data.oDataConverter = {\r\n    fromDb: {\r\n        '$data.Enum': function(v, enumType) { return $data.Container.convertTo(v, enumType); },\r\n        '$data.Byte': $data.Container.proxyConverter,\r\n        '$data.SByte': $data.Container.proxyConverter,\r\n        '$data.Decimal': function(v) { return $data.Container.convertTo(v, $data.Decimal); },\r\n        '$data.Float': $data.Container.proxyConverter,\r\n        '$data.Int16': $data.Container.proxyConverter,\r\n        '$data.Int64': function(v) { return $data.Container.convertTo(v, $data.Int64); },\r\n        '$data.ObjectID': $data.Container.proxyConverter,\r\n        '$data.Integer': $data.Container.proxyConverter,//function (number) { return (typeof number === 'string' && /^\\d+$/.test(number)) ? parseInt(number) : number; },\r\n        '$data.Int32': $data.Container.proxyConverter,\r\n        '$data.Number': $data.Container.proxyConverter,\r\n        '$data.Date': function (dbData) {\r\n            if (dbData) {\r\n                if (dbData instanceof Date) {\r\n                    return dbData;\r\n                } else if (dbData.substring(0, 6) === '/Date(') {\r\n                    return new Date(parseInt(dbData.substr(6)));\r\n                } else {\r\n                    //ISODate without Z? Safari compatible with Z\r\n                    if (dbData.indexOf('Z') === -1 && !dbData.match('T.*[+-]'))\r\n                        dbData += 'Z';\r\n                    return new Date(dbData);\r\n                }\r\n            } else {\r\n                return dbData;\r\n            }\r\n        },\r\n        '$data.DateTimeOffset': function (dbData) {\r\n            if (dbData) {\r\n                if (dbData instanceof Date) {\r\n                    return dbData;\r\n                } else if (dbData.substring(0, 6) === '/Date(') {\r\n                    return new Date(parseInt(dbData.substr(6)));\r\n                } else {\r\n                    //ISODate without Z? Safari compatible with Z\r\n                    if (dbData.indexOf('Z') === -1 && !dbData.match('T.*[+-]'))\r\n                        dbData += 'Z';\r\n                    return new Date(dbData);\r\n                }\r\n            } else {\r\n                return dbData;\r\n            }\r\n        },\r\n        '$data.Time': function(v) { return $data.Container.convertTo(v, $data.Time); },\r\n        '$data.Day': $data.Container.proxyConverter,\r\n        '$data.Duration': $data.Container.proxyConverter,\r\n        '$data.String': $data.Container.proxyConverter,\r\n        '$data.Boolean': $data.Container.proxyConverter,\r\n        '$data.Blob': function (v) {\r\n            if (typeof v == 'string'){\r\n                try { return $data.Container.convertTo(atob(v), '$data.Blob'); }\r\n                catch (e) { return v; }\r\n            }else return v;\r\n        },\r\n        '$data.Object': function (o) { if (o === undefined) { return new $data.Object(); } else if (typeof o === 'string') { return JSON.parse(o); } return o; },\r\n        '$data.Array': function (o) { if (o === undefined) { return new $data.Array(); } else if (o instanceof $data.Array) { return o; } return JSON.parse(o); },\r\n        '$data.GeographyPoint': function (g) { if (g) { return new $data.GeographyPoint(g); } return g; },\r\n        '$data.GeographyLineString': function (g) { if (g) { return new $data.GeographyLineString(g); } return g; },\r\n        '$data.GeographyPolygon': function (g) { if (g) { return new $data.GeographyPolygon(g); } return g; },\r\n        '$data.GeographyMultiPoint': function (g) { if (g) { return new $data.GeographyMultiPoint(g); } return g; },\r\n        '$data.GeographyMultiLineString': function (g) { if (g) { return new $data.GeographyMultiLineString(g); } return g; },\r\n        '$data.GeographyMultiPolygon': function (g) { if (g) { return new $data.GeographyMultiPolygon(g); } return g; },\r\n        '$data.GeographyCollection': function (g) { if (g) { return new $data.GeographyCollection(g); } return g; },\r\n        '$data.GeometryPoint': function (g) { if (g) { return new $data.GeometryPoint(g); } return g; },\r\n        '$data.GeometryLineString': function (g) { if (g) { return new $data.GeometryLineString(g); } return g; },\r\n        '$data.GeometryPolygon': function (g) { if (g) { return new $data.GeometryPolygon(g); } return g; },\r\n        '$data.GeometryMultiPoint': function (g) { if (g) { return new $data.GeometryMultiPoint(g); } return g; },\r\n        '$data.GeometryMultiLineString': function (g) { if (g) { return new $data.GeometryMultiLineString(g); } return g; },\r\n        '$data.GeometryMultiPolygon': function (g) { if (g) { return new $data.GeometryMultiPolygon(g); } return g; },\r\n        '$data.GeometryCollection': function (g) { if (g) { return new $data.GeometryCollection(g); } return g; },\r\n        '$data.Guid': function (guid) { return guid ? guid.toString() : guid; }\r\n    },\r\n    toDb: {\r\n        '$data.Enum': function (e, enumType) { return  (e !== null && e !== undefined) ? (enumType && enumType.getEnumName ? enumType.getEnumName(e) : \"\") : e },\r\n        '$data.Entity': $data.Container.proxyConverter,\r\n        '$data.Byte': $data.Container.proxyConverter,\r\n        '$data.SByte': $data.Container.proxyConverter,\r\n        '$data.Decimal': $data.Container.proxyConverter,//function (v) { return v ? parseFloat(v) : v },\r\n        '$data.Float': $data.Container.proxyConverter,\r\n        '$data.Int16': $data.Container.proxyConverter,\r\n        '$data.Int64': $data.Container.proxyConverter,//function (v) { return v ? parseInt(v) : v },\r\n        '$data.ObjectID': $data.Container.proxyConverter,\r\n        '$data.Integer': $data.Container.proxyConverter,\r\n        '$data.Int32': $data.Container.proxyConverter,\r\n        '$data.Number': $data.Container.proxyConverter,\r\n        '$data.Date': function (e) { return e ? e.toISOString().replace('Z', '') : e; },\r\n        '$data.Time': $data.Container.proxyConverter,\r\n        '$data.Day': $data.Container.proxyConverter,\r\n        '$data.Duration': $data.Container.proxyConverter,\r\n        '$data.DateTimeOffset': function(v){ return v ? v.toISOString() : v; },\r\n        '$data.String': $data.Container.proxyConverter,\r\n        '$data.Boolean': $data.Container.proxyConverter,\r\n        '$data.Blob': function (v) { return v ? $data.Blob.toBase64(v) : v; },\r\n        '$data.Object': $data.Container.proxyConverter,\r\n        '$data.Array': function(o, def){\r\n            if(o && def && def.elementType){\r\n                var typeName = Container.resolveName(def.elementType);\r\n                var values = [];\r\n                for(var i = 0; i < o.length; i++){\r\n                    values.push($data.oDataConverter['toDb'][typeName](o[i]));\r\n                }\r\n                \r\n                return values;\r\n            }\r\n            return $data.Container.proxyConverter.apply(this, arguments);\r\n        },\r\n        '$data.GeographyPoint': $data.Container.proxyConverter,\r\n        '$data.GeographyLineString': $data.Container.proxyConverter,\r\n        '$data.GeographyPolygon': $data.Container.proxyConverter,\r\n        '$data.GeographyMultiPoint': $data.Container.proxyConverter,\r\n        '$data.GeographyMultiLineString': $data.Container.proxyConverter,\r\n        '$data.GeographyMultiPolygon': $data.Container.proxyConverter,\r\n        '$data.GeographyCollection': $data.Container.proxyConverter,\r\n        '$data.GeometryPoint': $data.Container.proxyConverter,\r\n        '$data.GeometryLineString': $data.Container.proxyConverter,\r\n        '$data.GeometryPolygon': $data.Container.proxyConverter,\r\n        '$data.GeometryMultiPoint': $data.Container.proxyConverter,\r\n        '$data.GeometryMultiLineString': $data.Container.proxyConverter,\r\n        '$data.GeometryMultiPolygon': $data.Container.proxyConverter,\r\n        '$data.GeometryCollection': $data.Container.proxyConverter,\r\n        '$data.Guid': $data.Container.proxyConverter\r\n    },\r\n    escape: {\r\n        '$data.Enum': function (e, enumType) { return  (e !== null && e !== undefined) ? ((enumType ? enumType.fullName : \"\") + \"'\" + e + \"'\") : e },\r\n        '$data.Entity': function (e) { return JSON.stringify(e); },\r\n        '$data.Integer': $data.Container.proxyConverter,\r\n        '$data.Int32': $data.Container.proxyConverter,\r\n        '$data.Number': function (v) { return v && $data.defaults.oDataWebApi ? v + 'd' : v; },\r\n        '$data.Int16': $data.Container.proxyConverter,\r\n        '$data.Byte': $data.Container.proxyConverter,\r\n        '$data.SByte': $data.Container.proxyConverter,\r\n        '$data.Decimal': function (v) { return v && $data.defaults.oDataWebApi ? v + 'm' : v; },\r\n        '$data.Float': function (v) { return v && $data.defaults.oDataWebApi ? v + 'f' : v; },\r\n        '$data.Int64': $data.Container.proxyConverter,\r\n        '$data.Time': $data.Container.proxyConverter,\r\n        '$data.Day': $data.Container.proxyConverter,\r\n        '$data.Duration': function (v) { return v ? \"duration'\" + v + \"'\" : v; },\r\n        '$data.DateTimeOffset': function (d) { return d ? encodeURIComponent(d) : d },\r\n        '$data.Date': function (date) { return date ? \"datetime'\" + date + \"'\" : date; },\r\n        '$data.String': function (text) { return typeof text === 'string' ? \"'\" + text.replace(/'/g, \"''\") + \"'\" : text; },\r\n        '$data.ObjectID': function (text) { return typeof text === 'string' ? \"'\" + text.replace(/'/g, \"''\") + \"'\" : text; },\r\n        '$data.Boolean': function (bool) { return typeof bool === 'boolean' ? bool.toString() : bool; },\r\n        '$data.Blob': function (b) { return b ? \"binary'\" + b + \"'\" : b; },\r\n        '$data.Object': function (o) { return JSON.stringify(o); },\r\n        '$data.Array': function (o, def) {\r\n            if(o && def && def.elementType){\r\n                var typeName = Container.resolveName(def.elementType);\r\n                var values = [];\r\n                for(var i = 0; i < o.length; i++){\r\n                    values.push($data.oDataConverter['escape'][typeName](o[i]));\r\n                }\r\n                \r\n                return \"[\" + values.join(',') + \"]\"\r\n            } \r\n            return JSON.stringify(o); \r\n        },\r\n        '$data.GeographyPoint': function (g) { if (g) { return $data.GeographyBase.stringifyToUrl(g); } return g; },\r\n        '$data.GeographyLineString': function (g) { if (g) { return $data.GeographyBase.stringifyToUrl(g); } return g; },\r\n        '$data.GeographyPolygon': function (g) { if (g) { return $data.GeographyBase.stringifyToUrl(g); } return g; },\r\n        '$data.GeographyMultiPoint': function (g) { if (g) { return $data.GeographyBase.stringifyToUrl(g); } return g; },\r\n        '$data.GeographyMultiLineString': function (g) { if (g) { return $data.GeographyBase.stringifyToUrl(g); } return g; },\r\n        '$data.GeographyMultiPolygon': function (g) { if (g) { return $data.GeographyBase.stringifyToUrl(g); } return g; },\r\n        '$data.GeographyCollection': function (g) { if (g) { return $data.GeographyBase.stringifyToUrl(g); } return g; },\r\n        '$data.GeometryPoint': function (g) { if (g) { return $data.GeometryBase.stringifyToUrl(g); } return g; },\r\n        '$data.GeometryLineString': function (g) { if (g) { return $data.GeometryBase.stringifyToUrl(g); } return g; },\r\n        '$data.GeometryPolygon': function (g) { if (g) { return $data.GeometryBase.stringifyToUrl(g); } return g; },\r\n        '$data.GeometryMultiPoint': function (g) { if (g) { return $data.GeometryBase.stringifyToUrl(g); } return g; },\r\n        '$data.GeometryMultiLineString': function (g) { if (g) { return $data.GeometryBase.stringifyToUrl(g); } return g; },\r\n        '$data.GeometryMultiPolygon': function (g) { if (g) { return $data.GeometryBase.stringifyToUrl(g); } return g; },\r\n        '$data.GeometryCollection': function (g) { if (g) { return $data.GeometryBase.stringifyToUrl(g); } return g; },\r\n        '$data.Guid': function (guid) { return guid ? (\"\" + guid.toString() + \"\") : guid; }\r\n    },\r\n    unescape: {\r\n        '$data.Entity': function (v, c) {\r\n            var config = c || {};\r\n            var value = JSON.parse(v);\r\n            if (value && config.type) {\r\n                var type = Container.resolveType(config.type);\r\n                /*Todo converter*/\r\n                return new type(value, { converters: undefined });\r\n            }\r\n            return value;\r\n        },\r\n        '$data.Number': function (v) { return JSON.parse(v); },\r\n        '$data.Integer': function (v) { return JSON.parse(v); },\r\n        '$data.Int32': function (v) { return JSON.parse(v); },\r\n        '$data.Byte': function (v) { return JSON.parse(v); },\r\n        '$data.SByte': function (v) { return JSON.parse(v); },\r\n        '$data.Decimal': function (v) {\r\n            if (typeof v === 'string' && v.toLowerCase().lastIndexOf('m') === v.length - 1) {\r\n                return v.substr(0, v.length - 1);\r\n            } else {\r\n                return v;\r\n            }\r\n        },\r\n        '$data.Float': function (v) {\r\n            if (typeof v === 'string' && v.toLowerCase().lastIndexOf('f') === v.length - 1) {\r\n                return v.substr(0, v.length - 1);\r\n            } else {\r\n                return v;\r\n            }\r\n        },\r\n        '$data.Int16': function (v) { return JSON.parse(v); },\r\n        '$data.Int64': function (v) {\r\n            return v;\r\n        },\r\n        '$data.Boolean': function (v) { return JSON.parse(v); },\r\n        '$data.Date': function (v) {\r\n            if (typeof v === 'string' && /^datetime'/.test(v)) {\r\n                return v.slice(9, v.length - 1);\r\n            }\r\n            return v;\r\n        },\r\n        '$data.String': function (v) {\r\n            if (typeof v === 'string' && v.indexOf(\"'\") === 0 && v.lastIndexOf(\"'\") === v.length - 1) {\r\n                return v.slice(1, v.length - 1);\r\n            } else {\r\n                return v;\r\n            }\r\n        },\r\n        '$data.ObjectID': function (v) {\r\n            if (typeof v === 'string' && v.indexOf(\"'\") === 0 && v.lastIndexOf(\"'\") === v.length - 1) {\r\n                return v.slice(1, v.length - 1);\r\n            } else {\r\n                return v;\r\n            }\r\n        },\r\n        '$data.Guid': function (v) {\r\n            if (/^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$/.test(v)) {\r\n                var data = v.slice(5, v.length - 1)\r\n                return $data.parseGuid(data).toString();\r\n            }\r\n            return v;\r\n        },\r\n        '$data.Array': function (v, c) {\r\n            var config = c || {};\r\n\r\n            var value = JSON.parse(v) || [];\r\n            if (value && config.elementType) {\r\n                var type = Container.resolveType(config.elementType);\r\n                var typeName = Container.resolveName(type);\r\n                if (type && type.isAssignableTo && type.isAssignableTo($data.Entity)) {\r\n                    typeName = $data.Entity.fullName;\r\n                }\r\n\r\n                if (Array.isArray(value)) {\r\n                    var converter = $data.oDataConverter.unescape[typeName];\r\n                    for (var i = 0; i < value.length; i++) {\r\n                        value[i] = converter ? converter(value[i]) : value[i];\r\n                    }\r\n                }\r\n                return value;\r\n            }\r\n            return value;\r\n        },\r\n        '$data.DateTimeOffset': function (v) {\r\n            if (typeof v === 'string') {\r\n                return $data.Container.convertTo(v, $data.DateTimeOffset);\r\n            }\r\n            return v;\r\n        },\r\n        '$data.Time': function (v) {\r\n            if (typeof v === 'string' && /^time'/.test(v)) {\r\n                return $data.Container.convertTo(v.slice(5, v.length - 1), $data.Time);\r\n            }\r\n            return v;\r\n        },\r\n        '$data.Day': function (v) {\r\n            if (typeof v === 'string' && /^date'/.test(v)) {\r\n                return $data.Container.convertTo(v.slice(5, v.length - 1), $data.Day);\r\n            }\r\n            return v;\r\n        },\r\n        '$data.Duration': function (v) {\r\n            if (typeof v === 'string' && /^duration'/.test(v)) {\r\n                return $data.Container.convertTo(v.slice(9, v.length - 1), $data.Duration);\r\n            }\r\n            return v;\r\n        },\r\n        '$data.Blob': function(v){\r\n            if (typeof v === 'string'){\r\n                if (/^X'/.test(v)){\r\n                    return $data.Blob.createFromHexString(v.slice(2, v.length - 1));\r\n                }else if (/^binary'/.test(v)){\r\n                    return $data.Blob.createFromHexString(v.slice(7, v.length - 1));\r\n                }\r\n            }\r\n            return v;\r\n        },\r\n        '$data.Object': function (v) { return JSON.parse(v); },\r\n        '$data.GeographyPoint': function (v) {\r\n            if (/^geography'POINT\\(/i.test(v)) {\r\n                var data = v.slice(10, v.length - 1);\r\n                return $data.GeographyBase.parseFromString(data);\r\n            }\r\n            return v;\r\n        },\r\n        '$data.GeographyPolygon': function (v) {\r\n            if (/^geography'POLYGON\\(/i.test(v)) {\r\n                var data = v.slice(10, v.length - 1);\r\n                return $data.GeographyBase.parseFromString(data);\r\n            }\r\n            return v;\r\n        },\r\n        '$data.GeometryPoint': function (v) {\r\n            if (/^geometry'POINT\\(/i.test(v)) {\r\n                var data = v.slice(9, v.length - 1);\r\n                return $data.GeometryBase.parseFromString(data);\r\n            }\r\n            return v;\r\n        },\r\n        '$data.GeometryPolygon': function (v) {\r\n            if (/^geometry'POLYGON\\(/i.test(v)) {\r\n                var data = v.slice(9, v.length - 1);\r\n                return $data.GeometryBase.parseFromString(data);\r\n            }\r\n            return v;\r\n        }\r\n    },\r\n    xmlEscape: {\r\n        '$data.Byte': function (v) { return v.toString(); },\r\n        '$data.SByte': function (v) { return v.toString(); },\r\n        '$data.Decimal': function (v) { return v.toString(); },\r\n        '$data.Float': function (v) { return v.toString(); },\r\n        '$data.Int16': function (v) { return v.toString(); },\r\n        '$data.Int64': function (v) { return v.toString(); },\r\n        '$data.Integer': function (v) { return v.toString(); },\r\n        '$data.Int32': function (v) { return v.toString(); },\r\n        '$data.Boolean': function (v) { return v.toString(); },\r\n        '$data.Blob': function (v) { return $data.Blob.toBase64(v); },\r\n        '$data.Date': function (v) { return v.toISOString().replace('Z', ''); },\r\n        '$data.DateTimeOffset': function(v){ return v.toISOString(); },\r\n        '$data.Time': function (v) { return v.toString(); },\r\n        '$data.Day': function (v) { return v.toString(); },\r\n        '$data.Duration': function (v) { return v.toString(); },\r\n        '$data.Number': function (v) { return v.toString(); },\r\n        '$data.String': function (v) { return v.toString(); },\r\n        '$data.ObjectID': function (v) { return v.toString(); },\r\n        '$data.Object': function (v) { return JSON.stringify(v); },\r\n        '$data.Guid': function (v) { return v.toString(); }/*,\r\n        '$data.GeographyPoint': function (v) { return this._buildSpatialPoint(v, 'http://www.opengis.net/def/crs/EPSG/0/4326'); },\r\n        '$data.GeometryPoint': function (v) { return this._buildSpatialPoint(v, 'http://www.opengis.net/def/crs/EPSG/0/0'); },\r\n        '$data.GeographyLineString': function (v) { return this._buildSpatialLineString(v, 'http://www.opengis.net/def/crs/EPSG/0/4326'); },\r\n        '$data.GeometryLineString': function (v) { return this._buildSpatialLineString(v, 'http://www.opengis.net/def/crs/EPSG/0/0'); }*/\r\n    },\r\n    simple: { //$value, $count\r\n        '$data.Byte': function (v) { return v.toString(); },\r\n        '$data.SByte': function (v) { return v.toString(); },\r\n        '$data.Decimal': function (v) { return v.toString(); },\r\n        '$data.Float': function (v) { return v.toString(); },\r\n        '$data.Int16': function (v) { return v.toString(); },\r\n        '$data.Int64': function (v) { return v.toString(); },\r\n        '$data.ObjectID': function (o) { return o.toString(); },\r\n        '$data.Integer': function (o) { return o.toString(); },\r\n        '$data.Int32': function (o) { return o.toString(); },\r\n        '$data.Number': function (o) { return o.toString(); },\r\n        '$data.Date': function (o) { return o instanceof $data.Date ? o.toISOString().replace('Z', '') : o.toString() },\r\n        '$data.DateTimeOffset': function(v){ return v ? v.toISOString() : v; },\r\n        '$data.Time': function (o) { return o.toString(); },\r\n        '$data.Day': function (o) { return o.toString(); },\r\n        '$data.Duration': function (o) { return o.toString(); },\r\n        '$data.String': function (o) { return o.toString(); },\r\n        '$data.Boolean': function (o) { return o.toString(); },\r\n        '$data.Blob': function (o) { return o; },\r\n        '$data.Object': function (o) { return JSON.stringify(o); },\r\n        '$data.Array': function (o) { return JSON.stringify(o); },\r\n        '$data.Guid': function (o) { return o.toString(); },\r\n        '$data.GeographyPoint': function (o) { return JSON.stringify(o); },\r\n        '$data.GeometryPoint': function (o) { return JSON.stringify(o); },\r\n        '$data.GeographyLineString': function (o) { return JSON.stringify(o); },\r\n        '$data.GeographyPolygon': function (o) { return JSON.stringify(o); },\r\n        '$data.GeographyMultiPoint': function (o) { return JSON.stringify(o); },\r\n        '$data.GeographyMultiLineString': function (o) { return JSON.stringify(o); },\r\n        '$data.GeographyMultiPolygon': function (o) { return JSON.stringify(o); },\r\n        '$data.GeographyCollection': function (o) { return JSON.stringify(o); },\r\n        '$data.GeometryLineString': function (o) { return JSON.stringify(o); },\r\n        '$data.GeometryPolygon': function (o) { return JSON.stringify(o); },\r\n        '$data.GeometryMultiPoint': function (o) { return JSON.stringify(o); },\r\n        '$data.GeometryMultiLineString': function (o) { return JSON.stringify(o); },\r\n        '$data.GeometryMultiPolygon': function (o) { return JSON.stringify(o); },\r\n        '$data.GeometryCollection': function (o) { return JSON.stringify(o); }\r\n    }\r\n};\r\n","import $data, { $C, Guard, Container, Exception, MemberDefinition } from 'jaydata/core';\r\n\r\nexport class ODataIncludeFragment {\r\n    constructor (name) {\r\n        this.name = name;\r\n        this.$expand = [];\r\n        this.$operators = [];\r\n    }\r\n    \r\n    toString(){\r\n        let data = '';\r\n        if(this.$expand.length){\r\n            if(this.name){\r\n                data += this.name + '($expand=';\r\n            }\r\n            for(let i = 0; i < this.$expand.length; i++){\r\n                if(i !== 0) data += ',';\r\n                data += this[this.$expand[i]].toString();\r\n            }\r\n            if(this.name) {\r\n                data += ')';\r\n            }\r\n        }\r\n        \r\n        if(this.name){\r\n            for (let i = 0; i < this.$operators.length; i++) {\r\n                let operator = this.$operators[i];\r\n                let values = this[operator];\r\n                for(let j = 0; j < values.length; j++){\r\n                    if(data) data += ','\r\n                    data += this.name + '(' + operator + '='\r\n                    data += values[j];\r\n                    data += ')';\r\n                }\r\n            }    \r\n        }\r\n        \r\n        if(this.name && !data) {\r\n            data = this.name;\r\n        }\r\n        \r\n        return data;\r\n    }\r\n    \r\n    addInclude(path, map){\r\n        this._createIncludePath(path);\r\n    }\r\n    \r\n    addImplicitMap(path, map){\r\n        var includedFragment = this._createIncludePath(path);\r\n        this._setImplicitMap(includedFragment, map);\r\n    }\r\n    \r\n    _createIncludePath(path) {\r\n        if(!path) return this;\r\n        var inc = path.split('.');\r\n        \r\n        var current = this;\r\n        for(var i = 0; i < inc.length; i++){\r\n            var it = inc[i];\r\n            var included = true;\r\n            if(current.$expand.indexOf(it) < 0){\r\n                included = false;\r\n                current.$expand.push(it);\r\n                current[it] = new ODataIncludeFragment(it);\r\n                current[it].__implicit = true;\r\n            }\r\n            \r\n            current = current[it];\r\n            if(i < inc.length - 1 && current.__implicit){\r\n                this._setImplicitMap(current, inc[i+1]);\r\n            }\r\n        }\r\n        \r\n        return current;\r\n    }\r\n    _setImplicitMap(includeFragment, map){\r\n        if(map){\r\n            if (includeFragment.$operators.indexOf('$select') < 0) {\r\n                if(includeFragment.__implicit) {\r\n                    includeFragment.$operators.push('$select');\r\n                    includeFragment.$select = [map];\r\n                }\r\n            } else if(includeFragment.$expand.indexOf(map) < 0) {\r\n                includeFragment.$select[0] += ',' + map;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n$data.storageProviders.oData.ODataIncludeFragment = ODataIncludeFragment;\r\n\r\n$C('$data.storageProviders.oData.oDataIncludeCompiler', $data.Expressions.EntityExpressionVisitor, null, {\r\n    constructor: function (provider) {\r\n        this.provider = provider;\r\n    },\r\n\r\n    compile: function (expression, context) {\r\n        context.data = context.data || new ODataIncludeFragment();\r\n        context.current = context.data;\r\n        this.Visit(expression, context);\r\n        \r\n    },\r\n    VisitParametricQueryExpression: function (expression, context) {\r\n        this.Visit(expression.expression, context);\r\n    },\r\n    \r\n    VisitEntitySetExpression: function (expression, context) {\r\n        this.Visit(expression.source, context);\r\n        if (expression.selector instanceof $data.Expressions.AssociationInfoExpression) {\r\n            this.Visit(expression.selector, context);\r\n        }\r\n    },\r\n    \r\n    VisitAssociationInfoExpression: function (expression, context) {\r\n        var propName = expression.associationInfo.FromPropertyName;\r\n        \r\n        this.includePath = this.includePath ? (this.includePath + '.') : \"\";\r\n        this.includePath += propName;\r\n\r\n        var currentPath = this.includePath;\r\n        if (!context.includes.some(function (include) { return include.name == currentPath }, this)) {\r\n            context.includes.push({ name: currentPath, type: expression.associationInfo.ToType });\r\n        }\r\n        \r\n        if(context.current.$expand.indexOf(propName) < 0)\r\n        {\r\n            context.current.$expand.push(propName);\r\n            context.current[propName] = new ODataIncludeFragment(propName);\r\n        }\r\n        context.current = context.current[propName]; \r\n    },\r\n    \r\n    VisitFrameOperationExpression: function (expression, context) {\r\n        this.Visit(expression.source, context);\r\n        \r\n        var opDef = expression.operation.memberDefinition;\r\n        if(opDef && opDef.includeFrameName){\r\n            var opName = opDef.includeFrameName;\r\n            var paramCounter = 0;\r\n            var params = opDef.parameters || [{ name: \"@expression\" }];\r\n\r\n            var args = params.map(function (item, index) {\r\n                if (item.name === \"@expression\") {\r\n                    return expression.source;\r\n                } else {\r\n                    return expression.parameters[paramCounter++]\r\n                };\r\n            });\r\n            \r\n            if(opDef.includeCompiler){\r\n                for (var i = 0; i < args.length; i++) {\r\n                    var arg = args[i];\r\n                    var compilerType = Container.resolveType(opDef.includeCompiler);\r\n                    var compiler = new compilerType(this.provider);\r\n                    var frameContext = { data: \"\", $expand: context.current };\r\n                                        \r\n                    if (arg && arg.value instanceof $data.Queryable) {\r\n                        var preparator = Container.createQueryExpressionCreator(arg.value.entityContext);\r\n                        var prep_expression = preparator.Visit(arg.value.expression);\r\n                        arg = prep_expression;\r\n                    }\r\n                    \r\n                    var compiled = compiler.compile(arg, frameContext);\r\n                    \r\n                    if(context.current['$operators'].indexOf(opName) < 0){\r\n                        context.current[opName] = [];\r\n                        context.current['$operators'].push(opName);    \r\n                    }\r\n                    context.current[opName].push(frameContext[opName] || frameContext.data);\r\n\r\n                }\r\n            } else if(opDef.implementation) {\r\n                if(context.current['$operators'].indexOf(opName) < 0){\r\n                    context.current[opName] = [];\r\n                    context.current['$operators'].push(opName);    \r\n                }\r\n                context.current[opName].push(opDef.implementation());\r\n            }\r\n        }\r\n    }\r\n});\r\n","import $data, { $C, Guard, Container, Exception, MemberDefinition } from 'jaydata/core';\r\n\r\n$C('$data.storageProviders.oData.oDataOrderCompiler', $data.storageProviders.oData.oDataWhereCompiler, null, {\r\n    constructor: function (provider) {\r\n        this.provider = provider;\r\n    },\r\n\r\n    compile: function (expression, context) {\r\n        this.Visit(expression, context);\r\n    },\r\n    VisitOrderExpression: function (expression, context) {\r\n        var orderContext = { data: \"\" };\r\n        this.Visit(expression.selector, orderContext);\r\n        if (context['$orderby']) { context['$orderby'] += ','; } else { context['$orderby'] = ''; }\r\n        context['$orderby'] += orderContext.data\r\n                           + (expression.nodeType == $data.Expressions.ExpressionType.OrderByDescending ? \" desc\" : \"\");\r\n    },\r\n    VisitParametricQueryExpression: function (expression, context) {\r\n        this.Visit(expression.expression, context);\r\n    },\r\n    VisitEntityFieldExpression: function (expression, context) {\r\n        this.Visit(expression.source, context);\r\n        this.Visit(expression.selector, context);\r\n    },\r\n    VisitComplexTypeExpression: function (expression, context) {\r\n        this.Visit(expression.source, context);\r\n        this.Visit(expression.selector, context);\r\n        context.data += \"/\";\r\n    },\r\n    VisitEntitySetExpression: function (expression, context) {\r\n        if (expression.selector instanceof $data.Expressions.AssociationInfoExpression) {\r\n            this.Visit(expression.source, context);\r\n            this.Visit(expression.selector, context);\r\n        }\r\n    },\r\n    VisitAssociationInfoExpression: function (expression, context) {\r\n        context.data += expression.associationInfo.FromPropertyName + '/';\r\n    },\r\n    VisitEntityExpression: function (expression, context) {\r\n        this.Visit(expression.source, context);\r\n        this.Visit(expression.selector, context);\r\n    },\r\n    VisitMemberInfoExpression: function (expression, context) {\r\n        context.data += expression.memberName;\r\n    },\r\n    VisitEntityFieldOperationExpression: function (expression, context) {\r\n        Guard.requireType(\"expression.operation\", expression.operation, $data.Expressions.MemberInfoExpression);\r\n\r\n        //TODO refactor!\r\n        var opDef = expression.operation.memberDefinition;\r\n        var opName = opDef.mapTo || opDef.name;\r\n        context.data += opName;\r\n        context.data += \"(\";\r\n        var paramCounter = 0;\r\n        var params = opDef.parameters || [{ name: \"@expression\" }];\r\n\r\n        var args = params.map(function (item, index) {\r\n            if (item.name === \"@expression\") {\r\n                return expression.source;\r\n            } else {\r\n                return expression.parameters[paramCounter++]\r\n            };\r\n        });\r\n\r\n        args.forEach(function (arg, index) {\r\n            if (index > 0) {\r\n                context.data += \",\";\r\n            };\r\n            this.Visit(arg, context);\r\n        }, this);\r\n        context.data += \")\";\r\n    },\r\n    VisitEntityFunctionOperationExpression: function (expression, context) {\r\n        Guard.requireType(\"expression.operation\", expression.operation, $data.Expressions.MemberInfoExpression);\r\n        this.Visit(expression.source, context);\r\n\r\n        //TODO refactor!\r\n        var opDef = expression.operation.memberDefinition;\r\n        var opName = opDef.mapTo || opDef.name;\r\n        context.data += opName;\r\n        context.data += \"(\";\r\n        var paramCounter = 0;\r\n        var params = opDef.method.params || [{ name: \"@expression\" }];\r\n\r\n        var args = params.map(function (item, index) {\r\n            if (item.name === \"@expression\") {\r\n                return expression.source;\r\n            } else {\r\n                return expression.parameters[paramCounter++]\r\n            };\r\n        });\r\n\r\n        var i = 0;\r\n        args.forEach(function (arg, index) {\r\n            if (arg === undefined || (arg instanceof $data.Expressions.ConstantExpression && typeof arg.value === 'undefined'))\r\n                return;\r\n\r\n            if (i > 0) {\r\n                context.data += \",\";\r\n            };\r\n            i++;\r\n            context.data += params[index].name + '=';\r\n            this.Visit(arg, context);\r\n        }, this);\r\n        context.data += \")\";\r\n    },\r\n    VisitContextFunctionOperationExpression: function (expression, context) {\r\n        return this.VisitEntityFunctionOperationExpression(expression, context);\r\n    }\r\n});\r\n","import $data, { $C, Guard, Container, Exception, MemberDefinition } from 'jaydata/core';\r\n\r\n$C('$data.storageProviders.oData.oDataPagingCompiler', $data.Expressions.EntityExpressionVisitor, null, {\r\n    constructor: function (provider) {\r\n        this.provider = provider;\r\n    },\r\n\r\n    compile: function (expression, context) {\r\n        this.Visit(expression, context);\r\n    },\r\n    VisitPagingExpression: function (expression, context) {\r\n        var pagingContext = { data: \"\" };\r\n        this.Visit(expression.amount, pagingContext);\r\n        switch (expression.nodeType) {\r\n            case $data.Expressions.ExpressionType.Skip: context['$skip'] = pagingContext.data; break;\r\n            case $data.Expressions.ExpressionType.Take: context['$top'] = pagingContext.data; break;\r\n            default: Guard.raise(\"Not supported nodeType\"); break;\r\n        }\r\n    },\r\n    VisitConstantExpression: function (expression, context) {\r\n        var typeName = Container.resolveName(expression.type);\r\n        var converter = this.provider.fieldConverter.escape[typeName];\r\n        context.data += converter ? converter(expression.value) : expression.value;\r\n    }\r\n});\r\n","import $data, { $C, Guard, Container, Exception, MemberDefinition } from 'jaydata/core';\r\n\r\n$C('$data.storageProviders.oData.oDataProjectionCompiler', $data.Expressions.EntityExpressionVisitor, null, {\r\n    constructor: function (provider) {\r\n        this.provider = provider; \r\n        this.entityContext = provider.context;\r\n        this.hasObjectLiteral = false;\r\n        this.modelBinderMapping = [];\r\n    },\r\n\r\n    compile: function (expression, context) {\r\n        this.Visit(expression, context);\r\n    },\r\n    VisitProjectionExpression: function (expression, context) {\r\n        ///<summary></summary>\r\n        ///<param name=\"expression\" type=\"$data.Expressions.ProjectionExpression\" mayBeNull=\"false\"></param>\r\n        ///<param name=\"context\" mayBeNull=\"false\"></param>\r\n        context.data = \"\";\r\n        this.mapping = \"\";\r\n\r\n        this.Visit(expression.selector, context);\r\n        if (context['$select']) { context['$select'] += ','; } else { context['$select'] = ''; }\r\n        context[\"$select\"] += context.data;\r\n        context.data = \"\";\r\n    },\r\n    VisitParametricQueryExpression: function (expression, context) {\r\n        this.Visit(expression.expression, context);\r\n        var m = this.mapping.split('.');\r\n        \r\n        if (!(expression.expression instanceof $data.Expressions.EntityExpression) && !(expression.expression instanceof $data.Expressions.EntitySetExpression)) {\r\n            m.pop();\r\n        }\r\n        \r\n        if (m.length > 0) {\r\n            if(!context['$expand'] || !(context['$expand'] instanceof $data.storageProviders.oData.ODataIncludeFragment)){\r\n                context['$expand'] = new $data.storageProviders.oData.ODataIncludeFragment();\r\n            }\r\n            context['$expand'].addInclude(m.join('.'))\r\n        }\r\n    },\r\n    VisitObjectLiteralExpression: function (expression, context) {\r\n        ///<summary></summary>\r\n        ///<param name=\"expression\" type=\"$data.Expressions.ObjectLiteralExpression\" mayBeNull=\"false\"></param>\r\n        ///<param name=\"context\" mayBeNull=\"false\"></param>\r\n        \r\n        this.hasObjectLiteral = true;\r\n        expression.members.forEach(function (member, index) {\r\n            this.Visit(member, context);\r\n            if (index < expression.members.length - 1) { context.data += ','; }\r\n            this.mapping = '';\r\n        }, this);\r\n    },\r\n    VisitObjectFieldExpression: function (expression, context) {\r\n        this.Visit(expression.expression, context);\r\n        \r\n        var m = this.mapping.split('.');\r\n        var propertyName = \"\";\r\n        if (!(expression.expression instanceof $data.Expressions.EntityExpression) && !(expression.expression instanceof $data.Expressions.EntitySetExpression)) {\r\n            propertyName = m.pop();\r\n        }\r\n\r\n        if (m.length > 0) {\r\n            if(!context['$expand'] || !(context['$expand'] instanceof $data.storageProviders.oData.ODataIncludeFragment)){\r\n                context['$expand'] = new $data.storageProviders.oData.ODataIncludeFragment();\r\n            }\r\n            \r\n            if(expression.expression instanceof $data.Expressions.EntityFieldExpression && expression.expression.selector instanceof $data.Expressions.MemberInfoExpression){\r\n                var storageModel = this.entityContext._storageModel.getStorageModel(expression.expression.selector.memberDefinition.definedBy)\r\n                if(!storageModel) return;\r\n                \r\n                var isComplexProperty = storageModel && !!storageModel.ComplexTypes[expression.memberName];\r\n                if(isComplexProperty){\r\n                    var complexProperty = m.pop();\r\n                    context['$expand'].addImplicitMap(m.join('.'), complexProperty);\r\n                    return;\r\n                }\r\n            }\r\n            \r\n            \r\n            if (expression.expression instanceof $data.Expressions.ComplexTypeExpression) {\r\n                context['$expand'].addImplicitMap(m.join('.'), propertyName);\r\n            } else {\r\n                context['$expand'].addInclude(m.join('.'))\r\n            }\r\n        }\r\n    },\r\n\r\n    VisitComplexTypeExpression: function (expression, context) {\r\n        this.Visit(expression.source, context);\r\n        this.Visit(expression.selector, context);\r\n    },\r\n\r\n    VisitEntityFieldExpression: function (expression, context) {\r\n        this.Visit(expression.source, context);\r\n        this.Visit(expression.selector, context);\r\n    },\r\n    VisitEntityExpression: function (expression, context) {\r\n        ///<summary></summary>\r\n        ///<param name=\"expression\" type=\"$data.Expressions.EntityExpression\" mayBeNull=\"false\"></param>\r\n        ///<param name=\"context\" mayBeNull=\"false\"></param>\r\n        this.Visit(expression.source, context);\r\n    },\r\n    VisitEntitySetExpression: function (expression, context) {\r\n        ///<summary></summary>\r\n        ///<param name=\"expression\" type=\"$data.Expressions.EntitySetExpression\" mayBeNull=\"false\"></param>\r\n        ///<param name=\"context\" mayBeNull=\"false\"></param>\r\n        if (expression.source instanceof $data.Expressions.EntityExpression) {\r\n            this.Visit(expression.source, context);\r\n        }\r\n        if (expression.selector instanceof $data.Expressions.AssociationInfoExpression) {\r\n            this.Visit(expression.selector, context);\r\n        }\r\n    },\r\n    VisitAssociationInfoExpression: function (expression, context) {\r\n        if (this.mapping && this.mapping.length > 0) { this.mapping += '.'; }\r\n        this.mapping += expression.associationInfo.FromPropertyName;\r\n        \r\n        if (context.data && context.data.length > 0 && context.data[context.data.length - 1] != ',') { \r\n            if(!context['$expand'] || !(context['$expand'] instanceof $data.storageProviders.oData.ODataIncludeFragment)){\r\n                context['$expand'] = new $data.storageProviders.oData.ODataIncludeFragment();\r\n            }\r\n            context['$expand'].addInclude(this.mapping)\r\n        } else {\r\n            context.data += expression.associationInfo.FromPropertyName;\r\n        }\r\n\r\n    },\r\n    VisitMemberInfoExpression: function (expression, context) {\r\n        var storageModel = this.entityContext._storageModel.getStorageModel(expression.memberDefinition.definedBy)\r\n        var isComplexProperty = storageModel && !!storageModel.ComplexTypes[expression.memberName];\r\n        var isComplexField = !storageModel;\r\n        \r\n        if (context.data && context.data.length > 0 && context.data[context.data.length - 1] != ',') {\r\n            if(this.mapping){\r\n                if(!context['$expand'] || !(context['$expand'] instanceof $data.storageProviders.oData.ODataIncludeFragment)){\r\n                    context['$expand'] = new $data.storageProviders.oData.ODataIncludeFragment();\r\n                }\r\n                if(isComplexField){\r\n                    var m = this.mapping.split('.');\r\n                    var complexProperty = m.pop();\r\n                    if(this.provider.checkODataMode(\"disableCompltexTypeMapping\")){\r\n                        context['$expand'].addImplicitMap(m.join('.'), complexProperty);\r\n                    } else {\r\n                        context['$expand'].addImplicitMap(m.join('.'), complexProperty + \"/\" + expression.memberName);\r\n                    }\r\n                } else if(!isComplexProperty) {\r\n                    context['$expand'].addImplicitMap(this.mapping, expression.memberName);\r\n                }\r\n            } \r\n        } else {\r\n            //if(context.data[context.data.length - 1] != ',') context.data += '/';\r\n            context.data += expression.memberName;\r\n        }\r\n        \r\n        if (this.mapping && this.mapping.length > 0) { this.mapping += '.'; }\r\n        this.mapping += expression.memberName;        \r\n    },\r\n    VisitConstantExpression: function (expression, context) {\r\n        //Guard.raise(new Exception('Constant value is not supported in Projection.', 'Not supported!'));\r\n        //context.data += expression.value;\r\n\t\tcontext.data = context.data.slice(0, context.data.length - 1);\r\n    }\r\n});\r\n","import $data, { $C, Guard, Container, Exception, MemberDefinition } from 'jaydata/core';\r\nimport * as odatajs from 'jaydata-odatajs';\r\nimport * as activities from './oDataRequestActivities.js'\r\nimport { strategy as emptySaveStrategy } from './SaveStrategies/empty'\r\nimport { strategy as singleSaveStrategy } from './SaveStrategies/single'\r\nimport { strategy as batchSaveStrategy } from './SaveStrategies/batch'\r\n\r\n\r\nvar OData = $data.__global['OData'];\r\nvar datajs = $data.__global['datajs'];\r\n\r\nvar datajsPatch;\r\ndatajsPatch = function (OData) {\r\n    // just datajs-1.1.0\r\n    if (OData && OData.jsonHandler && 'useJsonLight' in OData.jsonHandler && typeof datajs === 'object' && !datajs.version) {\r\n        $data.Trace.log('!!!!!!! - patch datajs 1.1.0');\r\n        var oldread = OData.defaultHandler.read;\r\n        OData.defaultHandler.read = function (p, context) {\r\n            delete context.contentType;\r\n            delete context.dataServiceVersion;\r\n\r\n            oldread.apply(this, arguments);\r\n        };\r\n        var oldwrite = OData.defaultHandler.write;\r\n        OData.defaultHandler.write = function (p, context) {\r\n            delete context.contentType;\r\n            delete context.dataServiceVersion;\r\n\r\n            oldwrite.apply(this, arguments);\r\n        };\r\n    }\r\n    datajsPatch = function () { };\r\n}\r\n\r\n$data.defaults = $data.defaults || {};\r\n$data.defaults.OData = $data.defaults.OData || {};\r\nif(!(\"withReferenceMethods\" in $data.defaults.OData)){\r\n    $data.defaults.OData.withReferenceMethods = false;\r\n}\r\nif(!(\"disableBatch\" in $data.defaults.OData)){\r\n    $data.defaults.OData.disableBatch = false;\r\n}\r\nif(!(\"eTagAny\" in $data.defaults.OData)){\r\n    $data.defaults.OData.eTagAny = '*';\r\n}\r\nif(!(\"enableDeepSave\" in $data.defaults.OData)){\r\n    $data.defaults.OData.enableDeepSave = false;\r\n}\r\nif(!(\"disableCompltexTypeMapping\" in $data.defaults.OData)){\r\n    $data.defaults.OData.disableCompltexTypeMapping = false;\r\n}\r\n\r\nvar checkODataMode = function(context, functionName){\r\n    if(typeof context.providerConfiguration[functionName] !== 'undefined'){\r\n        return !!context.providerConfiguration[functionName];\r\n    }\r\n    return !!$data.defaults.OData[functionName];\r\n}\r\n\r\n$C('$data.storageProviders.oData.RequestManager', $data.Base, null, {\r\n    constructor: function(){\r\n        this._items = [];\r\n        this._entities = [];\r\n    },\r\n    _items: { type: $data.Array },\r\n    _entities: { type: $data.Array },\r\n    add: function(changedItem, request, countable){\r\n        var item = {\r\n            data: changedItem,\r\n            entity: changedItem.data,\r\n            request: request,\r\n            itemIndex: ++this.maxItemIndex,\r\n            references: []\r\n        };\r\n        \r\n        // request.headers = request.headers || {};\r\n        // request.headers[\"content-Id\"] = item.itemIndex; \r\n        request.add(new activities.SetHeaderProperty(\"content-Id\", item.itemIndex))\r\n        \r\n        if(countable !== false){\r\n            this.length++;\r\n        }\r\n        \r\n        this._entities.push(item.entity)\r\n        this._items.push(item);\r\n        \r\n        return item\r\n    },\r\n    addItemReference: function(entity, reference){\r\n        var item = this.getItem(entity);\r\n        if(item){\r\n            item.references.push(reference);\r\n        } \r\n    },\r\n    getItemIndex: function(entity){\r\n        if(!entity) return -1;\r\n        var idx = this._entities.indexOf(entity);\r\n        if(idx >= 0 && !this._items[idx].removed) {\r\n            return this._items[idx].itemIndex;\r\n        }\r\n        return -1;\r\n    },\r\n    getItem: function(entity, onlyAvailable){\r\n        if(!entity) return null;\r\n        var idx = this._entities.indexOf(entity);\r\n        if(idx >= 0 && (!onlyAvailable || !this._items[idx].removed)) {\r\n            return this._items[idx];\r\n        }\r\n        return null;\r\n    },\r\n    remove: function(entity){\r\n        var idx = this._entities.indexOf(entity);\r\n        if(idx >= 0) {\r\n            var item = this._items[idx];\r\n            if(!item.removed) {\r\n                this._items[idx].removed = true;\r\n                this.length--;\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    },\r\n    getItems: function(){\r\n        return this._items.filter(function(it){ return !it.removed })\r\n    },\r\n    getByResponse: function(response, i){\r\n        //use response.headers['content-id']\r\n        \r\n        var idx = i;\r\n        \r\n        if(!this._indexCalculated){\r\n            this._indexCalculated = true;\r\n            this._dataForResult = this._items.filter(function(it){\r\n                return !it.removed;\r\n            });\r\n        }\r\n         \r\n        var item = this._dataForResult[idx++];\r\n        return item ? item.entity : null\r\n    },\r\n    setProcessed: function(entity){\r\n        var idx = this._entities.indexOf(entity);\r\n        if(idx >= 0) {\r\n            var item = this._items[idx];\r\n            if(!item.isProcessed){\r\n                this._items[idx].isProcessed = true;\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    },\r\n    \r\n    maxItemIndex: { value: 0 },\r\n    length: { value: 0 }\r\n});\r\n\r\n\r\n\r\n$C('$data.storageProviders.oData.oDataProvider', $data.StorageProviderBase, null,\r\n{\r\n    constructor: function (cfg, ctx) {\r\n        this.SqlCommands = [];\r\n        this.context = ctx;\r\n        this.providerConfiguration = $data.typeSystem.extend({\r\n            dbCreation: $data.storageProviders.DbCreationType.DropTableIfChanged,\r\n            oDataServiceHost: \"/odata.svc\",\r\n            serviceUrl: \"\",\r\n            maxDataServiceVersion: '4.0',\r\n            dataServiceVersion: undefined,\r\n            user: null,\r\n            password: null,\r\n            withCredentials: false,\r\n            //enableJSONP: undefined,\r\n            //useJsonLight: undefined\r\n            //disableBatch: undefined\r\n            //withReferenceMethods: undefined\r\n            //enableDeepSave: undefined\r\n            UpdateMethod: 'PATCH'\r\n        }, cfg);\r\n\r\n        if (this.providerConfiguration.maxDataServiceVersion === \"4.0\") {\r\n            if (typeof odatajs === 'undefined' || typeof odatajs.oData === 'undefined') {\r\n                Guard.raise(new Exception('odatajs is required', 'Not Found!'));\r\n            } else {\r\n                this.oData = odatajs.oData\r\n            }\r\n        } else {\r\n            if (typeof OData === 'undefined') {\r\n                Guard.raise(new Exception('datajs is required', 'Not Found!'));\r\n            } else {\r\n                this.oData = OData;\r\n                datajsPatch(this.oData);\r\n            }\r\n        }\r\n\r\n        //this.fixkDataServiceVersions(cfg);\r\n\r\n        if (this.context && this.context._buildDbType_generateConvertToFunction && this.buildDbType_generateConvertToFunction) {\r\n            this.context._buildDbType_generateConvertToFunction = this.buildDbType_generateConvertToFunction;\r\n        }\r\n        if (this.context && this.context._buildDbType_modifyInstanceDefinition && this.buildDbType_modifyInstanceDefinition) {\r\n            this.context._buildDbType_modifyInstanceDefinition = this.buildDbType_modifyInstanceDefinition;\r\n        }\r\n    },\r\n    fixkDataServiceVersions: function (cfg) {\r\n        if (this.providerConfiguration.dataServiceVersion > this.providerConfiguration.maxDataServiceVersion) {\r\n            this.providerConfiguration.dataServiceVersion = this.providerConfiguration.maxDataServiceVersion;\r\n        }\r\n\r\n        if (this.providerConfiguration.setDataServiceVersionToMax === true) {\r\n            this.providerConfiguration.dataServiceVersion = this.providerConfiguration.maxDataServiceVersion;\r\n        }\r\n\r\n        if ((cfg && !cfg.UpdateMethod && this.providerConfiguration.dataServiceVersion < '3.0') || !this.providerConfiguration.dataServiceVersion) {\r\n            this.providerConfiguration.UpdateMethod = 'MERGE';\r\n        }\r\n    },\r\n    initializeStore: function (callBack) {\r\n        callBack = $data.PromiseHandlerBase.createCallbackSettings(callBack);\r\n        switch (this.providerConfiguration.dbCreation) {\r\n            case $data.storageProviders.DbCreationType.DropAllExistingTables:\r\n                var that = this;\r\n                if (this.providerConfiguration.serviceUrl) {\r\n\r\n                    var requestData = [{\r\n                        requestUri: that.providerConfiguration.serviceUrl + \"/Delete\",\r\n                        method: 'POST'\r\n                    }, function (d) {\r\n                        //console.log(\"RESET oData database\");\r\n                        callBack.success(that.context);\r\n                    }, function (error) {\r\n                        callBack.success(that.context);\r\n                    }];\r\n\r\n                    this.appendBasicAuth(requestData[0], this.providerConfiguration.user, this.providerConfiguration.password, this.providerConfiguration.withCredentials);\r\n                    //if (this.providerConfiguration.user) {\r\n                    //    requestData[0].user = this.providerConfiguration.user;\r\n                    //    requestData[0].password = this.providerConfiguration.password || \"\";\r\n                    //}\r\n\r\n                    this.context.prepareRequest.call(this, requestData);\r\n                    this.oData.request.apply(this, requestData);\r\n                } else {\r\n                    callBack.success(that.context);\r\n                }\r\n                break;\r\n            default:\r\n                callBack.success(this.context);\r\n                break;\r\n        }\r\n    },\r\n    buildDbType_generateConvertToFunction: function (storageModel, context) {\r\n        return function (logicalEntity, convertedItems) {\r\n            var dbInstance = new storageModel.PhysicalType();\r\n            dbInstance.entityState = logicalEntity.entityState;\r\n\r\n            storageModel.PhysicalType.memberDefinitions.getPublicMappedProperties().forEach(function (property) {\r\n                dbInstance.initData[property.name] = logicalEntity[property.name];\r\n            }, this);\r\n\r\n            if (storageModel.Associations) {\r\n                storageModel.Associations.forEach(function (association) {\r\n                    if ((association.FromMultiplicity == \"*\" && association.ToMultiplicity == \"0..1\") ||\r\n                        (association.FromMultiplicity == \"0..1\" && association.ToMultiplicity == \"1\") ||\r\n                        (association.FromMultiplicity == '$$unbound')) {\r\n                        var refValue = logicalEntity[association.FromPropertyName];\r\n                        if (/*refValue !== null &&*/ refValue !== undefined) {\r\n                            if (refValue instanceof $data.Array) {\r\n                                dbInstance.initData[association.FromPropertyName] = dbInstance[association.FromPropertyName] || [];\r\n                                refValue.forEach(function (rv) {\r\n                                    var item = convertedItems.getItem(rv, true)\r\n                                    var contentId = item ? item.itemIndex : -1;\r\n                                    if (rv.entityState == $data.EntityState.Modified || contentId < 0) {\r\n                                        var sMod = context._storageModel.getStorageModel(rv.getType())\r\n                                        var tblName = sMod.TableName;\r\n                                        var pk = '(' + context.storageProvider.getEntityKeysValue({ data: rv, entitySet: context.getEntitySetFromElementType(rv.getType()) }) + ')';\r\n                                        dbInstance.initData[association.FromPropertyName].push({ __metadata: { uri: tblName + pk } });\r\n                                    } else {\r\n                                        if (contentId < 0) { Guard.raise(\"Dependency graph error\"); }\r\n                                        //dbInstance.initData[association.FromPropertyName].push({ __metadata: { uri: \"$\" + (contentId) } });\r\n                                        dbInstance.initData[association.FromPropertyName].push({ __convertedRefence: item });\r\n                                    }\r\n                                }, this);\r\n                            } else if (refValue === null) {\r\n                                dbInstance.initData[association.FromPropertyName] = null;\r\n                            } else {\r\n                                var item = convertedItems.getItem(refValue, true);\r\n                                var contentId = item ? item.itemIndex : -1;\r\n                                if (refValue.entityState == $data.EntityState.Modified || contentId < 0) {\r\n                                    var sMod = context._storageModel.getStorageModel(refValue.getType())\r\n                                    var tblName = sMod.TableName;\r\n                                    var pk = '(' + context.storageProvider.getEntityKeysValue({ data: refValue, entitySet: context.getEntitySetFromElementType(refValue.getType()) }) + ')';\r\n                                    dbInstance.initData[association.FromPropertyName] = { __metadata: { uri: tblName + pk } };\r\n                                } else {\r\n                                    if (contentId < 0) { Guard.raise(\"Dependency graph error\"); }\r\n                                    //dbInstance.initData[association.FromPropertyName] = { __metadata: { uri: \"$\" + (contentId) } };\r\n                                    dbInstance.initData[association.FromPropertyName] = { __convertedRefence: item };\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }, this);\r\n            }\r\n            if (storageModel.ComplexTypes) {\r\n                storageModel.ComplexTypes.forEach(function (cmpType) {\r\n                    dbInstance.initData[cmpType.FromPropertyName] = logicalEntity[cmpType.FromPropertyName];\r\n                }, this);\r\n            }\r\n            return dbInstance;\r\n        };\r\n    },\r\n    buildDbType_modifyInstanceDefinition: function () { return; },\r\n    executeQuery: function (query, callBack) {\r\n        callBack = $data.PromiseHandlerBase.createCallbackSettings(callBack);\r\n\r\n        var sql = {};\r\n        try {\r\n            sql = this._compile(query);\r\n        } catch (e) {\r\n            callBack.error(e);\r\n            return;\r\n        }\r\n        var schema = this.context;\r\n\r\n        var that = this;\r\n        var countProperty = \"@odata.count\";\r\n\r\n        var requestData = [\r\n            {\r\n                requestUri: this.providerConfiguration.oDataServiceHost + sql.queryText,\r\n                method: sql.method,\r\n                data: sql.postData,\r\n                headers: {\r\n                }\r\n            },\r\n            function (data, textStatus, jqXHR) {\r\n\r\n                if (!data && textStatus.body && !sql.isBatchExecuteQuery) data = JSON.parse(textStatus.body);\r\n                if (callBack.success) {\r\n                    var processSuccess = function (query, data, sql) {\r\n                        query.rawDataList = typeof data === 'string' ? [{ cnt: Container.convertTo(data, $data.Integer) }] : data;\r\n                        if (sql.withInlineCount && typeof data === 'object' && (typeof data[countProperty] !== 'undefined' || ('d' in data && typeof data.d[countProperty] !== 'undefined'))) {\r\n                            query.__count = new Number(typeof data[countProperty] !== 'undefined' ? data[countProperty] : data.d[countProperty]).valueOf();\r\n                        }\r\n                    }\r\n\r\n                    if (sql.isBatchExecuteQuery) {\r\n                        query.rawDataList = sql.subQueries;\r\n                        for (var i = 0; i < data.__batchResponses.length; i++) {\r\n                            var resp = data.__batchResponses[i];\r\n\r\n                            if (!resp.data) {\r\n                                if (resp.body) {\r\n                                    resp.data = JSON.parse(resp.body);\r\n                                } else {\r\n                                    callBack.error(that.parseError(resp, arguments));\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            processSuccess(sql.subQueries[i], resp.data, sql.subQueries[i]._getComplitedData());\r\n                        }\r\n                    } else {\r\n                        processSuccess(query, data, sql);\r\n                    }\r\n\r\n                    callBack.success(query);\r\n                }\r\n            },\r\n            function (error) {\r\n                callBack.error(that.parseError(error, arguments));\r\n            },\r\n            sql.isBatchExecuteQuery ? this.oData.batch.batchHandler : undefined\r\n        ];\r\n\r\n        if (typeof this.providerConfiguration.enableJSONP !== 'undefined') {\r\n            requestData[0].enableJsonpCallback = this.providerConfiguration.enableJSONP;\r\n        }\r\n        if (typeof this.providerConfiguration.useJsonLight !== 'undefined') {\r\n            requestData[0].useJsonLight = this.providerConfiguration.useJsonLight;\r\n        }\r\n\r\n        this.appendBasicAuth(requestData[0], this.providerConfiguration.user, this.providerConfiguration.password, this.providerConfiguration.withCredentials);\r\n        //if (this.providerConfiguration.user) {\r\n        //    requestData[0].user = this.providerConfiguration.user;\r\n        //    requestData[0].password = this.providerConfiguration.password || \"\";\r\n        //}\r\n\r\n        this.context.prepareRequest.call(this, requestData);\r\n        //$data.ajax(requestData);\r\n        //OData.request(requestData, requestData.success, requestData.error);\r\n        this.oData.request.apply(this, requestData);\r\n    },\r\n    _compile: function (queryable, params) {\r\n        var compiler = new $data.storageProviders.oData.oDataCompiler();\r\n        var compiled = compiler.compile(queryable);\r\n        return compiled;\r\n    },\r\n    saveChanges: function (callBack, changedItems) {\r\n        if (changedItems.length > 0) {\r\n            this.saveInternal(changedItems, callBack);\r\n        }\r\n        else {\r\n            callBack.success(0);\r\n        }\r\n    },\r\n    saveInternal: function (changedItems, callBack) {\r\n        var independentBlocks = this.buildIndependentBlocks(changedItems);\r\n        if(checkODataMode(this, \"enableDeepSave\")){\r\n            this._checkDeepSave(changedItems)\r\n        }\r\n        var convertedItems = this._buildSaveData(independentBlocks, changedItems)\r\n        var actionMode = this.saveStrategySelector(convertedItems);\r\n        if(actionMode){\r\n            actionMode.save(this, convertedItems, callBack);\r\n        } else {\r\n            callBack.error(new Exception('Not Found', 'Save action not found'));\r\n        }\r\n    },\r\n    saveStrategySelector: function(convertedItems){\r\n        for(var i = 0; i < this.saveStrategies.length; i++){\r\n            var saveAction = this.saveStrategies[i];\r\n            if(saveAction.condition(this, convertedItems)){\r\n                return saveAction;\r\n            }\r\n        }\r\n        \r\n        return null;\r\n    },\r\n    saveStrategies: {\r\n        value: [\r\n            batchSaveStrategy,\r\n            singleSaveStrategy,\r\n            emptySaveStrategy\r\n        ]\r\n    },\r\n    \r\n    _discoverSaveOrder: function(changedItems){\r\n        var entityItems = changedItems.map(function(it){ return it.data });\r\n        var entityInfo = changedItems.map(function(it){ return { path: [], visited: false, result: true } });\r\n        var entityQueue = [];\r\n        var discoveredEntities = [];\r\n       \r\n        var process = function(currentEntity){\r\n            var index = entityItems.indexOf(currentEntity);\r\n            var changedItem = changedItems[index];\r\n            var info = entityInfo[index];\r\n            \r\n            if(info.visited) return info.result;\r\n            if(info.visiting) return false;\r\n            \r\n            var references = [];\r\n            if(changedItem.referredBy){\r\n                references = references.concat(changedItem.referredBy);\r\n            }\r\n            if(changedItem.dependentOn){\r\n                references = references.concat(changedItem.dependentOn);\r\n            }\r\n            \r\n            for(var i = 0; i < references.length; i++){\r\n                var ref = references[i];\r\n                if(discoveredEntities.indexOf(ref) < 0){\r\n                    entityQueue.push(ref);\r\n                    discoveredEntities.push(ref);\r\n                    var refIndex = entityItems.indexOf(ref);\r\n                    changedItems[refIndex].deepParent = currentEntity;\r\n                }\r\n            }\r\n        }\r\n        \r\n        \r\n        for(var i = 0; i < changedItems.length; i++){\r\n            var changedItem = changedItems[i];\r\n            if(entityQueue.indexOf(changedItem.data) < 0){\r\n                entityQueue.push(changedItem.data);\r\n                discoveredEntities.push(changedItem.data);\r\n                entityInfo[i].parent = null;\r\n            }\r\n            \r\n            while(entityQueue.length){\r\n                var currentItem = entityQueue.shift();\r\n                process(currentItem);\r\n            }\r\n        }\r\n    },\r\n    \r\n    _checkDeepSave: function(changedItems){\r\n        var entityItems = changedItems.map(function(it){ return it.data });\r\n        var entityInfo = changedItems.map(function(it){ return { path: [], visited: false, result: true } });\r\n       \r\n        var discover = function(changedItem, parent, index){\r\n            var info = entityInfo[index];\r\n            if(info.visited) return info.result;\r\n            if(info.visiting) return false;\r\n            \r\n            var references = [];\r\n            if(changedItem.referredBy){\r\n                references = references.concat(changedItem.referredBy);\r\n            }\r\n            if(changedItem.dependentOn){\r\n                references = references.concat(changedItem.dependentOn);\r\n            }\r\n            \r\n            \r\n            if(references.length === 0){\r\n                info.visited = true;\r\n                info.result = true;\r\n            } else {\r\n                info.visiting = true;\r\n                \r\n                for(var i = 0; i < references.length; i++){\r\n                    var entity = references[i]\r\n                    var idx = entityItems.indexOf(entity);\r\n                    var innerChangeItem = changedItems[idx];\r\n                    if(!innerChangeItem) return false; \r\n                    if(innerChangeItem === parent) continue;\r\n                    \r\n                    var result = discover(innerChangeItem, changedItem, idx);\r\n                    info.result = info.result && changedItem.data.entityState === $data.EntityState.Added && (!changedItem.additionalDependentOn || changedItem.additionalDependentOn.length === 0) && result;\r\n                }\r\n                delete info.visiting;\r\n                info.visited = true; \r\n            }\r\n            \r\n            changedItem.enableDeepSave = info.result;\r\n            return info.result;\r\n        }\r\n        \r\n        \r\n        for(var i = 0; i < changedItems.length; i++){\r\n            var changedItem = changedItems[i];\r\n            discover(changedItem, null, i);\r\n        }\r\n        \r\n        this._discoverSaveOrder(changedItems);\r\n    },\r\n    \r\n    _buildSaveData: function(independentBlocks, changedItems) {\r\n        var convertedItems = new $data.storageProviders.oData.RequestManager();\r\n        for (var index = 0; index < independentBlocks.length; index++) {\r\n            for (var i = 0; i < independentBlocks[index].length; i++) {\r\n                var independentItem = independentBlocks[index][i];\r\n                \r\n                var request = null;\r\n                var item = convertedItems.getItem(independentItem.data)\r\n                if(!item){\r\n                    request = new activities.RequestBuilder(this)\r\n                    request.add(new activities.SetUrl(this.providerConfiguration.oDataServiceHost + '/'))\r\n                    item = convertedItems.add(independentItem, request);\r\n                }\r\n                request = item.request;\r\n                \r\n                var entityState = independentItem.data.entityState;\r\n                if(typeof this._buildRequestObject['EntityState_' + entityState] === 'function'){\r\n                    this._buildRequestObject['EntityState_' + entityState](this, independentItem, convertedItems, request, changedItems)\r\n                } else {\r\n                    Guard.raise(new Exception(\"Not supported Entity state\"));\r\n                }\r\n            }\r\n        }\r\n        \r\n        return convertedItems;\r\n    },\r\n    _buildRequestObject: {\r\n        value: {\r\n            'EntityState_20': function(provider, item, convertedItem, request, changedItems){\r\n                request.add(\r\n                    new activities.SetMethod(\"POST\"), \r\n                    new activities.AppendUrl(item.entitySet.tableName)\r\n                )\r\n                \r\n                provider.save_getInitData(item, convertedItem, undefined, undefined, request, changedItems);\r\n            },\r\n            'EntityState_30': function(provider, item, convertedItem, request, changedItems){\r\n                request.add(\r\n                    new activities.SetMethod(provider.providerConfiguration.UpdateMethod),\r\n                    new activities.AppendUrl(item.entitySet.tableName), \r\n                    new activities.AppendUrl(\"(\" + provider.getEntityKeysValue(item) + \")\")\r\n                )\r\n                \r\n                provider.addETagHeader(item, request)\r\n                \r\n                provider.save_getInitData(item, convertedItem, undefined, undefined, request, changedItems);\r\n            },\r\n            'EntityState_40': function(provider, item, convertedItem, request, changedItems){\r\n                request.add(\r\n                    new activities.SetMethod(\"DELETE\"),\r\n                    new activities.ClearRequestData(),\r\n                    new activities.AppendUrl(item.entitySet.tableName),\r\n                    new activities.AppendUrl(\"(\" + provider.getEntityKeysValue(item) + \")\")\r\n                )\r\n                \r\n                provider.addETagHeader(item, request)\r\n            },\r\n        }\r\n    },\r\n    reload_fromResponse: function (item, data, response) {\r\n        var that = this;\r\n        item.getType().memberDefinitions.getPublicMappedProperties().forEach(function (memDef) {\r\n            var propType = Container.resolveType(memDef.type);\r\n            if (memDef.computed || memDef.key || !memDef.inverseProperty) {\r\n                if (memDef.concurrencyMode === $data.ConcurrencyMode.Fixed) {\r\n                    //unescape?\r\n                    //item[memDef.name] = response.headers.ETag || response.headers.Etag || response.headers.etag;\r\n                    item[memDef.name] = data['@odata.etag'];\r\n\r\n                } else if (memDef.isAssignableTo) {\r\n                    if (data[memDef.name]) {\r\n                        item[memDef.name] = new propType(data[memDef.name], { converters: that.fieldConverter.fromDb });\r\n                    } else {\r\n                        item[memDef.name] = data[memDef.name]\r\n                    }\r\n\r\n                } else if (propType === $data.Array && memDef.elementType) {\r\n                    var aeType = Container.resolveType(memDef.elementType);\r\n                    if (data[memDef.name] && Array.isArray(data[memDef.name])) {\r\n                        var arrayProperty = [];\r\n                        for (var ap = 0; ap < data[memDef.name].length; ap++) {\r\n                            var aitem = data[memDef.name][ap];\r\n                            if (aeType.isAssignableTo && !Guard.isNullOrUndefined(aitem)) {\r\n                                arrayProperty.push(new aeType(aitem, { converters: that.fieldConverter.fromDb }));\r\n                            } else {\r\n                                var etypeName = Container.resolveName(aeType);\r\n                                var econverter = that.fieldConverter.fromDb[etypeName];\r\n\r\n                                arrayProperty.push(econverter ? econverter(aitem) : aitem);\r\n                            }\r\n                        }\r\n                        item[memDef.name] = arrayProperty;\r\n                    } else if (!data[memDef.name]) {\r\n                        item[memDef.name] = data[memDef.name]\r\n                    }\r\n\r\n                } else {\r\n                    var typeName = Container.resolveName(memDef.type);\r\n                    var converter = that.fieldConverter.fromDb[typeName];\r\n\r\n                    item[memDef.name] = converter ? converter(data[memDef.name]) : data[memDef.name];\r\n                }\r\n            }\r\n        }, this);\r\n    },\r\n\r\n    save_getInitData: function (item, convertedItems, isComplex, isDeep, request, changedItems) {\r\n        var self = this;\r\n        if (!isComplex) {\r\n            item.physicalData = this.context._storageModel.getStorageModel(item.data.getType()).PhysicalType.convertTo(item.data, convertedItems);\r\n        } else {\r\n            item.physicalData = item.data;\r\n        }\r\n        var hasSavedProperty = item.data.entityState === $data.EntityState.Added;\r\n        item.physicalData.getType().memberDefinitions.asArray().forEach(function (memdef) {\r\n            hasSavedProperty = self.propertyConversationSelector(item, memdef, convertedItems, request, changedItems, isDeep) || hasSavedProperty;\r\n        }, this);\r\n        \r\n        if(!hasSavedProperty && !isDeep){\r\n            convertedItems.remove(item.data)\r\n        }\r\n    },\r\n    propertyConversationSelector: function(item, memdef, convertedItems, request, changedItems, isDeep) {\r\n        if (memdef.kind == $data.MemberTypes.complexProperty) {\r\n            return this._complexPropertySelector.apply(this, arguments)\r\n        }\r\n        \r\n        if (memdef.kind == $data.MemberTypes.property) {\r\n            return this._propertySelector.apply(this, arguments);\r\n        }\r\n        \r\n        if(memdef.kind == $data.MemberTypes.navProperty){\r\n            return this._navigationPropertySelector.apply(this, arguments);\r\n        }\r\n        \r\n        return false;\r\n    },\r\n    _complexPropertySelector: function(item, memdef, convertedItems, request, changedItems, isDeep){\r\n        return this.propertyConversationStrategies[\"complex\"].apply(this, arguments)\r\n    },\r\n    _propertySelector: function(item, memdef, convertedItems, request, changedItems, isDeep){\r\n        if(typeof memdef.concurrencyMode === 'undefined') {\r\n            switch (true){\r\n                case memdef.notMapped: \r\n                    return false;\r\n                case memdef.key === true:\r\n                    this.propertyConversationStrategies[\"default\"].apply(this, arguments)\r\n                    return false;\r\n                case isDeep:\r\n                case item.data.entityState === $data.EntityState.Added:\r\n                case this._propertyIsChanged(item.data, memdef):\r\n                    return this.propertyConversationStrategies[\"default\"].apply(this, arguments)\r\n                default: return false;\r\n            }\r\n        }\r\n        \r\n        return false;\r\n    },\r\n    _navigationPropertySelector: function(item, memdef, convertedItems, request, changedItems, isDeep){\r\n        if (isDeep || item.data.entityState === $data.EntityState.Added || this._propertyIsChanged(item.data, memdef)) {\r\n            \r\n            var navigationValue = item.data[memdef.name];\r\n            if (checkODataMode(this, 'enableDeepSave') && navigationValue && item.data.entityState === $data.EntityState.Added) {\r\n                var result = null;\r\n                if (Array.isArray(navigationValue)) {\r\n                    navigationValue.forEach((navItem, index) => {\r\n                        this._processDeepSaveItems(item, memdef, convertedItems, request, changedItems, navItem, \"deepSaveArray\", index);\r\n                        //update not supported here\r\n                    })\r\n                    return true; //item.data is new\r\n                } else {\r\n                    result = this._processDeepSaveItems(item, memdef, convertedItems, request, changedItems, navigationValue, \"deepSave\")\r\n                }\r\n                \r\n                if(result !== null){\r\n                    return result;\r\n                }\r\n            }\r\n            \r\n\r\n            return this._simpleNavigationPropertySelector.apply(this, arguments)\r\n        }\r\n        return false;\r\n    },\r\n    _simpleNavigationPropertySelector: function(item, memdef, convertedItems, request, changedItems, isDeep){\r\n        if(checkODataMode(this, 'withReferenceMethods')){\r\n            return this.propertyConversationStrategies[\"withReferenceMethods\"].apply(this, arguments)\r\n        } \r\n        \r\n        return this.propertyConversationStrategies[\"navigation\"].apply(this, arguments)\r\n    },\r\n    \r\n    _processDeepSaveItems: function(item, memdef, convertedItems, request, changedItems, navigationEntity, strategy, index){\r\n        var referencedItems = changedItems.filter(function(it){ return it.data == navigationEntity });\r\n        \r\n        if (referencedItems.length === 1 &&\r\n            referencedItems[0].enableDeepSave &&\r\n            navigationEntity.entityState === $data.EntityState.Added &&\r\n            referencedItems[0].deepParent === item.data) \r\n        {\r\n            var deepItem = convertedItems.getItem(referencedItems[0].data);\r\n            if(!deepItem) {\r\n                var referencedRequest = new activities.RequestBuilder(this)\r\n                referencedRequest.add(new activities.SetUrl(this.providerConfiguration.oDataServiceHost + '/'))\r\n                deepItem = convertedItems.add(referencedItems[0], referencedRequest)\r\n            }\r\n            \r\n            convertedItems.addItemReference(item.data, deepItem);\r\n            if(!deepItem.removed) {\r\n                convertedItems.remove(referencedItems[0].data)\r\n            }\r\n\r\n            return this.propertyConversationStrategies[strategy].call(this, item, memdef, convertedItems, request, changedItems, index)\r\n        }\r\n        \r\n        return null;\r\n    },\r\n    _propertyIsChanged: function(entity, memdef){\r\n        return entity && entity.changedProperties && entity.changedProperties.some(function (def) { return def.name === memdef.name; })\r\n    },\r\n    propertyConversationStrategies: {\r\n        value:{\r\n            \"default\": function (item, memdef, convertedItems, request, changedItems) {\r\n                var typeName = Container.resolveName(memdef.type);\r\n                var converter = this.fieldConverter.toDb[typeName];\r\n                request.add(new activities.SetProperty(memdef.name, converter ? converter(item.physicalData[memdef.name]) : item.physicalData[memdef.name]))\r\n                return true;\r\n            },\r\n            \"withReferenceMethods\": function (item, memdef, convertedItems, request, changedItems) {\r\n                var reqItem = convertedItems.getItem(item.data);\r\n                if(reqItem && reqItem.removed) return false; //deep saved\r\n                \r\n                var additionalRequest = new activities.RequestBuilder(this)\r\n                var value = item.physicalData[memdef.name];\r\n                if(value){\r\n                    additionalRequest.add(new activities.SetMethod('POST'))\r\n                    if (value.__metadata) {\r\n                        additionalRequest.add(new activities.SetProperty('@odata.id', this.providerConfiguration.oDataServiceHost + '/' + value.__metadata.uri))\r\n                    } else if (value.__convertedRefence) {\r\n                        additionalRequest.add(function(req, provider){\r\n                            var targetItem = value.__convertedRefence;\r\n                            req.data = req.data || {};\r\n                            if(targetItem.isProcessed){\r\n                                req.data[\"@odata.id\"] = provider.getEntityUrlReference(targetItem.entity);\r\n                            } else {\r\n                                req.data[\"@odata.id\"] = provider.providerConfiguration.oDataServiceHost + '/$' + targetItem.itemIndex\r\n                            } \r\n                        })\r\n                    }\r\n                } else {\r\n                    if(item.data.entityState === $data.EntityState.Added || value !== null) return\r\n                    \r\n                    additionalRequest.add(\r\n                        new activities.SetUrl(this.providerConfiguration.oDataServiceHost + '/'),\r\n                        new activities.AppendUrl(item.entitySet.tableName),\r\n                        new activities.AppendUrl(\"(\" + this.getEntityKeysValue(item) + \")\"),\r\n                        new activities.SetMethod('DELETE'),\r\n                        new activities.ClearRequestData())\r\n                }\r\n                \r\n                additionalRequest.add(function(req, provider){\r\n                    if(reqItem.isProcessed || item.data.entityState !== $data.EntityState.Added){\r\n                        req.requestUri = provider.providerConfiguration.oDataServiceHost + '/';\r\n                        req.requestUri += item.entitySet.tableName;\r\n                        req.requestUri += \"(\" + provider.getEntityKeysValue(item) + \")\";\r\n                        provider.addETagHeader(item, req)\r\n                    } else {\r\n                        req.requestUri = '$' + reqItem.itemIndex;\r\n                        provider.addETagHeader(item, req, $data.defaults.OData.eTagAny)\r\n                    } \r\n                    \r\n                    req.requestUri += '/' + memdef.name + '/$ref';\r\n                })\r\n                \r\n                var refItem = convertedItems.add(item, additionalRequest, false);\r\n                convertedItems.addItemReference(item.data, refItem);\r\n                return false;\r\n            },\r\n            \"deepSave\": function (item, memdef, convertedItems, request, changedItems) {\r\n                var refItem = convertedItems.getItem(item.data[memdef.name])\r\n                request.add(function(req, provider){\r\n                        req.data[memdef.name] = refItem.request.build().get().data;\r\n                })\r\n                return true;\r\n            },\r\n            \"deepSaveArray\": function (item, memdef, convertedItems, request, changedItems, index) {\r\n                var refItem = convertedItems.getItem(item.data[memdef.name][index])\r\n                request.add(function(req, provider){\r\n                        req.data[memdef.name] = req.data[memdef.name] || [];\r\n                        req.data[memdef.name].push(refItem.request.build().get().data);\r\n                })\r\n                return true;\r\n            },\r\n            \"navigation\": function (item, memdef, convertedItems, request, changedItems) {\r\n                \r\n                request.add(function(req, provider){\r\n                    req.data = req.data || {};\r\n                    \r\n                    if(item.physicalData[memdef.name] && item.physicalData[memdef.name].__metadata) {\r\n                        req.data[memdef.name + \"@odata.bind\"] = item.physicalData[memdef.name].__metadata.uri;\r\n                    } else if (item.physicalData[memdef.name] && item.physicalData[memdef.name].__convertedRefence) {\r\n                        var targetItem = item.physicalData[memdef.name].__convertedRefence;\r\n                        if(targetItem.isProcessed){\r\n                            req.data[memdef.name + \"@odata.bind\"] = provider.getEntityUrlReference(targetItem.entity);\r\n                        } else {\r\n                            req.data[memdef.name + \"@odata.bind\"] = \"$\" + targetItem.itemIndex;\r\n                        } \r\n                    } else if(item.physicalData[memdef.name] === null) {\r\n                        req.data[memdef.name + \"@odata.bind\"] = null;\r\n                    }\r\n                })\r\n                return true;\r\n            },\r\n            \"complex\": function(item, memdef, convertedItems, request, changedItems){\r\n                if (item.physicalData[memdef.name]) {\r\n                    var innerRequest = new activities.RequestBuilder(this);\r\n                    this.save_getInitData({ data: item.physicalData[memdef.name] }, convertedItems, true, true, innerRequest);\r\n                    request.add(function(req){\r\n                        req.data = req.data || {}\r\n                        req.data[memdef.name] = innerRequest.build().get().data;\r\n                    })\r\n                    return true;\r\n                }\r\n                return false;\r\n            }\r\n        }\r\n    },\r\n    \r\n    addETagHeader: function(item, request, value){\r\n        var property = item.data.getType().memberDefinitions.getPublicMappedProperties().filter(function (memDef) { return memDef.concurrencyMode === $data.ConcurrencyMode.Fixed });\r\n        if (property && property[0]) {\r\n            var headerValue = (typeof value !== \"undefined\") ? value : item.data[property[0].name];\r\n            if(typeof headerValue !== \"undefined\"){\r\n                if(request instanceof activities.RequestBuilder){\r\n                    request.add(new activities.SetHeaderProperty('If-Match', headerValue))\r\n                } else {\r\n                    request.headers['If-Match'] = headerValue;\r\n                }\r\n            }\r\n        }\r\n    },\r\n    \r\n    getTraceString: function (queryable) {\r\n        var sqlText = this._compile(queryable);\r\n        return queryable;\r\n    },\r\n    supportedDataTypes: {\r\n        value: [$data.Array, $data.Integer, $data.String, $data.Number, $data.Blob, $data.Boolean, $data.Date, $data.Object, $data.GeographyPoint, $data.Guid,\r\n            $data.GeographyLineString, $data.GeographyPolygon, $data.GeographyMultiPoint, $data.GeographyMultiLineString, $data.GeographyMultiPolygon, $data.GeographyCollection,\r\n            $data.GeometryPoint, $data.GeometryLineString, $data.GeometryPolygon, $data.GeometryMultiPoint, $data.GeometryMultiLineString, $data.GeometryMultiPolygon, $data.GeometryCollection,\r\n            $data.Byte, $data.SByte, $data.Decimal, $data.Float, $data.Int16, $data.Int32, $data.Int64, $data.Time, $data.Day, $data.DateTimeOffset, $data.Duration],\r\n        writable: false\r\n    },\r\n\r\n    supportedBinaryOperators: {\r\n        value: {\r\n            equal: { mapTo: 'eq', dataType: \"boolean\", allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.OrderExpression] },\r\n            notEqual: { mapTo: 'ne', dataType: \"boolean\", allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.OrderExpression] },\r\n            equalTyped: { mapTo: 'eq', dataType: \"boolean\", allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.OrderExpression] },\r\n            notEqualTyped: { mapTo: 'ne', dataType: \"boolean\", allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.OrderExpression] },\r\n            greaterThan: { mapTo: 'gt', dataType: \"boolean\", allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.OrderExpression] },\r\n            greaterThanOrEqual: { mapTo: 'ge', dataType: \"boolean\", allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.OrderExpression] },\r\n\r\n            lessThan: { mapTo: 'lt', dataType: \"boolean\", allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.OrderExpression] },\r\n            lessThenOrEqual: { mapTo: 'le', dataType: \"boolean\", allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.OrderExpression] },\r\n            or: { mapTo: 'or', dataType: \"boolean\", allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.OrderExpression] },\r\n            and: { mapTo: 'and', dataType: \"boolean\", allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.OrderExpression] },\r\n\r\n            add: { mapTo: 'add', dataType: \"number\", allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.OrderExpression] },\r\n            divide: { mapTo: 'div', allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.OrderExpression] },\r\n            multiply: { mapTo: 'mul', allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.OrderExpression] },\r\n            subtract: { mapTo: 'sub', allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.OrderExpression] },\r\n            modulo: { mapTo: 'mod', allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.OrderExpression] },\r\n\r\n            \"in\": { mapTo: \"in\", allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.OrderExpression] }\r\n        }\r\n    },\r\n\r\n    supportedUnaryOperators: {\r\n        value: {\r\n            not: { mapTo: 'not' }\r\n        }\r\n    },\r\n\r\n    supportedFieldOperations: {\r\n        value: {\r\n            /* string functions */\r\n\r\n            contains: {\r\n                mapTo: \"substringof\",\r\n                dataType: \"boolean\", allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.OrderExpression],\r\n                parameters: [{ name: \"substring\", dataType: \"string\" }, { name: \"@expression\" }]\r\n            },\r\n\r\n            startsWith: {\r\n                mapTo: \"startswith\",\r\n                dataType: \"string\", allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.OrderExpression],\r\n                parameters: [{ name: \"@expression\", dataType: \"string\" }, { name: \"strFragment\", dataType: \"string\" }]\r\n            },\r\n\r\n            endsWith: {\r\n                mapTo: \"endswith\",\r\n                dataType: \"string\", allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.OrderExpression],\r\n                parameters: [{ name: \"@expression\", dataType: \"string\" }, { name: \"strFragment\", dataType: \"string\" }]\r\n            },\r\n\r\n            length: [{\r\n                allowedType: 'string',\r\n                dataType: \"number\", allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.ProjectionExpression],\r\n                parameters: [{ name: \"@expression\", dataType: \"string\" }]\r\n            },\r\n            {\r\n                allowedType: 'GeographyLineString',\r\n                mapTo: \"geo.length\",\r\n                dataType: \"number\", allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.OrderExpression],\r\n                parameters: [{ name: \"@expression\", dataType: ['GeographyLineString'] }],\r\n                fixedDataType: 'decimal'\r\n            },\r\n            {\r\n                allowedType: 'GeometryLineString',\r\n                mapTo: \"geo.length\",\r\n                dataType: \"number\", allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.OrderExpression],\r\n                parameters: [{ name: \"@expression\", dataType: 'GeometryLineString' }],\r\n                fixedDataType: 'decimal'\r\n            }],\r\n\r\n            strLength: {\r\n                mapTo: \"length\",\r\n                dataType: \"number\", allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.ProjectionExpression],\r\n                parameters: [{ name: \"@expression\", dataType: \"string\" }]\r\n            },\r\n\r\n            indexOf: {\r\n                dataType: \"number\", allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.OrderExpression],\r\n                mapTo: \"indexof\",\r\n                baseIndex: 1,\r\n                parameters: [{ name: '@expression', dataType: \"string\" }, { name: 'strFragment', dataType: 'string' }]\r\n            },\r\n\r\n            replace: {\r\n                dataType: \"string\", allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.OrderExpression],\r\n                parameters: [{ name: '@expression', dataType: \"string\" }, { name: 'strFrom', dataType: 'string' }, { name: 'strTo', dataType: 'string' }]\r\n            },\r\n\r\n            substr: {\r\n                mapTo: \"substring\",\r\n                dataType: \"string\", allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.OrderExpression],\r\n                parameters: [{ name: \"@expression\", dataType: \"string\" }, { name: \"startFrom\", dataType: \"number\" }, { name: \"length\", dataType: \"number\", optional: \"true\" }]\r\n            },\r\n\r\n            toLowerCase: {\r\n                mapTo: \"tolower\",\r\n                dataType: \"string\", allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.OrderExpression],\r\n                parameters: [{ name: \"@expression\", dataType: \"string\" }]\r\n            },\r\n\r\n            toUpperCase: {\r\n                mapTo: \"toupper\",\r\n                dataType: \"string\", allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.OrderExpression],\r\n                parameters: [{ name: \"@expression\", dataType: \"string\" }]\r\n\r\n            },\r\n\r\n            trim: {\r\n                dataType: \"string\", allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.OrderExpression],\r\n                parameters: [{ name: \"@expression\", dataType: \"string\" }]\r\n            },\r\n\r\n\r\n            concat: {\r\n                dataType: \"string\", allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.OrderExpression],\r\n                parameters: [{ name: \"@expression\", dataType: \"string\" }, { name: \"strFragment\", dataType: \"string\" }]\r\n            },\r\n\r\n\r\n            /* data functions */\r\n\r\n            day: {\r\n                allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.OrderExpression],\r\n                parameters: [{ name: \"@expression\", dataType: \"date\" }]\r\n            },\r\n            hour: {\r\n                allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.OrderExpression],\r\n                parameters: [{ name: \"@expression\", dataType: \"date\" }]\r\n            },\r\n            minute: {\r\n                allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.OrderExpression],\r\n                parameters: [{ name: \"@expression\", dataType: \"date\" }]\r\n            },\r\n            month: {\r\n                allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.OrderExpression],\r\n                parameters: [{ name: \"@expression\", dataType: \"date\" }]\r\n            },\r\n            second: {\r\n                allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.OrderExpression],\r\n                parameters: [{ name: \"@expression\", dataType: \"date\" }]\r\n            },\r\n            year: {\r\n                allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.OrderExpression],\r\n                parameters: [{ name: \"@expression\", dataType: \"date\" }]\r\n            },\r\n\r\n            /* number functions */\r\n            round: {\r\n                allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.OrderExpression],\r\n                parameters: [{ name: \"@expression\", dataType: \"date\" }]\r\n            },\r\n            floor: {\r\n                allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.OrderExpression],\r\n                parameters: [{ name: \"@expression\", dataType: \"date\" }]\r\n            },\r\n            ceiling: {\r\n                allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.OrderExpression],\r\n                parameters: [{ name: \"@expression\", dataType: \"date\" }]\r\n            },\r\n\r\n\r\n            /* geo functions */\r\n            distance: [{\r\n                allowedType: 'GeographyPoint',\r\n                mapTo: \"geo.distance\",\r\n                dataType: \"number\", allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.OrderExpression],\r\n                parameters: [{ name: \"@expression\", dataType: 'GeographyPoint' }, { name: \"to\", dataType: 'GeographyPoint' }],\r\n                fixedDataType: 'decimal'\r\n            }, {\r\n                allowedType: 'GeometryPoint',\r\n                mapTo: \"geo.distance\",\r\n                dataType: \"number\", allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.OrderExpression],\r\n                parameters: [{ name: \"@expression\", dataType: 'GeometryPoint' }, { name: \"to\", dataType: 'GeometryPoint' }],\r\n                fixedDataType: 'decimal'\r\n            }],\r\n\r\n            intersects: [{\r\n                allowedType: 'GeographyPoint',\r\n                mapTo: \"geo.intersects\",\r\n                dataType: \"boolean\", allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.OrderExpression],\r\n                parameters: [{ name: \"@expression\", dataType: 'GeographyPoint' }, { name: \"in\", dataType: 'GeographyPolygon' }]\r\n\r\n            }, {\r\n                allowedType: 'GeometryPoint',\r\n                mapTo: \"geo.intersects\",\r\n                dataType: \"boolean\", allowedIn: [$data.Expressions.FilterExpression, $data.Expressions.OrderExpression],\r\n                parameters: [{ name: \"@expression\", dataType: 'GeometryPoint' }, { name: \"in\", dataType: 'GeometryPolygon' }]\r\n\r\n            }]\r\n        },\r\n        enumerable: true,\r\n        writable: true\r\n    },\r\n    supportedSetOperations: {\r\n        value: {\r\n            filter: {\r\n                allowedIn: [$data.Expressions.IncludeExpression],\r\n                parameters: [{ name: \"filter\", dataType: \"$data.Queryable\" }],\r\n                frameType: $data.Expressions.FilterExpression,\r\n                includeFrameName: '$filter',\r\n                includeCompiler: '$data.storageProviders.oData.oDataWhereCompiler'\r\n            },\r\n            map: {\r\n                allowedIn: [$data.Expressions.IncludeExpression],\r\n                parameters: [{ name: \"map\", dataType: \"$data.Queryable\" }],\r\n                frameType: $data.Expressions.ProjectionExpression,\r\n                includeFrameName: '$select',\r\n                includeCompiler: '$data.storageProviders.oData.oDataProjectionCompiler'\r\n            },\r\n            length: {},\r\n            forEach: {},\r\n            toArray: {},\r\n            single: {},\r\n            some: {\r\n                invokable: false,\r\n                allowedIn: [$data.Expressions.FilterExpression],\r\n                parameters: [{ name: \"some\", dataType: \"$data.Queryable\" }],\r\n                mapTo: 'any',\r\n                frameType: $data.Expressions.SomeExpression\r\n            },\r\n            every: {\r\n                invokable: false,\r\n                allowedIn: [$data.Expressions.FilterExpression],\r\n                parameters: [{ name: \"every\", dataType: \"$data.Queryable\" }],\r\n                mapTo: 'all',\r\n                frameType: $data.Expressions.EveryExpression\r\n            },\r\n            take: {\r\n                allowedIn: [$data.Expressions.IncludeExpression],\r\n                parameters: [{ name: \"take\", dataType: \"$data.Integer\" }],\r\n                frameType: $data.Expressions.PagingExpression,\r\n                includeFrameName: '$top',\r\n                includeCompiler: '$data.storageProviders.oData.oDataPagingCompiler'\r\n            },\r\n            skip: {\r\n                allowedIn: [$data.Expressions.IncludeExpression],\r\n                parameters: [{ name: \"skip\", dataType: \"$data.Integer\" }],\r\n                frameType: $data.Expressions.PagingExpression,\r\n                includeFrameName: '$skip',\r\n                includeCompiler: '$data.storageProviders.oData.oDataPagingCompiler'\r\n            },\r\n            orderBy: {\r\n                allowedIn: [$data.Expressions.IncludeExpression],\r\n                parameters: [{ name: \"orderBy\", dataType: \"$data.Queryable\" }],\r\n                frameType: $data.Expressions.OrderExpression,\r\n                includeFrameName: '$orderby',\r\n                includeCompiler: '$data.storageProviders.oData.oDataOrderCompiler'\r\n            },\r\n            orderByDescending: {\r\n                allowedIn: [$data.Expressions.IncludeExpression],\r\n                parameters: [{ name: \"orderByDescending\", dataType: \"$data.Queryable\" }],\r\n                frameType: $data.Expressions.OrderExpression,\r\n                frameTypeFactory: function(source, selector){\r\n                    return new $data.Expressions.OrderExpression(source, selector, $data.Expressions.ExpressionType.OrderByDescending)\r\n                },\r\n                includeFrameName: '$orderby',\r\n                includeCompiler: '$data.storageProviders.oData.oDataOrderCompiler'\r\n            },\r\n            first: {},\r\n            include: {},\r\n            batchDelete: {},\r\n            withInlineCount: {\r\n                allowedIn: [$data.Expressions.IncludeExpression],\r\n                parameters: [],\r\n                frameType: $data.Expressions.InlineCountExpression,\r\n                includeFrameName: '$count',\r\n                implementation: function(){ return 'true' }\r\n            },\r\n            find: {}\r\n        },\r\n        enumerable: true,\r\n        writable: true\r\n    },\r\n    supportedContextOperation: {\r\n        value: {\r\n            batchExecuteQuery: true\r\n        },\r\n        enumerable: true,\r\n        writable: true\r\n    },\r\n\r\n    fieldConverter: { value: $data.oDataConverter },\r\n    resolveTypeOperations: function (operation, expression, frameType) {\r\n        var memDef = expression.entityType.getMemberDefinition(operation);\r\n        if (!memDef ||\r\n            !memDef.method ||\r\n            memDef.method.IsSideEffecting !== false ||\r\n            !memDef.method.returnType ||\r\n            !(frameType === $data.Expressions.FilterExpression || frameType === $data.Expressions.OrderExpression))\r\n        {\r\n            Guard.raise(new Exception(\"Entity '\" + expression.entityType.name + \"' Operation '\" + operation + \"' is not supported by the provider\"));\r\n        }\r\n\r\n        return memDef;\r\n    },\r\n    resolveSetOperations: function (operation, expression, frameType) {\r\n        if (expression) {\r\n            var esDef = expression.storageModel.ContextType.getMemberDefinition(expression.storageModel.ItemName);\r\n            if (esDef && esDef.actions && esDef.actions[operation]) {\r\n                var memDef = $data.MemberDefinition.translateDefinition(esDef.actions[operation], operation, this.getType());\r\n                if (!memDef ||\r\n                    !memDef.method ||\r\n                    memDef.method.IsSideEffecting !== false ||\r\n                    !memDef.method.returnType ||\r\n                    !(frameType === $data.Expressions.FilterExpression || frameType === $data.Expressions.OrderExpression)) {\r\n\r\n                    Guard.raise(new Exception(\"Collection '\" + expression.storageModel.ItemName + \"' Operation '\" + operation + \"' is not supported by the provider\"));\r\n                }\r\n\r\n                return memDef;\r\n            }\r\n        }\r\n        return $data.StorageProviderBase.prototype.resolveSetOperations.apply(this, arguments);\r\n\r\n    },\r\n    resolveContextOperations: function (operation, expression, frameType) {\r\n        var memDef = this.context.getType().getMemberDefinition(operation);\r\n        if (!memDef ||\r\n            !memDef.method ||\r\n            memDef.method.IsSideEffecting !== false ||\r\n            !memDef.method.returnType ||\r\n            !(frameType === $data.Expressions.FilterExpression || frameType === $data.Expressions.OrderExpression)) {\r\n            Guard.raise(new Exception(\"Context '\" + expression.instance.getType().name + \"' Operation '\" + operation + \"' is not supported by the provider\"));\r\n        }\r\n        return memDef;\r\n    },\r\n    \r\n    getEntityUrlReference: function(entity){\r\n        var sMod = this.context._storageModel.getStorageModel(entity.getType())\r\n        var tblName = sMod.TableName;\r\n        var pk = '(' + this.getEntityKeysValue({ data: entity, entitySet: this.context.getEntitySetFromElementType(entity.getType()) }) + ')';\r\n        return this.providerConfiguration.oDataServiceHost + '/' + tblName + pk;\r\n    },\r\n\r\n    getEntityKeysValue: function (entity) {\r\n        var result = [];\r\n        var keyValue = undefined;\r\n        var memDefs = entity.data.getType().memberDefinitions.getKeyProperties();\r\n        for (var i = 0, l = memDefs.length; i < l; i++) {\r\n            var field = memDefs[i];\r\n            if (field.key) {\r\n                keyValue = entity.data[field.name];\r\n                var typeName = Container.resolveName(field.type);\r\n\r\n                var converter = this.fieldConverter.toDb[typeName];\r\n                keyValue = converter ? converter(keyValue) : keyValue;\r\n\r\n                converter = this.fieldConverter.escape[typeName];\r\n                keyValue = converter ? converter(keyValue) : keyValue;\r\n\r\n                result.push(field.name + \"=\" + keyValue);\r\n            }\r\n        }\r\n        if (result.length > 1) {\r\n            return result.join(\",\");\r\n        }\r\n        return keyValue;\r\n    },\r\n    getFieldUrl: function (entity, fieldName, entitySet) {\r\n        var keyPart = this.getEntityKeysValue({ data: entity });\r\n        var servicehost = this.providerConfiguration.oDataServiceHost\r\n        if (servicehost.lastIndexOf('/') === servicehost.length)\r\n            servicehost = servicehost.substring(0, servicehost.length - 1);\r\n\r\n        return servicehost + '/' + entitySet.tableName + '(' + keyPart + ')/' + fieldName + '/$value';\r\n    },/*\r\n    getServiceMetadata: function () {\r\n        $data.ajax(this._setAjaxAuthHeader({\r\n            url: this.providerConfiguration.oDataServiceHost + \"/$metadata\",\r\n            dataType: \"xml\",\r\n            success: function (d) {\r\n                console.log(\"OK\");\r\n                console.dir(d);\r\n                console.log(typeof d);\r\n                window[\"s\"] = d;\r\n                window[\"k\"] = this.nsResolver;\r\n                //s.evaluate(\"edmx:Edmx/edmx:DataServices/Schema\", s, $data.storageProviders.oData.oDataProvider.prototype.nsResolver, XPathResult.ANY_TYPE, null).iterateNext()\r\n\r\n            },\r\n            error: function (error) {\r\n                console.log(\"error:\");\r\n                console.dir(error);\r\n            }\r\n        }));\r\n    },\r\n    nsResolver: function (sPrefix) {\r\n        switch (sPrefix) {\r\n            case \"edmx\":\r\n                return \"http://schemas.microsoft.com/ado/2007/06/edmx\";\r\n                break;\r\n            case \"m\":\r\n                return \"http://schemas.microsoft.com/ado/2007/08/dataservices/metadata\";\r\n                break;\r\n            case \"d\":\r\n                return \"http://schemas.microsoft.com/ado/2007/08/dataservices\";\r\n                break;\r\n            default:\r\n                return \"http://schemas.microsoft.com/ado/2008/09/edm\";\r\n                break;\r\n        }\r\n    }\r\n    */\r\n    parseError: function(error, data){\r\n\r\n        var message = (error.response || error || {}).body || '';\r\n        try {\r\n            if(message.indexOf('{') === 0){\r\n                var errorObj = JSON.parse(message);\r\n                errorObj = errorObj['odata.error'] || errorObj.error || errorObj;\r\n                if (errorObj.message) {\r\n                    message = errorObj.message.value || errorObj.message;\r\n                }\r\n            }\r\n        } catch (e) {}\r\n\r\n        return new Exception(message, error.message, data || error);\r\n    },\r\n    appendBasicAuth: function (request, user, password, withCredentials) {\r\n        request.headers = request.headers || {};\r\n        if (!request.headers.Authorization && user && password) {\r\n            request.headers.Authorization = \"Basic \" + this.__encodeBase64(user + \":\" + password);\r\n        }\r\n        if (withCredentials){\r\n            request.withCredentials = withCredentials;\r\n        }\r\n    },\r\n    __encodeBase64: function (val) {\r\n        var b64array = \"ABCDEFGHIJKLMNOP\" +\r\n                           \"QRSTUVWXYZabcdef\" +\r\n                           \"ghijklmnopqrstuv\" +\r\n                           \"wxyz0123456789+/\" +\r\n                           \"=\";\r\n\r\n        var input = val;\r\n        var base64 = \"\";\r\n        var hex = \"\";\r\n        var chr1, chr2, chr3 = \"\";\r\n        var enc1, enc2, enc3, enc4 = \"\";\r\n        var i = 0;\r\n\r\n        do {\r\n            chr1 = input.charCodeAt(i++);\r\n            chr2 = input.charCodeAt(i++);\r\n            chr3 = input.charCodeAt(i++);\r\n\r\n            enc1 = chr1 >> 2;\r\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\r\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\r\n            enc4 = chr3 & 63;\r\n\r\n            if (isNaN(chr2)) {\r\n                enc3 = enc4 = 64;\r\n            } else if (isNaN(chr3)) {\r\n                enc4 = 64;\r\n            }\r\n\r\n            base64 = base64 +\r\n                        b64array.charAt(enc1) +\r\n                        b64array.charAt(enc2) +\r\n                        b64array.charAt(enc3) +\r\n                        b64array.charAt(enc4);\r\n            chr1 = chr2 = chr3 = \"\";\r\n            enc1 = enc2 = enc3 = enc4 = \"\";\r\n        } while (i < input.length);\r\n\r\n        return base64;\r\n    },\r\n    checkODataMode: function(functionName){\r\n        return checkODataMode(this, functionName)\r\n    }\r\n}, null);\r\n\r\n$data.StorageProviderBase.registerProvider(\"oData\", $data.storageProviders.oData.oDataProvider);\r\n","export class RequestBuilder {\r\n    constructor(context, request){\r\n        this._context = context;\r\n        this._request = request || {};\r\n        this._activities = [];\r\n    }\r\n    get(){\r\n        return this._request; \r\n    }\r\n    add(...activities){\r\n        this._activities.push(...activities);\r\n        return this;\r\n    }\r\n    build(){\r\n        this._request.headers = this._request.headers || {}\r\n        this._request.data = this._request.data || {}\r\n        \r\n        this._activities.forEach((a) =>  a instanceof RequestActivity ? \r\n            a.implementation(this._request, this._context) :\r\n            a(this._request, this._context))\r\n        \r\n        this._activities = [];\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class RequestActivity {\r\n    constructor(){}\r\n    implementation(request, provider){ }\r\n}\r\n\r\nexport class SetRequestActivity extends RequestActivity {\r\n    constructor(key, value){\r\n        super()\r\n        this.key = key;\r\n        this.value = value;\r\n    }\r\n    implementation(request, provider){ }\r\n}\r\n\r\nexport class SetRequestProperty extends SetRequestActivity {\r\n    implementation(request, provider){\r\n        request[this.key] = this.value\r\n    }\r\n}\r\n\r\nexport class SetDataProperty extends SetRequestActivity {\r\n    implementation(request, provider){\r\n        request.data[this.key] = this.value\r\n    }\r\n}\r\n\r\nexport class SetHeaderProperty extends SetRequestActivity {\r\n    implementation(request, provider){\r\n        request.headers[this.key] = this.value\r\n    }\r\n}\r\n\r\nexport class SetUrl extends SetRequestProperty {\r\n    constructor(url){\r\n        super('requestUri', url)\r\n    }\r\n}\r\n\r\nexport class AppendUrl extends SetUrl {\r\n    implementation(request, provider){\r\n        request[this.key] == request[this.key] || \"\"\r\n        request[this.key] += this.value\r\n    }\r\n}\r\n\r\nexport class SetMethod extends SetRequestProperty {\r\n    constructor(method){\r\n        super('method', method)\r\n    }\r\n}\r\n\r\nexport class SetProperty extends SetDataProperty {\r\n}\r\n\r\nexport class SetNavigationProperty extends SetDataProperty {\r\n    implementation(request, provider){\r\n        request.data[this.key] = this.value\r\n    }\r\n}\r\n\r\nexport class ClearRequestData extends RequestActivity {\r\n    implementation(request, provider){\r\n        delete request.data;\r\n    }\r\n}\r\n","import $data, { $C, Guard, Container, Exception, MemberDefinition } from 'jaydata/core';\r\n\r\n$C('$data.storageProviders.oData.oDataWhereCompiler', $data.Expressions.EntityExpressionVisitor, null, {\r\n    constructor: function (provider, lambdaPrefix) {\r\n        this.provider = provider;\r\n        this.lambdaPrefix = lambdaPrefix;\r\n    },\r\n\r\n    compile: function (expression, context) {\r\n        this.Visit(expression, context);\r\n    },\r\n\r\n    VisitParametricQueryExpression: function (expression, context) {\r\n        this.Visit(expression.expression, context);\r\n    },\r\n\r\n    VisitUnaryExpression: function (expression, context) {\r\n        context.data += expression.resolution.mapTo;\r\n        context.data += \"(\";\r\n        this.Visit(expression.operand, context);\r\n        context.data += \")\";\r\n    },\r\n\r\n\r\n    VisitSimpleBinaryExpression: function (expression, context) {\r\n        context.data += \"(\";\r\n        //TODO refactor!!!\r\n        if (expression.nodeType == \"in\") {\r\n            Guard.requireType(\"expression.right\", expression.type, $data.Expressions.ConstantExpression);\r\n            var paramValue = expression.right.value;\r\n            if (!(paramValue instanceof Array)) { Guard.raise(new Exception(\"Right to the 'in' operator must be an array value\")); }\r\n            var result = null;\r\n            var orResolution = { mapTo: \"or\", dataType: \"boolean\", name: \"or\" };\r\n            var eqResolution = { mapTo: \"eq\", dataType: \"boolean\", name: \"equal\" };\r\n\r\n            paramValue.forEach(function (item) {\r\n                var idValue = item;\r\n                var idCheck = Container.createSimpleBinaryExpression(expression.left, idValue,\r\n                    $data.Expressions.ExpressionType.Equal, \"==\", \"boolean\", eqResolution);\r\n                if (result) {\r\n                    result = Container.createSimpleBinaryExpression(result, idCheck,\r\n                    $data.Expressions.ExpressionType.Or, \"||\", \"boolean\", orResolution);\r\n                } else {\r\n                    result = idCheck;\r\n                };\r\n            });\r\n            var temp = context.data;\r\n            context.data = '';\r\n            this.Visit(result, context);\r\n            context.data = temp + context.data.replace(/\\(/g, '').replace(/\\)/g, '');\r\n        } else {\r\n            this.Visit(expression.left, context);\r\n            context.data += \" \";\r\n            context.data += expression.resolution.mapTo;\r\n            context.data += \" \";\r\n            this.Visit(expression.right, context);\r\n        };\r\n        context.data += \")\";\r\n\r\n    },\r\n\r\n    VisitEntityFieldExpression: function (expression, context) {\r\n        this.Visit(expression.source, context);\r\n        if (expression.source instanceof $data.Expressions.ComplexTypeExpression) {\r\n            context.data += \"/\";\r\n        }\r\n        this.Visit(expression.selector, context);\r\n    },\r\n\r\n    VisitAssociationInfoExpression: function (expression, context) {\r\n        context.data += expression.associationInfo.FromPropertyName;\r\n    },\r\n\r\n    VisitMemberInfoExpression: function (expression, context) {\r\n        context.data += expression.memberName;\r\n    },\r\n\r\n    VisitQueryParameterExpression: function (expression, context) {\r\n        var typeName = Container.resolveName(expression.type);\r\n\r\n        var converter = this.provider.fieldConverter.toDb[typeName];\r\n        var value = converter ? converter(expression.value) : expression.value;\r\n\r\n        converter = this.provider.fieldConverter.escape[typeName];\r\n        context.data += converter ? converter(value) : value;\r\n    },\r\n\r\n    VisitEntityFieldOperationExpression: function (expression, context) {\r\n        Guard.requireType(\"expression.operation\", expression.operation, $data.Expressions.MemberInfoExpression);\r\n\r\n        //TODO refactor!\r\n        var opDef = expression.operation.memberDefinition;\r\n        var opName = opDef.mapTo || opDef.name;\r\n        context.data += opName;\r\n        context.data += \"(\";\r\n        var paramCounter = 0;\r\n        var params = opDef.parameters || [{ name: \"@expression\" }];\r\n\r\n        var args = params.map(function (item, index) {\r\n            if (item.name === \"@expression\") {\r\n                return expression.source;\r\n            } else {\r\n                return expression.parameters[paramCounter++]\r\n            };\r\n        });\r\n\r\n        args.forEach(function (arg, index) {\r\n            if (index > 0) {\r\n                context.data += \",\";\r\n            };\r\n            this.Visit(arg, context);\r\n        }, this);\r\n        context.data += \")\";\r\n    },\r\n    VisitEntityFunctionOperationExpression: function (expression, context) {\r\n        Guard.requireType(\"expression.operation\", expression.operation, $data.Expressions.MemberInfoExpression);\r\n        this.Visit(expression.source, context);\r\n\r\n        //TODO refactor!\r\n        var opDef = expression.operation.memberDefinition;\r\n        var opName = opDef.mapTo || opDef.name;\r\n        context.data += opName;\r\n        context.data += \"(\";\r\n        var paramCounter = 0;\r\n        var params = opDef.method.params || [{ name: \"@expression\" }];\r\n\r\n        var args = params.map(function (item, index) {\r\n            if (item.name === \"@expression\") {\r\n                return expression.source;\r\n            } else {\r\n                return expression.parameters[paramCounter++]\r\n            };\r\n        });\r\n        var i = 0;\r\n        args.forEach(function (arg, index) {\r\n            if (arg === undefined || (arg instanceof $data.Expressions.ConstantExpression && typeof arg.value === 'undefined'))\r\n                return;\r\n\r\n            if (i > 0) {\r\n                context.data += \",\";\r\n            };\r\n            i++;\r\n            context.data += params[index].name + '=';\r\n            this.Visit(arg, context);\r\n        }, this);\r\n        context.data += \")\";\r\n    },\r\n    VisitContextFunctionOperationExpression: function (expression, context) {\r\n        return this.VisitEntityFunctionOperationExpression(expression, context);\r\n    },\r\n\r\n    VisitConstantExpression: function (expression, context) {\r\n        var typeName = Container.resolveName(expression.type);\r\n\r\n        var converter = this.provider.fieldConverter.toDb[typeName];\r\n        var value = converter ? converter(expression.value) : expression.value;\r\n\r\n        converter = this.provider.fieldConverter.escape[typeName];\r\n        context.data += converter ? converter(value) : value;\r\n    },\r\n\r\n    VisitEntityExpression: function (expression, context) {\r\n        this.Visit(expression.source, context);\r\n\r\n        if (this.lambdaPrefix && expression.selector.lambda) {\r\n            context.lambda = expression.selector.lambda;\r\n            context.data += (expression.selector.lambda + '/');\r\n        }\r\n\r\n        //if (expression.selector instanceof $data.Expressions.EntityExpression) {\r\n        //    this.Visit(expression.selector, context);\r\n        //}\r\n    },\r\n\r\n    VisitEntitySetExpression: function (expression, context) {\r\n        this.Visit(expression.source, context);\r\n        if (expression.selector instanceof $data.Expressions.AssociationInfoExpression) {\r\n            this.Visit(expression.selector, context);\r\n            context.data += \"/\";\r\n        }\r\n    },\r\n\r\n    VisitFrameOperationExpression: function (expression, context) {\r\n        this.Visit(expression.source, context);\r\n\r\n        Guard.requireType(\"expression.operation\", expression.operation, $data.Expressions.MemberInfoExpression);\r\n\r\n        //TODO refactor!\r\n        var opDef = expression.operation.memberDefinition;\r\n        var opName = opDef.mapTo || opDef.name;\r\n        context.data += opName;\r\n        context.data += \"(\";\r\n        var paramCounter = 0;\r\n        var params = opDef.parameters || [{ name: \"@expression\" }];\r\n\r\n        var args = params.map(function (item, index) {\r\n            if (item.name === \"@expression\") {\r\n                return expression.source;\r\n            } else {\r\n                return expression.parameters[paramCounter++]\r\n            };\r\n        });\r\n\r\n        for (var i = 0; i < args.length; i++) {\r\n            var arg = args[i];\r\n            if (arg && arg.value instanceof $data.Queryable) {\r\n                var frameExpression = new opDef.frameType(arg.value.expression);\r\n                var preparator = Container.createQueryExpressionCreator(arg.value.entityContext);\r\n                var prep_expression = preparator.Visit(frameExpression);\r\n\r\n                var compiler = new $data.storageProviders.oData.oDataWhereCompiler(this.provider, true);\r\n                var frameContext = { data: \"\" };\r\n                var compiled = compiler.compile(prep_expression, frameContext);\r\n\r\n                context.data += (frameContext.lambda + ': ' + frameContext.data);\r\n            };\r\n        }\r\n        context.data += \")\";\r\n    }\r\n});\r\n"],"sourceRoot":"/source/"}